{"version":3,"sources":["containers/Container/index.tsx","constants/dataTypes.ts","components/AddToUserButton/index.tsx","components/TagButton/index.tsx","components/TagsSection/index.tsx","components/Button/index.tsx","components/CommentEditor/index.tsx","actions/reviewRatingActions.ts","components/StarRater/index.tsx","components/CommentBlock/index.tsx","utils/styleHelpers.ts","components/ReviewList/index.tsx","components/FavPeopleDropDown/index.tsx","containers/MediaPage/index.tsx"],"names":["StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","MediaType","StyledButton","button","theme","isAddedToUser","palette","grey","primary","light","AddToUserButton","addLabel","removeLabel","isAdded","toBackendOnClick","useState","setIsAddedToUser","useEffect","onClick","StyledTagButton","secondary","TagButton","tag","StyledTagsSection","div","TagsSection","tags","tagObjects","map","index","key","tagObject","tagName","color","fontSize","main","Button","label","CommentEditorAction","TextArea","textarea","host","window","location","protocol","connect","addReviewAction","reviewObject","type","ADD_REVIEW","text","userId","userName","datePosted","editReviewAction","EDIT_REVIEW","editCommentProps","review","currentText","setCurrentText","value","onChange","event","target","style","textAlign","addCommentProps","now","Date","toString","actionType","Add","rating","undefined","axios","put","mediaId","mediaType","userRating","then","res","console","log","catch","err","Edit","closeEdit","StyledIconButton","IconButton","VerticallyCenteredDiv","changeRatingAction","CHANGE_RATING","ratedStar","setStar","readonly","readOnlyRating","hideReadOnlyLabel","twoDecimalRatingString","clickStar","starIndex","ratingToSet","userHasReviewText","delete","changeRating","toFixed","Box","display","Array","star","split","wholeNumberString","decimalString","wholeNumber","parseInt","decimalTimes100","fill","closestFifty","Math","round","getIcon","size","ml","Review","isCurrentUserComment","TopBar","ExpandableDiv","expanded","ShowMoreButton","ShowLessButton","deleteReviewAction","DELETE_REVIEW","isEdit","setIsEdit","setExpanded","hasOverflow","setHasOverflow","expandableRef","useRef","currentUserId","date","toDateString","isAuthor","useMemo","isOverflowing","ref","element","current","scrollHeight","clientHeight","scrollWidth","clientWidth","hasDivOverflown","Typography","variant","reviewUserName","deleteReview","mr","source","state","ownProps","reviews","reviewRatings","filter","r","otherUserReviews","currentUserReview","forEach","push","addCommentEditorOpen","setAddCommentEditor","hasAddedReview","initialStateReviews","slice","stateReviews","setStateReviews","rerenderReviews","totalReviews","length","gutterBottom","dataLength","next","setTimeout","theFetchNum","fetchedReviews","hasMore","loader","endMessage","FavPeopleDropDown","allPeople","favoritePeople","favKey","favPeople","setFavPeople","React","anchorEl","setAnchorEl","currentTarget","endIcon","Menu","id","keepMounted","open","Boolean","onClose","p","isFav","includes","MenuItem","person","filteredFavs","act","action","response","error","handleClose","StyledImage","img","StyledGridItem","Grid","CenteredDiv","StyledFormControl","FormControl","loadAllReviewsAction","reviewsArray","LOAD_REVIEWS_FROM_DB","pathname","o","isForLater","setForLater","isFavorite","setFavorite","watchedOrRead","setWatchedOrRead","title","start","image","people","genres","blurb","avgRating","mediaObject","setMediaObject","booksRead","moviesWatched","watchLater","readLater","favoriteMovies","favoriteBooks","favoriteAuthors","favoriteDirectors","userLists","setUserLists","storyTags","setStoryTags","unaddedStoryTags","setUnaddedStoryTags","addedStoryTags","setAddedStoryTags","sessionDataString","sessionStorage","getItem","sessionDataObj","JSON","parse","username","mediaRouteType","book","get","mediaRes","mediaData","data","reviewRatingRes","reviewArray","userRatingReviewArr","movie","average","nextStoryTags","tagData","sortedTags","sort","a","b","storyTagNames","t","unAdded","added","updateMediaInDB","tagsArray","addOrRemoveCall","container","direction","spacing","item","sm","src","addOrRemoveWatchOrRead","addOrRemoveWatchReadLater","addOrRemoveFavorites","fontStyle","join","InputLabel","Select","labelId","newAddedTags","filteredDeleteTags","tagId","filteredStoryTags","newDeleteTags"],"mappings":"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","file":"static/js/11.4ce3dcb3.chunk.js","sourcesContent":["import React, {ReactNode} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledContainer = styled(Container)`\r\n    margin-top: 85px;\r\n`;\r\n\r\ninterface MarginContainerProps {\r\n    maxWidth: 'lg'\r\n        | 'md'\r\n        | 'sm'\r\n        | 'xl'\r\n        | 'xs'\r\n        | false;\r\n    children: ReactNode;\r\n}\r\n\r\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\r\n    return (\r\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\r\n    );\r\n};\r\n\r\nexport default MarginContainer;\r\n","export enum MediaType {\r\n    movie = 'movie',\r\n    book = 'book',\r\n    start = ''\r\n}\r\n\r\nexport type CardData = {\r\n    title: string,\r\n    id: string,\r\n    mediaType: MediaType,\r\n    image: string, // the url, etc to the image\r\n    genres: string[],\r\n    nextStoryTags: string[],\r\n    people: string,\r\n    blurb: string,\r\n    avgRating: number\r\n}\r\n\r\nexport interface Tag{\r\n  tagId: string;\r\n  tagName: string;\r\n}\r\n","import styled from 'styled-components';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nconst StyledButton = styled.button<{ isAddedToUser: boolean }>`\r\n    background-color: ${({ theme, isAddedToUser }) => isAddedToUser ? theme.palette.grey[300] : theme.palette.primary.light};\r\n    border: none;\r\n    outline: none;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    margin: 5px;\r\n    color: ${({ isAddedToUser }) => isAddedToUser ? 'black' : 'white'};\r\n`;\r\n\r\ninterface AddToUserButtonProps {\r\n    addLabel: string;\r\n    removeLabel: string;\r\n    isAdded: boolean;\r\n    toBackendOnClick: any;\r\n}\r\n\r\nconst AddToUserButton: React.FC<AddToUserButtonProps> = (props: AddToUserButtonProps) => {\r\n    const { addLabel, removeLabel,isAdded, toBackendOnClick } = props;\r\n    const [isAddedToUser, setIsAddedToUser] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        setIsAddedToUser(isAdded);\r\n    }, [isAdded]);\r\n\r\n    const toggleAddedToUser = () => {\r\n        if (isAddedToUser) {\r\n            setIsAddedToUser(false);\r\n        } else {\r\n            setIsAddedToUser(true);\r\n        }\r\n        toBackendOnClick();\r\n    };\r\n\r\n    return (\r\n        <StyledButton\r\n            isAddedToUser={isAddedToUser}\r\n            onClick={() => toggleAddedToUser()}\r\n        >\r\n            {isAddedToUser ? removeLabel : addLabel}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nexport default AddToUserButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface TagsButtonProps {\r\n    tag: string;\r\n}\r\n\r\nconst StyledTagButton = styled.button`\r\n    border-radius: 7px;\r\n    color: white;\r\n    outline: none;\r\n    border: none;\r\n    margin: 5px;\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.palette.primary.light};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.palette.secondary.light};\r\n    }\r\n    font-size: 16px;\r\n    padding: 3px 5px 3px 5px;\r\n`;\r\n\r\nconst TagButton: React.FC<TagsButtonProps> = (props: TagsButtonProps) => {\r\n    const { tag } = props;\r\n    return (\r\n        <>\r\n            {tag && <StyledTagButton>{tag}</StyledTagButton>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagButton;\r\n","import React from 'react';\r\nimport TagButton from '../TagButton';\r\nimport styled from 'styled-components';\r\n\r\ninterface TagsSectionProps {\r\n    tags?: string[],\r\n    tagObjects?: Array<{ tagId: string, tagName: string }>\r\n}\r\n\r\nconst StyledTagsSection = styled.div`\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst TagsSection: React.FC<TagsSectionProps> = (props: TagsSectionProps) => {\r\n    const { tags, tagObjects } = props;\r\n    return (\r\n        <StyledTagsSection>\r\n            { tags && tags.map((tag, index) => <TagButton key={index} tag={tag}/>) }\r\n            { !tags && tagObjects && tagObjects.map((tagObject, index) => <TagButton key={index} tag={tagObject.tagName}/>) }\r\n        </StyledTagsSection>\r\n    );\r\n};\r\n\r\nexport default TagsSection;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button<{fontSize?: string, color?: string}>`\r\n    margin-right: 10px;\r\n    background: none;\r\n    border: none;\r\n    color: ${(props) => props.color} || ${({ theme }) => theme.palette.grey[500]};\r\n    cursor: pointer;\r\n    font-size: ${(props) => props.fontSize || '16px'};\r\n\r\n    &:hover {\r\n        color: ${({ theme }) => theme.palette.primary.main};\r\n    }\r\n`;\r\n\r\ninterface ButtonProps {\r\n    onClick: () => void;\r\n    label?: string;\r\n    children?: string;\r\n    fontSize?: string;\r\n    color?: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\r\n    const {onClick, label, children, color} = props;\r\n    return (\r\n        <StyledButton onClick={onClick} color={color}>\r\n            {label || children}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button';\r\nimport {connect} from 'react-redux';\r\nimport {addReviewAction, editReviewAction, ReviewObjectType} from '../../actions/reviewRatingActions';\r\nimport axios from 'axios';\r\n\r\nconst TextArea = styled.textarea`\r\n    height: 100px;\r\n    width: 99%;\r\n    resize: vertical;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif\r\n`;\r\n\r\nexport enum CommentEditorAction {\r\n    Add,\r\n    Edit\r\n}\r\n\r\nconst host = window.location.protocol + '//'+ window.location.host;\r\n\r\nconst CommentEditor: React.FC<any> = (props: any) => {\r\n    const [currentText, setCurrentText] = useState(props.editCommentProps?.review.text || '');\r\n\r\n    const submit = () => {\r\n        const { editCommentProps, addCommentProps } = props;\r\n        const now = new Date().toString();\r\n        switch(props.actionType) {\r\n            case CommentEditorAction.Add:\r\n                props.addReviewAction({\r\n                    text: currentText,\r\n                    userId: addCommentProps.userId,\r\n                    userName: addCommentProps.userName,\r\n                    datePosted: now,\r\n                    rating: undefined\r\n                } as ReviewObjectType);\r\n                axios.put(host + '/reviewRatings/review',\r\n                    {\r\n                        mediaId: addCommentProps.mediaId,\r\n                        mediaType: addCommentProps.mediaType,\r\n                        userName: addCommentProps.userName,\r\n                        userId: addCommentProps.userId,\r\n                        rating: addCommentProps.userRating,\r\n                        datePosted: now,\r\n                        text: currentText\r\n                    })\r\n                    .then((res: any) => {\r\n                        console.log(res);\r\n                    })\r\n                    .catch((err: any) => {\r\n                        console.log(err);\r\n                    });\r\n                break;\r\n            case CommentEditorAction.Edit:\r\n                const userId = editCommentProps.review.userId;\r\n                props.editReviewAction({\r\n                    text: currentText,\r\n                    userId: userId,\r\n                    userName: editCommentProps.review.userName,\r\n                    datePosted: now\r\n                } as ReviewObjectType);\r\n                axios.put(host + '/reviewRatings/review',\r\n                    {\r\n                        mediaId: editCommentProps.mediaId,\r\n                        mediaType: editCommentProps.mediaType,\r\n                        userName: editCommentProps.review.userName,\r\n                        userId: editCommentProps.review.userId,\r\n                        rating: editCommentProps.userRating,\r\n                        datePosted: now,\r\n                        text: currentText\r\n                    })\r\n                    .then((res: any) => {\r\n                        console.log(res);\r\n                    })\r\n                    .catch((err: any) => {\r\n                        console.log(err);\r\n                    });\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        props.closeEdit();\r\n    };\r\n\r\n    const changeMessageText = (event: any) => {\r\n        setCurrentText(event.target.value);\r\n    };\r\n\r\n    // TODO use a better editor - markdown text area? - for the text\r\n    return (\r\n        <>\r\n            <TextArea value={currentText} onChange={changeMessageText}/>\r\n            <div style={{textAlign: 'right'}}>\r\n                <Button onClick={submit}>Submit</Button>\r\n                <Button onClick={props.closeEdit}>Cancel</Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, { addReviewAction, editReviewAction })(CommentEditor);\r\n","import {\r\n    ADD_REVIEW, CHANGE_RATING,\r\n    DELETE_REVIEW,\r\n    EDIT_REVIEW,\r\n    LOAD_REVIEWS_FROM_DB,\r\n} from '../constants/reviewRatingConstants';\r\n\r\nexport interface ReviewObjectType {\r\n    text: string,\r\n    userId: string,\r\n    userName: string,\r\n    datePosted: string,\r\n    rating?: number | undefined\r\n}\r\n\r\nexport const loadAllReviewsAction = (reviewsArray: any[]) => {\r\n    return {\r\n        type: LOAD_REVIEWS_FROM_DB,\r\n        reviewsArray: reviewsArray\r\n    };\r\n};\r\n\r\nexport const addReviewAction = (reviewObject: ReviewObjectType) => {\r\n    return {\r\n        type: ADD_REVIEW,\r\n        text: reviewObject.text,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        datePosted: reviewObject.datePosted\r\n    };\r\n};\r\n\r\nexport const deleteReviewAction = (userId: string) => {\r\n    return {\r\n        type: DELETE_REVIEW,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const editReviewAction = (reviewObject: ReviewObjectType) => {\r\n    return {\r\n        type: EDIT_REVIEW,\r\n        text: reviewObject.text,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        datePosted: reviewObject.datePosted\r\n    };\r\n};\r\n\r\n\r\nexport const changeRatingAction = (reviewObject: { userId: string, userName: string, rating: number | undefined }) => {\r\n    return {\r\n        type: CHANGE_RATING,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        rating: reviewObject.rating\r\n    };\r\n};","import React, {useEffect, useState} from 'react';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {Box, IconButton} from '@material-ui/core';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\r\nimport styled from 'styled-components';\r\nimport {connect} from 'react-redux';\r\nimport {changeRatingAction} from '../../actions/reviewRatingActions';\r\nimport axios from 'axios';\r\nimport {MediaType} from '../../constants/dataTypes';\r\n\r\ninterface StarRaterProps {\r\n    readonly: boolean\r\n\r\n    // required if readonly === true\r\n    readOnlyRating?: number;\r\n    hideReadOnlyLabel?: boolean;\r\n\r\n    // required if readonly === false\r\n    userRating?: number;\r\n    userId?: string;\r\n    userName?: string;\r\n    userHasReviewText?: boolean;\r\n    mediaId?: string;\r\n    mediaType?: MediaType;\r\n}\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n    padding: 0px !important;\r\n`;\r\n\r\nconst VerticallyCenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst host = window.location.protocol + '//'+ window.location.host;\r\n\r\nconst getIcon = (index: number, rating: number | undefined) => {\r\n    const twoDecimalString = rating?.toFixed(2) || '0.00';\r\n    const [wholeNumberString, decimalString] = twoDecimalString.split('.');\r\n    const wholeNumber = parseInt(wholeNumberString);\r\n    const decimalTimes100 = parseInt(decimalString);\r\n    if ((index + 1) <= wholeNumber) {\r\n        return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n    } else if (index === wholeNumber) {\r\n        const closestFifty = Math.round(decimalTimes100 / 50)*50;\r\n        if (closestFifty === 0) {\r\n            return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        } else if (closestFifty === 50) {\r\n            return <StarHalfIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        } else if (closestFifty === 100) {\r\n            return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        }\r\n    } else {\r\n        return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n    }\r\n};\r\n\r\nconst changeRating = (props: any, userId: string, userName: string, rating: number | undefined) => {\r\n    props.changeRatingAction({ userId, userName, rating });\r\n    if (!rating && !props.userHasReviewText) {\r\n        axios.delete(host + `/reviewRatings`\r\n            + `/${props.mediaType}/${props.mediaId}/${userId}`)\r\n            .then((res: any) => {\r\n                console.log('Successfully deleted the reviewRating', res);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            });\r\n    } else {\r\n        axios.put(host + '/reviewRatings/rating',\r\n            {\r\n                mediaId: props.mediaId,\r\n                mediaType: props.mediaType,\r\n                userId: userId,\r\n                rating: rating\r\n            })\r\n            .then((res: any) => {\r\n                console.log('Successfully put the rating: ', res);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n};\r\n\r\nconst StarRater: React.FC<StarRaterProps> = (props: StarRaterProps) => {\r\n    const [ratedStar, setStar] = useState(0);\r\n    const { readonly, readOnlyRating, hideReadOnlyLabel, userRating, userId, userName } = props;\r\n    let twoDecimalRatingString = ''; // TODO set up tooltip functionality\r\n    if (readonly && readOnlyRating) {\r\n        twoDecimalRatingString = readOnlyRating.toFixed(2);\r\n    } else if (userRating) {\r\n        twoDecimalRatingString = userRating.toFixed(2);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!ratedStar) {\r\n            setStar(userRating || 0);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userRating]);\r\n\r\n    function clickStar(starIndex: number) {\r\n        const ratingToSet = ratedStar === starIndex ? starIndex - 1 : starIndex;\r\n        setStar(ratingToSet);\r\n        userId && userName && changeRating(props, userId, userName, ratingToSet);\r\n        // TODO use the api to set the rating (add the media type and media id as props)\r\n    }\r\n\r\n    return (\r\n        <Box display='flex'>\r\n            {[...Array(5)].map((star, index) => {\r\n                return (\r\n                    <VerticallyCenteredDiv key={index}>\r\n                        {readonly ?\r\n                            <>\r\n                                {\r\n                                    getIcon(index, readOnlyRating)\r\n                                }\r\n                            </>\r\n                            :\r\n                            <StyledIconButton size={'small'} onClick={() => clickStar(index + 1)}>\r\n                                {index < ratedStar ?\r\n                                    <StarIcon style={{fill: '#FFCC00'}} />\r\n                                    :\r\n                                    <StarBorderIcon style={{fill: '#FFCC00'}} />\r\n                                }\r\n                            </StyledIconButton>\r\n                        }\r\n                    </VerticallyCenteredDiv>\r\n                );\r\n            })}\r\n            <Box ml={1}>{readonly && !hideReadOnlyLabel && twoDecimalRatingString}</Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default connect(null, { changeRatingAction })(StarRater);\r\n","import React, {useEffect, useMemo, useRef, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Box, Typography} from '@material-ui/core';\r\nimport Button from '../Button';\r\nimport {connect} from 'react-redux';\r\nimport {deleteReviewAction} from '../../actions/reviewRatingActions';\r\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport {hasDivOverflown} from '../../utils/styleHelpers';\r\nimport StarRater from '../StarRater';\r\nimport axios from 'axios';\r\n\r\ninterface CommentBlockProps {\r\n    review: any,\r\n    currentUserId: string,\r\n    isCurrentUserComment?: boolean,\r\n    mediaId?: string,\r\n    mediaType?: string,\r\n    userRating?: number | undefined;\r\n}\r\n\r\nconst Review = styled.div<{ isCurrentUserComment: boolean | undefined }>`\r\n    border-top: ${({ theme }) => `2px solid ${theme.palette.grey[400]}`};\r\n    border: ${({ theme, isCurrentUserComment }) => isCurrentUserComment && `2px solid ${theme.palette.grey[400]}`};\r\n    min-height: 50px;\r\n    padding: 5px;\r\n    padding-bottom: 0px;\r\n`;\r\n\r\nconst TopBar = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst ExpandableDiv = styled.div<{ expanded: boolean }>`\r\n    max-height: ${(props) => props.expanded ? '' : '200px'};\r\n    overflow: ${(props) => props.expanded ? 'visible' : 'hidden'};\r\n    position: relative;\r\n`;\r\n\r\nconst ShowMoreButton = styled.button`\r\n    border: none;\r\n    box-shadow: 0px 0 5px rgba(0, 0, 0, 0.3);\r\n    outline: none;\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    text-align: center;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    padding: 0px;\r\n    width: 100%;\r\n    backdrop-filter: blur(1.5px);\r\n`;\r\n\r\nconst ShowLessButton = styled.button`\r\n    border: none;\r\n    outline: none;\r\n    background-color: rgba(255, 255, 255, 0.90);\r\n    text-align: center;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    padding: 0px;\r\n    width: 100%;\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.palette.grey[200]};\r\n    }\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst VerticallyCenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst host = window.location.protocol + '//'+ window.location.host;\r\n\r\nfunction deleteReview(props: any) {\r\n    const userId = props.review.userId;\r\n    const reviewUserName = props.review.userName;\r\n    props.deleteReviewAction(userId);\r\n    if (props.userRating) { // if a rating exists, don't delete from db\r\n        axios.put(host + '/reviewRatings/review',\r\n            {\r\n                mediaId: props.mediaId,\r\n                mediaType: props.mediaType,\r\n                userName: reviewUserName,\r\n                userId: userId,\r\n                datePosted: '',\r\n                text: ''\r\n            })\r\n            .then((res: any) => {\r\n                console.log(res);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            });\r\n    } else { // if no rating, then delete whole reviewRating document from db\r\n        axios.delete(host + `/reviewRatings`\r\n        + `/${props.mediaType}/${props.mediaId}/${props.review.userId}`)\r\n            .then((res: any) => {\r\n                console.log('successfully deleted the reviewRating', res);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n}\r\n\r\nconst CommentBlock: React.FC<CommentBlockProps> = (props: CommentBlockProps) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [hasOverflow, setHasOverflow] = useState(false);\r\n    const expandableRef = useRef(null);\r\n    const { review, currentUserId, isCurrentUserComment } = props;\r\n    const date = new Date(review.datePosted).toDateString();\r\n\r\n    const isAuthor = useMemo(() => {\r\n        return currentUserId === review.userId;\r\n    }, [review, currentUserId]);\r\n\r\n    useEffect(() => {\r\n        const isOverflowing = hasDivOverflown(expandableRef);\r\n        if (isOverflowing) {\r\n            setHasOverflow(true);\r\n        } else {\r\n            setHasOverflow(false);\r\n        }\r\n    }, [review]);\r\n    // TODO only show the edit and delete buttons if the userId matches with the current user's id\r\n    return (\r\n        <>\r\n            <Review isCurrentUserComment={isCurrentUserComment}>\r\n            {isEdit ?\r\n                <>\r\n                    <Typography variant={'h5'}><strong>{review.userName}</strong></Typography>\r\n                    <CommentEditor\r\n                        actionType={CommentEditorAction.Edit}\r\n                        closeEdit={() => setIsEdit(false)}\r\n                        editCommentProps={props}\r\n                    />\r\n                </>\r\n                :\r\n                <ExpandableDiv expanded={expanded} ref={expandableRef}>\r\n                    <TopBar>\r\n                        <Typography variant={'h5'}>\r\n                            <strong>\r\n                                {review.userName}\r\n                            </strong>\r\n                            {` on ${date}`}\r\n                        </Typography>\r\n                        {isAuthor &&\r\n                            <div>\r\n                                <Button onClick={() => setIsEdit(true)}>Edit</Button>\r\n                                <Button onClick={() => deleteReview(props)}>Delete</Button>\r\n                            </div>\r\n                        }\r\n                    </TopBar>\r\n                    <VerticallyCenteredDiv>\r\n                        <Box mr={1}>User rated: </Box>\r\n                        {review.rating ?\r\n                            <StarRater readonly readOnlyRating={review.rating} hideReadOnlyLabel />\r\n                            : 'no rating'\r\n                        }\r\n                    </VerticallyCenteredDiv>\r\n                    <ReactMarkdown source={review.text} />\r\n                    {!expanded && hasOverflow &&\r\n                        <ShowMoreButton onClick={() => setExpanded(true)}>\r\n                            <Typography variant={'body1'}>Show more...</Typography>\r\n                        </ShowMoreButton>\r\n                    }\r\n                    {expanded &&\r\n                        <ShowLessButton onClick={() => setExpanded(false)}>\r\n                            <Typography variant={'body1'}>Show less</Typography>\r\n                        </ShowLessButton>\r\n                    }\r\n                </ExpandableDiv>}\r\n            </Review>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, { deleteReviewAction })(CommentBlock);\r\n","export function hasDivOverflown(ref: { current: any; }): boolean {\r\n    const element = ref.current;\r\n    return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport CommentBlock from '../CommentBlock';\r\nimport {Typography} from '@material-ui/core';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\r\nimport Button from '../Button';\r\nimport { MediaType } from '../../constants/dataTypes';\r\nimport {connect} from 'react-redux';\r\n\r\ninterface ReviewListProps {\r\n    mediaId: string,\r\n    mediaType: MediaType,\r\n    otherUserReviews: any[],\r\n    currentUserReview?: any,\r\n    userId: string,\r\n    userName: string,\r\n    userRating?: number | undefined\r\n}\r\n\r\nconst ReviewList: React.FC<ReviewListProps> = (props: ReviewListProps) => {\r\n    const [addCommentEditorOpen, setAddCommentEditor] = useState(false);\r\n    const { otherUserReviews, currentUserReview, mediaId, mediaType, userId, userName, userRating } = props;\r\n\r\n    let hasAddedReview = !!currentUserReview;\r\n\r\n    const initialStateReviews = otherUserReviews?.slice(0,9);\r\n    const [stateReviews, setStateReviews] = useState(initialStateReviews);\r\n\r\n    useEffect(() => {\r\n        const rerenderReviews = otherUserReviews?.slice(0,9);\r\n        setStateReviews(rerenderReviews);\r\n    }, [otherUserReviews]);\r\n\r\n    const fetchMoreData = () => {\r\n        setTimeout(() => {\r\n            const currentReviewLength = stateReviews.length;\r\n            const theFetchNum = currentReviewLength + 5;\r\n            const fetchedReviews = otherUserReviews.slice(0, theFetchNum);\r\n            setStateReviews(fetchedReviews);\r\n        }, 1000);\r\n    };\r\n\r\n    const totalReviews = hasAddedReview ? otherUserReviews.length + 1 : otherUserReviews.length;\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={'h3'} gutterBottom>\r\n                {totalReviews || 0} Total Reviews\r\n            </Typography>\r\n            {addCommentEditorOpen ?\r\n                <>\r\n                    <Typography variant={'h5'}><strong>{userName}</strong></Typography>\r\n                    <CommentEditor\r\n                        actionType={CommentEditorAction.Add}\r\n                        closeEdit={() => setAddCommentEditor(false)}\r\n                        addCommentProps={{\r\n                            mediaType: mediaType,\r\n                            mediaId: mediaId,\r\n                            userId: userId,\r\n                            userName: userName,\r\n                            userRating: userRating\r\n                        }}\r\n                    />\r\n                </> :\r\n                <div style={{textAlign: 'right'}}>\r\n                    {!hasAddedReview &&\r\n                        <Button onClick={() => setAddCommentEditor(true)}>\r\n                            Add Review\r\n                        </Button>\r\n                    }\r\n                </div>\r\n            }\r\n            {currentUserReview && currentUserReview.text &&\r\n                <>\r\n                    <CommentBlock\r\n                        review={currentUserReview}\r\n                        currentUserId={userId}\r\n                        isCurrentUserComment={true}\r\n                        mediaId={mediaId}\r\n                        mediaType={mediaType}\r\n                        userRating={userRating}\r\n                    />\r\n                </>\r\n            }\r\n            <br/>\r\n            {otherUserReviews ? <InfiniteScroll\r\n                dataLength={stateReviews.length}\r\n                next={fetchMoreData}\r\n                hasMore={stateReviews.length < otherUserReviews.length}\r\n                loader={<h4 style={{textAlign: 'center'}}>Loading more reviews...</h4>}\r\n                endMessage={\r\n                    <p style={{textAlign: 'center'}}>\r\n                        <b>No more reviews</b>\r\n                    </p>\r\n                }>\r\n                {stateReviews.map((r, index) =>\r\n                    <CommentBlock\r\n                        key={index}\r\n                        review={r}\r\n                        currentUserId={userId}\r\n                    />)\r\n                }\r\n            </InfiniteScroll> : null}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n    const reviews = state.reviewRatings.filter((r: any) => r.text);\r\n    let otherUserReviews: any[] = [];\r\n    let currentUserReview: any = undefined;\r\n    reviews.forEach((r: any) => {\r\n        r.userId === ownProps.userId ? currentUserReview = r : otherUserReviews.push(r);\r\n    });\r\n    return {\r\n        otherUserReviews: otherUserReviews,\r\n        currentUserReview: currentUserReview\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ReviewList);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Menu, MenuItem} from '@material-ui/core';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport axios from 'axios';\r\n\r\ninterface FavPeopleDropDownProps {\r\n    allPeople: Array<string>;\r\n    favoritePeople: Array<string>;\r\n    favKey: string;\r\n    userId: string;\r\n}\r\n\r\nconst FavPeopleDropDown = (props: FavPeopleDropDownProps) => {\r\n    const { allPeople, favoritePeople, favKey, userId } = props;\r\n    const [favPeople, setFavPeople] = useState<Array<string>>([]);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    useEffect(() => {\r\n        setFavPeople(favoritePeople);\r\n    }, [favoritePeople]);\r\n\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (person: string, isFav: boolean) => {\r\n        setAnchorEl(null);\r\n        if (isFav) {\r\n            const filteredFavs = favPeople.filter((p) => p !== person);\r\n            setFavPeople(filteredFavs);\r\n        } else {\r\n            setFavPeople([...favPeople, person]);\r\n        }\r\n        const act = isFav ? 'REMOVE' : 'ADD';\r\n        axios.put(`/users/${favKey}/${person}/${userId}`, {\r\n            action: act\r\n        }).then((response: any) => {\r\n            console.log(response);\r\n        })\r\n            .catch((error: any) => {\r\n                console.log('Error getting reviews', error);\r\n            });\r\n    };\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                onClick={handleClick}\r\n                endIcon={<DetailsIcon/>}\r\n                style={{ fontSize: '12px' }}\r\n            >\r\n                Add to favorites\r\n            </Button>\r\n            <Menu\r\n                id='simple-menu'\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n            >\r\n                {allPeople.map((p, index) => {\r\n                    const isFav = favPeople.includes(p);\r\n                    return (\r\n                        <MenuItem key={index} onClick={() => handleClose(p, isFav)}>\r\n                            {p}\r\n                            {isFav && <CheckIcon fontSize={'small'}/>}\r\n                        </MenuItem>);\r\n                })}\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FavPeopleDropDown;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Container from '../Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReviewList from '../../components/ReviewList';\r\nimport { MediaType } from '../../constants/dataTypes';\r\nimport MockCover from '../../assets/MockCover.png';\r\nimport styled from 'styled-components';\r\nimport {Box, Grid} from '@material-ui/core';\r\nimport TagsSection from '../../components/TagsSection';\r\nimport StarRater from '../../components/StarRater';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {loadAllReviewsAction} from '../../actions/reviewRatingActions';\r\nimport { FormControl, MenuItem, InputLabel, Select } from '@material-ui/core';\r\nimport AddToUserButton from '../../components/AddToUserButton';\r\nimport FavPeopleDropDown from '../../components/FavPeopleDropDown';\r\n\r\nconst StyledImage = styled.img`\r\n    width: 100%;\r\n    max-width: 300px;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst StyledGridItem = styled(Grid)`\r\n    text-align: center;\r\n`;\r\n\r\nconst VerticallyCenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst StyledFormControl = styled(FormControl)`\r\n    width: 100%;\r\n    margin: 5px !important;\r\n`;\r\n\r\nconst MediaPage: React.FC<{}> = (props: any) => {\r\n    const [mediaType, id] = props.location.pathname.split('/').filter((o: string) => o);\r\n    const [isForLater, setForLater] = useState(false);\r\n    const [isFavorite, setFavorite] = useState(false);\r\n    const [watchedOrRead, setWatchedOrRead] = useState(false);\r\n    const [mediaObject, setMediaObject] = useState({\r\n        title: '',\r\n        id: id,\r\n        mediaType: MediaType.start,\r\n        image: '',\r\n        people: [''],\r\n        genres: [''],\r\n        blurb: '',\r\n        avgRating: 0,\r\n        userRating: 0,\r\n        userHasReviewText: false\r\n    });\r\n    const [userLists, setUserLists] = useState({\r\n        booksRead: [],\r\n        moviesWatched: [],\r\n        watchLater: [],\r\n        readLater: [],\r\n        favoriteMovies: [],\r\n        favoriteBooks: [],\r\n        favoriteAuthors: [],\r\n        favoriteDirectors: []\r\n    });\r\n\r\n    const [storyTags, setStoryTags] = useState([]);\r\n    const [unaddedStoryTags, setUnaddedStoryTags] = useState<Array<{ tagId: string, tagName: string }>>([]);\r\n    const [addedStoryTags, setAddedStoryTags] = useState<Array<{ tagId: string, tagName: string }>>([]);\r\n\r\n    const sessionDataString = sessionStorage.getItem('NS-session-data');\r\n    const sessionDataObj = sessionDataString && JSON.parse(sessionDataString);\r\n    const userName = sessionDataObj.username;\r\n    const userId = sessionDataObj.userId;\r\n\r\n    const {\r\n        title,\r\n        image,\r\n        people,\r\n        blurb,\r\n        genres,\r\n        avgRating,\r\n        userRating,\r\n        userHasReviewText\r\n    } = mediaObject;\r\n\r\n    useEffect(() => {\r\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\r\n        axios.get(`/${mediaRouteType}/${id}`)\r\n            .then((mediaRes: any) => {\r\n                const mediaData = mediaRes.data;\r\n                console.log(mediaData);\r\n                axios.get(`/reviewRatings/${mediaType}/${id}`)\r\n                    .then((reviewRatingRes: any) => {\r\n                        const reviews = reviewRatingRes.data.reviewArray;\r\n                        props.loadAllReviewsAction(reviews);\r\n                        const userRatingReviewArr = reviews.filter((r: any) => r.userId === userId);\r\n                        const userRating = userRatingReviewArr.length > 0 ? userRatingReviewArr[0].rating : undefined;\r\n                        const userHasReviewText = userRatingReviewArr.length > 0 && !!userRatingReviewArr[0].text;\r\n                        setMediaObject({\r\n                            title: mediaData.title,\r\n                            id: id,\r\n                            mediaType: MediaType.movie,\r\n                            image: mediaData.image,\r\n                            people: mediaData.people,\r\n                            genres: mediaData.genres,\r\n                            blurb:  mediaData.blurb,\r\n                            avgRating: reviewRatingRes.data.average,\r\n                            userRating: userRating,\r\n                            userHasReviewText: userHasReviewText\r\n                        });\r\n                        setStoryTags(mediaRes.data.nextStoryTags);\r\n                    })\r\n                    .catch((error: any) => {\r\n                        console.log('Error getting reviews', error);\r\n                    });\r\n            })\r\n            .catch((error: any) => {\r\n                console.log('Error getting media', error);\r\n            });\r\n        // TODO get the media info from an api call using the media id\r\n    }, [props, id, mediaType, userId]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`/users/userLists/${userId}`)\r\n            .then((response: any) => {\r\n                const userLists = response.data;\r\n                if (mediaType === MediaType.movie) {\r\n                    if (userLists.watchLater.includes(id)) {\r\n                        setForLater(true);\r\n                    }\r\n                    if (userLists.favoriteMovies.includes(id)) {\r\n                        setFavorite(true);\r\n                    }\r\n                    if (userLists.moviesWatched.includes(id)) {\r\n                        setWatchedOrRead(true);\r\n                    }\r\n                } else {\r\n                    if (userLists.readLater.includes(id)) {\r\n                        setForLater(true);\r\n                    }\r\n                    if (userLists.favoriteBooks.includes(id)) {\r\n                        setFavorite(true);\r\n                    }\r\n                    if (userLists.booksRead.includes(id)) {\r\n                        setWatchedOrRead(true);\r\n                    }\r\n                }\r\n                setUserLists({\r\n                    booksRead: userLists.booksRead,\r\n                    moviesWatched: userLists.moviesWatched,\r\n                    watchLater: userLists.watchLater,\r\n                    readLater: userLists.readLater,\r\n                    favoriteMovies: userLists.favoriteMovies,\r\n                    favoriteBooks: userLists.favoriteBooks,\r\n                    favoriteAuthors: userLists.favoriteAuthors,\r\n                    favoriteDirectors: userLists.favoriteDirectors\r\n                });\r\n            })\r\n            .catch((error: any) => {\r\n                console.log('Error getting media', error);\r\n            });\r\n    }, [userId, mediaType, id]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/nextStoryTags')\r\n            .then((res: any) => {\r\n                const tagData = res.data;\r\n                console.log(tagData);\r\n                const sortedTags = tagData.sort(function(a: any, b: any) {\r\n                    if(a.tagName < b.tagName) { return -1; }\r\n                    if(a.tagName > b.tagName) { return 1; }\r\n                    return 0;\r\n                });\r\n                const storyTagNames = storyTags.map((t: any) => t.tagName);\r\n                const unAdded: Array<{ tagId: string, tagName: string }> = [];\r\n                const added: Array<{ tagId: string, tagName: string }> = [];\r\n                sortedTags.forEach((t: any) => {\r\n                    if (storyTagNames.includes(t.tagName)) {\r\n                        added.push(t);\r\n                    } else unAdded.push(t);\r\n                });\r\n                setUnaddedStoryTags(unAdded);\r\n                setAddedStoryTags(added);\r\n            })\r\n            .catch((error: any) => {\r\n                console.log('Error getting all story tags', error);\r\n            });\r\n    }, [storyTags]);\r\n\r\n    const updateMediaInDB = (tagsArray: any[]) => {\r\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\r\n        axios.put(`/${mediaRouteType}/updateNextStoryTags/${id}`,\r\n            { tagsArray: tagsArray })\r\n            .then((res: any) => {\r\n                console.log('updated tags for media', res.data);\r\n            }).catch((err: any) => {\r\n                console.log('error setting tags for media', err);\r\n            });\r\n    };\r\n\r\n    const addOrRemoveCall = (key: string, mediaId: string, action:string) => {\r\n        axios.put(`/users/${key}/${mediaId}/${userId}`, {\r\n            action:action\r\n        }).then((response: any) => {\r\n            console.log(response);\r\n        })\r\n            .catch((error: any) => {\r\n                console.log('Error getting reviews', error);\r\n            });\r\n    };\r\n\r\n    const addOrRemoveWatchOrRead = (mediaId: string) => {\r\n        const key = mediaType === MediaType.movie ? 'moviesWatched' : 'booksRead';\r\n        if (watchedOrRead) {\r\n            setWatchedOrRead(false);\r\n            addOrRemoveCall(key, mediaId, 'REMOVE');\r\n        } else {\r\n            setWatchedOrRead(true);\r\n            addOrRemoveCall(key, mediaId, 'ADD');\r\n        }\r\n    };\r\n\r\n    const addOrRemoveWatchReadLater = (mediaId: string) => {\r\n        console.log('watch or read later, mediaType: ', mediaType, 'id: ', mediaId);\r\n        const key = mediaType === MediaType.movie ? 'watchLater' : 'readLater';\r\n        if (isForLater) {\r\n            setForLater(false);\r\n            addOrRemoveCall(key, mediaId, 'REMOVE');\r\n        } else {\r\n            setForLater(true);\r\n            addOrRemoveCall(key, mediaId, 'ADD');\r\n        }\r\n    };\r\n\r\n    const addOrRemoveFavorites = (mediaId: string) => {\r\n        const key = mediaType === MediaType.movie ? 'favoriteMovies' : 'favoriteBooks';\r\n        if (isFavorite) {\r\n            setFavorite(false);\r\n            addOrRemoveCall(key, mediaId, 'REMOVE');\r\n        } else {\r\n            setFavorite(true);\r\n            addOrRemoveCall(key, mediaId, 'ADD');\r\n        }\r\n    };\r\n\r\n    const handleAddTag = (event: any) => {\r\n        console.log(event.target.value);\r\n        const newAddedTags = [...addedStoryTags, event.target.value];\r\n        const filteredDeleteTags = unaddedStoryTags.filter((t: any) => t.tagId !== event.target.value.tagId);\r\n        setAddedStoryTags(newAddedTags);\r\n        setUnaddedStoryTags(filteredDeleteTags);\r\n        updateMediaInDB(newAddedTags);\r\n    };\r\n\r\n    const handleDeleteTag = (event: any) => {\r\n        console.log(event.target.value);\r\n        const filteredStoryTags = addedStoryTags.filter((t: any) => t.tagId !== event.target.value.tagId);\r\n        const newDeleteTags = [...unaddedStoryTags, event.target.value];\r\n        setAddedStoryTags(filteredStoryTags);\r\n        setUnaddedStoryTags(newDeleteTags);\r\n        updateMediaInDB(filteredStoryTags);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth='lg'>\r\n                <Grid container direction={'row'}  spacing={5}>\r\n                    <StyledGridItem item sm={3}>\r\n                        <StyledImage src={image} />\r\n                        <div>\r\n                            Your rating:\r\n                            <CenteredDiv>\r\n                                <StarRater\r\n                                    userRating={userRating}\r\n                                    readonly={false}\r\n                                    userId={userId}\r\n                                    userName={userName}\r\n                                    userHasReviewText={userHasReviewText}\r\n                                    mediaId={id}\r\n                                    mediaType={mediaType}\r\n                                />\r\n                            </CenteredDiv>\r\n                            <div>\r\n                                <AddToUserButton\r\n                                    toBackendOnClick={() => addOrRemoveWatchOrRead(id)}\r\n                                    isAdded={watchedOrRead}\r\n                                    addLabel={`Add to ${mediaType === MediaType.movie ? 'watched' : 'read'}`}\r\n                                    removeLabel={`Remove from ${mediaType === MediaType.movie ? 'watched' : 'read'}`}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <AddToUserButton\r\n                                    toBackendOnClick={() => addOrRemoveWatchReadLater(id)}\r\n                                    isAdded={isForLater}\r\n                                    addLabel={`Add to ${mediaType === MediaType.movie ? 'watch' : 'read'} later`}\r\n                                    removeLabel={`Remove from ${mediaType === MediaType.movie ? 'watch' : 'read'} later`}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <AddToUserButton\r\n                                    toBackendOnClick={() => addOrRemoveFavorites(id)}\r\n                                    isAdded={isFavorite}\r\n                                    addLabel={'Add favorite'}\r\n                                    removeLabel={'Remove favorite'}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </StyledGridItem>\r\n                    <Grid item sm={6}>\r\n                        <Typography variant='h1'>{title}</Typography>\r\n                        <Box fontStyle='italic'>\r\n                            <Typography variant='subtitle1' gutterBottom>\r\n                                {people.join(', ')}\r\n                                <FavPeopleDropDown\r\n                                    allPeople={people}\r\n                                    favoritePeople={MediaType.movie ? userLists.favoriteDirectors : userLists.favoriteAuthors}\r\n                                    userId={userId}\r\n                                    favKey={MediaType.movie ? 'favoriteDirectors' : 'favoriteAuthors'}\r\n                                />\r\n                            </Typography>\r\n                        </Box>\r\n                        <VerticallyCenteredDiv>\r\n                            <Typography variant='subtitle2' >Avg Members rating: </Typography>\r\n                            <StarRater readOnlyRating={avgRating} readonly />\r\n                        </VerticallyCenteredDiv>\r\n                        <Typography variant='body1'>{blurb}</Typography>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        Genres:\r\n                        <TagsSection tags={genres}/>\r\n                        Tags:\r\n                        <TagsSection tagObjects={addedStoryTags}/>\r\n                        <StyledFormControl variant='outlined'>\r\n                            <InputLabel id='demo-simple-select-outlined-label'>Add a tag</InputLabel>\r\n                            <Select\r\n                                labelId='add-tag-label'\r\n                                id='add-tag'\r\n                                value={''}\r\n                                onChange={handleAddTag}\r\n                                label='Add a tag'\r\n                            >\r\n                                {unaddedStoryTags.map((t: any, index) => {\r\n                                    return <MenuItem key={`${index}_add`} value={t}>{t.tagName}</MenuItem>;\r\n                                })}\r\n                            </Select>\r\n                        </StyledFormControl>\r\n                        <StyledFormControl variant='outlined'>\r\n                            <InputLabel id='demo-simple-select-outlined-label'>Delete a tag</InputLabel>\r\n                            <Select\r\n                                labelId='delete-tag-label'\r\n                                id='delete-tag'\r\n                                value={''}\r\n                                onChange={handleDeleteTag}\r\n                                label='Delete a tag'\r\n                            >\r\n                                {addedStoryTags.map((t: any, index) => {\r\n                                    return <MenuItem key={`${index}_delete`} value={t}>{t.tagName}</MenuItem>;\r\n                                })}\r\n                            </Select>\r\n                        </StyledFormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <Container maxWidth='md'>\r\n                <ReviewList\r\n                    mediaId={id}\r\n                    mediaType={mediaType}\r\n                    userName={userName}\r\n                    userId={userId}\r\n                    userRating={userRating}\r\n                />\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, { loadAllReviewsAction })(MediaPage);\r\n"],"sourceRoot":""}