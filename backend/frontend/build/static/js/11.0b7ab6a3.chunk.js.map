{"version":3,"sources":["containers/Container/index.tsx","assets/MockCover.png","constants/dataTypes.ts","components/TagButton/index.tsx","components/TagsSection/index.tsx","components/Button/index.tsx","components/CommentEditor/index.tsx","actions/reviewRatingActions.ts","components/StarRater/index.tsx","components/CommentBlock/index.tsx","utils/styleHelpers.ts","components/ReviewList/index.tsx","containers/MediaPage/index.tsx"],"names":["StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","module","exports","MediaType","StyledTagButton","button","theme","palette","primary","light","secondary","TagButton","tag","StyledTagsSection","div","TagsSection","tags","tagObjects","map","index","key","tagObject","tagName","StyledButton","color","grey","fontSize","main","Button","onClick","label","CommentEditorAction","TextArea","textarea","host","window","location","protocol","connect","addReviewAction","reviewObject","type","ADD_REVIEW","text","userId","userName","datePosted","editReviewAction","EDIT_REVIEW","useState","editCommentProps","review","currentText","setCurrentText","value","onChange","event","target","style","textAlign","addCommentProps","now","Date","toString","actionType","Add","rating","undefined","axios","put","mediaId","mediaType","userRating","then","res","console","log","catch","err","Edit","closeEdit","StyledIconButton","IconButton","VerticallyCenteredDiv","changeRatingAction","CHANGE_RATING","ratedStar","setStar","readonly","readOnlyRating","hideReadOnlyLabel","twoDecimalRatingString","clickStar","starIndex","ratingToSet","userHasReviewText","delete","changeRating","toFixed","useEffect","Box","display","Array","star","split","wholeNumberString","decimalString","wholeNumber","parseInt","decimalTimes100","fill","closestFifty","Math","round","getIcon","size","ml","Review","isCurrentUserComment","TopBar","ExpandableDiv","expanded","ShowMoreButton","ShowLessButton","deleteReviewAction","DELETE_REVIEW","isEdit","setIsEdit","setExpanded","hasOverflow","setHasOverflow","expandableRef","useRef","currentUserId","date","toDateString","isAuthor","useMemo","isOverflowing","ref","element","current","scrollHeight","clientHeight","scrollWidth","clientWidth","hasDivOverflown","Typography","variant","reviewUserName","deleteReview","mr","source","state","ownProps","reviews","reviewRatings","filter","r","otherUserReviews","currentUserReview","forEach","push","addCommentEditorOpen","setAddCommentEditor","hasAddedReview","initialStateReviews","slice","stateReviews","setStateReviews","rerenderReviews","totalReviews","length","gutterBottom","dataLength","next","setTimeout","theFetchNum","fetchedReviews","hasMore","loader","endMessage","StyledImage","img","StyledGridItem","Grid","CenteredDiv","AddToUserButton","isAddedToUser","StyledFormControl","FormControl","loadAllReviewsAction","reviewsArray","LOAD_REVIEWS_FROM_DB","pathname","o","id","isForLater","setForLater","isFavorite","setFavorite","watchedOrRead","setWatchedOrRead","title","movie","image","people","genres","blurb","avgRating","mediaObject","setMediaObject","booksRead","moviesWatched","watchLater","readLater","favoriteMovies","favoriteBooks","favoriteAuthors","favoriteDirectors","setUserLists","storyTags","setStoryTags","unaddedStoryTags","setUnaddedStoryTags","addedStoryTags","setAddedStoryTags","sessionDataString","sessionStorage","getItem","sessionDataObj","JSON","parse","username","mediaRouteType","book","get","mediaRes","reviewRatingRes","data","reviewArray","userRatingReviewArr","MockCover","average","nextStoryTags","error","response","userLists","includes","sortedTags","sort","a","b","storyTagNames","t","unAdded","added","updateMediaInDB","tagsArray","addOrRemoveCall","action","container","direction","spacing","item","sm","src","addOrRemoveWatchOrRead","addOrRemoveWatchReadLater","addOrRemoveFavorites","fontStyle","InputLabel","Select","labelId","newAddedTags","MenuItem","filteredStoryTags","tagId"],"mappings":"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","file":"static/js/11.0b7ab6a3.chunk.js","sourcesContent":["import React, {ReactNode} from 'react';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled(Container)`\n    margin-top: 85px;\n`;\n\ninterface MarginContainerProps {\n    maxWidth: 'lg'\n        | 'md'\n        | 'sm'\n        | 'xl'\n        | 'xs'\n        | false;\n    children: ReactNode;\n}\n\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\n    return (\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\n    );\n};\n\nexport default MarginContainer;\n","module.exports = __webpack_public_path__ + \"static/media/MockCover.4d59545d.png\";","export enum MediaType {\n    movie = 'movie',\n    book = 'book'\n}\n\nexport type CardData = {\n    title: string,\n    id: string,\n    mediaType: MediaType,\n    image: string, // the url, etc to the image\n    genres: string[],\n    nextStoryTags: string[],\n    people: string,\n    blurb: string,\n    avgRating: number\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface TagsButtonProps {\n    tag: string;\n}\n\nconst StyledTagButton = styled.button`\n    border-radius: 7px;\n    color: white;\n    outline: none;\n    border: none;\n    margin: 5px;\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.palette.primary.light};\n    &:hover {\n        background-color: ${({ theme }) => theme.palette.secondary.light};\n    }\n    font-size: 16px;\n    padding: 3px 5px 3px 5px;\n`;\n\nconst TagButton: React.FC<TagsButtonProps> = (props: TagsButtonProps) => {\n    const { tag } = props;\n    return (\n        <>\n            {tag && <StyledTagButton>{tag}</StyledTagButton>}\n        </>\n    );\n};\n\nexport default TagButton;\n","import React from 'react';\nimport TagButton from '../TagButton';\nimport styled from 'styled-components';\n\ninterface TagsSectionProps {\n    tags?: string[],\n    tagObjects?: Array<{ tagId: string, tagName: string }>\n}\n\nconst StyledTagsSection = styled.div`\n    margin-bottom: 15px;\n`;\n\nconst TagsSection: React.FC<TagsSectionProps> = (props: TagsSectionProps) => {\n    const { tags, tagObjects } = props;\n    return (\n        <StyledTagsSection>\n            { tags && tags.map((tag, index) => <TagButton key={index} tag={tag}/>) }\n            { !tags && tagObjects && tagObjects.map((tagObject, index) => <TagButton key={index} tag={tagObject.tagName}/>) }\n        </StyledTagsSection>\n    );\n};\n\nexport default TagsSection;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button<{fontSize?: string, color?: string}>`\n    margin-right: 10px;\n    background: none;\n    border: none;\n    color: ${(props) => props.color} || ${({ theme }) => theme.palette.grey[500]};\n    cursor: pointer;\n    font-size: ${(props) => props.fontSize || '16px'};\n\n    &:hover {\n        color: ${({ theme }) => theme.palette.primary.main};\n    }\n`;\n\ninterface ButtonProps {\n    onClick: () => void;\n    label?: string;\n    children?: string;\n    fontSize?: string;\n    color?: string;\n}\n\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n    const {onClick, label, children, color} = props;\n    return (\n        <StyledButton onClick={onClick} color={color}>\n            {label || children}\n        </StyledButton>\n    );\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\nimport {connect} from 'react-redux';\nimport {addReviewAction, editReviewAction, ReviewObjectType} from '../../actions/reviewRatingActions';\nimport axios from 'axios';\n\nconst TextArea = styled.textarea`\n    height: 100px;\n    width: 99%;\n    resize: vertical;\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif\n`;\n\nexport enum CommentEditorAction {\n    Add,\n    Edit\n}\n\nconst host = window.location.protocol + '//'+ window.location.host;\n\nconst CommentEditor: React.FC<any> = (props: any) => {\n    const [currentText, setCurrentText] = useState(props.editCommentProps?.review.text || '');\n\n    const submit = () => {\n        const { editCommentProps, addCommentProps } = props;\n        const now = new Date().toString();\n        switch(props.actionType) {\n            case CommentEditorAction.Add:\n                props.addReviewAction({\n                    text: currentText,\n                    userId: addCommentProps.userId,\n                    userName: addCommentProps.userName,\n                    datePosted: now,\n                    rating: undefined\n                } as ReviewObjectType);\n                axios.put(host + '/reviewRatings/review',\n                    {\n                        mediaId: addCommentProps.mediaId,\n                        mediaType: addCommentProps.mediaType,\n                        userName: addCommentProps.userName,\n                        userId: addCommentProps.userId,\n                        rating: addCommentProps.userRating,\n                        datePosted: now,\n                        text: currentText\n                    })\n                    .then((res: any) => {\n                        console.log(res);\n                    })\n                    .catch((err: any) => {\n                        console.log(err);\n                    });\n                break;\n            case CommentEditorAction.Edit:\n                const userId = editCommentProps.review.userId;\n                props.editReviewAction({\n                    text: currentText,\n                    userId: userId,\n                    userName: editCommentProps.review.userName,\n                    datePosted: now\n                } as ReviewObjectType);\n                axios.put(host + '/reviewRatings/review',\n                    {\n                        mediaId: editCommentProps.mediaId,\n                        mediaType: editCommentProps.mediaType,\n                        userName: editCommentProps.review.userName,\n                        userId: editCommentProps.review.userId,\n                        rating: editCommentProps.userRating,\n                        datePosted: now,\n                        text: currentText\n                    })\n                    .then((res: any) => {\n                        console.log(res);\n                    })\n                    .catch((err: any) => {\n                        console.log(err);\n                    });\n                break;\n            default:\n                return;\n        }\n        props.closeEdit();\n    };\n\n    const changeMessageText = (event: any) => {\n        setCurrentText(event.target.value);\n    };\n\n    // TODO use a better editor - markdown text area? - for the text\n    return (\n        <>\n            <TextArea value={currentText} onChange={changeMessageText}/>\n            <div style={{textAlign: 'right'}}>\n                <Button onClick={submit}>Submit</Button>\n                <Button onClick={props.closeEdit}>Cancel</Button>\n            </div>\n        </>\n    );\n};\n\nexport default connect(null, { addReviewAction, editReviewAction })(CommentEditor);\n","import {\n    ADD_REVIEW, CHANGE_RATING,\n    DELETE_REVIEW,\n    EDIT_REVIEW,\n    LOAD_REVIEWS_FROM_DB\n} from '../constants/reviewRatingConstants';\n\nexport interface ReviewObjectType {\n    text: string,\n    userId: string,\n    userName: string,\n    datePosted: string,\n    rating?: number | undefined\n}\n\nexport const loadAllReviewsAction = (reviewsArray: any[]) => {\n    return {\n        type: LOAD_REVIEWS_FROM_DB,\n        reviewsArray: reviewsArray\n    };\n};\n\nexport const addReviewAction = (reviewObject: ReviewObjectType) => {\n    return {\n        type: ADD_REVIEW,\n        text: reviewObject.text,\n        userId: reviewObject.userId,\n        userName: reviewObject.userName,\n        datePosted: reviewObject.datePosted\n    };\n};\n\nexport const deleteReviewAction = (userId: string) => {\n    return {\n        type: DELETE_REVIEW,\n        userId: userId\n    };\n};\n\nexport const editReviewAction = (reviewObject: ReviewObjectType) => {\n    return {\n        type: EDIT_REVIEW,\n        text: reviewObject.text,\n        userId: reviewObject.userId,\n        userName: reviewObject.userName,\n        datePosted: reviewObject.datePosted\n    };\n};\n\n\nexport const changeRatingAction = (reviewObject: { userId: string, userName: string, rating: number | undefined }) => {\n    return {\n        type: CHANGE_RATING,\n        userId: reviewObject.userId,\n        userName: reviewObject.userName,\n        rating: reviewObject.rating\n    };\n};\n","import React, {useEffect, useState} from 'react';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport {Box, IconButton} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport styled from 'styled-components';\nimport {connect} from 'react-redux';\nimport {changeRatingAction} from '../../actions/reviewRatingActions';\nimport axios from 'axios';\nimport {MediaType} from '../../constants/dataTypes';\n\ninterface StarRaterProps {\n    readonly: boolean\n\n    // required if readonly === true\n    readOnlyRating?: number;\n    hideReadOnlyLabel?: boolean;\n\n    // required if readonly === false\n    userRating?: number;\n    userId?: string;\n    userName?: string;\n    userHasReviewText?: boolean;\n    mediaId?: string;\n    mediaType?: MediaType;\n}\n\nconst StyledIconButton = styled(IconButton)`\n    padding: 0px !important;\n`;\n\nconst VerticallyCenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst host = window.location.protocol + '//'+ window.location.host;\n\nconst getIcon = (index: number, rating: number | undefined) => {\n    const twoDecimalString = rating?.toFixed(2) || '0.00';\n    const [wholeNumberString, decimalString] = twoDecimalString.split('.');\n    const wholeNumber = parseInt(wholeNumberString);\n    const decimalTimes100 = parseInt(decimalString);\n    if ((index + 1) <= wholeNumber) {\n        return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n    } else if (index === wholeNumber) {\n        const closestFifty = Math.round(decimalTimes100 / 50)*50;\n        if (closestFifty === 0) {\n            return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n        } else if (closestFifty === 50) {\n            return <StarHalfIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n        } else if (closestFifty === 100) {\n            return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n        }\n    } else {\n        return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n    }\n};\n\nconst changeRating = (props: any, userId: string, userName: string, rating: number | undefined) => {\n    props.changeRatingAction({ userId, userName, rating });\n    if (!rating && !props.userHasReviewText) {\n        axios.delete(host + `/reviewRatings`\n            + `/${props.mediaType}/${props.mediaId}/${userId}`)\n            .then((res: any) => {\n                console.log('Successfully deleted the reviewRating', res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    } else {\n        axios.put(host + '/reviewRatings/rating',\n            {\n                mediaId: props.mediaId,\n                mediaType: props.mediaType,\n                userId: userId,\n                rating: rating\n            })\n            .then((res: any) => {\n                console.log('Successfully put the rating: ', res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    }\n};\n\nconst StarRater: React.FC<StarRaterProps> = (props: StarRaterProps) => {\n    const [ratedStar, setStar] = useState(0);\n    const { readonly, readOnlyRating, hideReadOnlyLabel, userRating, userId, userName } = props;\n    let twoDecimalRatingString = ''; // TODO set up tooltip functionality\n    if (readonly && readOnlyRating) {\n        twoDecimalRatingString = readOnlyRating.toFixed(2);\n    } else if (userRating) {\n        twoDecimalRatingString = userRating.toFixed(2);\n    }\n\n    useEffect(() => {\n        if (!ratedStar) {\n            setStar(userRating || 0);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [userRating]);\n\n    function clickStar(starIndex: number) {\n        const ratingToSet = ratedStar === starIndex ? starIndex - 1 : starIndex;\n        setStar(ratingToSet);\n        userId && userName && changeRating(props, userId, userName, ratingToSet);\n        // TODO use the api to set the rating (add the media type and media id as props)\n    }\n\n    return (\n        <Box display='flex'>\n            {[...Array(5)].map((star, index) => {\n                return (\n                    <VerticallyCenteredDiv key={index}>\n                        {readonly ?\n                            <>\n                                {\n                                    getIcon(index, readOnlyRating)\n                                }\n                            </>\n                            :\n                            <StyledIconButton size={'small'} onClick={() => clickStar(index + 1)}>\n                                {index < ratedStar ?\n                                    <StarIcon style={{fill: '#FFCC00'}} />\n                                    :\n                                    <StarBorderIcon style={{fill: '#FFCC00'}} />\n                                }\n                            </StyledIconButton>\n                        }\n                    </VerticallyCenteredDiv>\n                );\n            })}\n            <Box ml={1}>{readonly && !hideReadOnlyLabel && twoDecimalRatingString}</Box>\n        </Box>\n    );\n};\n\nexport default connect(null, { changeRatingAction })(StarRater);\n","import React, {useEffect, useMemo, useRef, useState} from 'react';\nimport styled from 'styled-components';\nimport {Box, Typography} from '@material-ui/core';\nimport Button from '../Button';\nimport {connect} from 'react-redux';\nimport {deleteReviewAction} from '../../actions/reviewRatingActions';\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\nimport ReactMarkdown from 'react-markdown';\nimport {hasDivOverflown} from '../../utils/styleHelpers';\nimport StarRater from '../StarRater';\nimport axios from 'axios';\n\ninterface CommentBlockProps {\n    review: any,\n    currentUserId: string,\n    isCurrentUserComment?: boolean,\n    mediaId?: string,\n    mediaType?: string,\n    userRating?: number | undefined;\n}\n\nconst Review = styled.div<{ isCurrentUserComment: boolean | undefined }>`\n    border-top: ${({ theme }) => `2px solid ${theme.palette.grey[400]}`};\n    border: ${({ theme, isCurrentUserComment }) => isCurrentUserComment && `2px solid ${theme.palette.grey[400]}`};\n    min-height: 50px;\n    padding: 5px;\n    padding-bottom: 0px;\n`;\n\nconst TopBar = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst ExpandableDiv = styled.div<{ expanded: boolean }>`\n    max-height: ${(props) => props.expanded ? '' : '200px'};\n    overflow: ${(props) => props.expanded ? 'visible' : 'hidden'};\n    position: relative;\n`;\n\nconst ShowMoreButton = styled.button`\n    border: none;\n    box-shadow: 0px 0 5px rgba(0, 0, 0, 0.3);\n    outline: none;\n    background-color: rgba(255, 255, 255, 0.75);\n    text-align: center;\n    height: 30px;\n    cursor: pointer;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    padding: 0px;\n    width: 100%;\n    backdrop-filter: blur(1.5px);\n`;\n\nconst ShowLessButton = styled.button`\n    border: none;\n    outline: none;\n    background-color: rgba(255, 255, 255, 0.90);\n    text-align: center;\n    height: 30px;\n    cursor: pointer;\n    padding: 0px;\n    width: 100%;\n    &:hover {\n        background-color: ${({ theme }) => theme.palette.grey[200]};\n    }\n    margin-bottom: 5px;\n`;\n\nconst VerticallyCenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nconst host = window.location.protocol + '//'+ window.location.host;\n\nfunction deleteReview(props: any) {\n    const userId = props.review.userId;\n    const reviewUserName = props.review.userName;\n    props.deleteReviewAction(userId);\n    if (props.userRating) { // if a rating exists, don't delete from db\n        axios.put(host + '/reviewRatings/review',\n            {\n                mediaId: props.mediaId,\n                mediaType: props.mediaType,\n                userName: reviewUserName,\n                userId: userId,\n                datePosted: '',\n                text: ''\n            })\n            .then((res: any) => {\n                console.log(res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    } else { // if no rating, then delete whole reviewRating document from db\n        axios.delete(host + `/reviewRatings`\n        + `/${props.mediaType}/${props.mediaId}/${props.review.userId}`)\n            .then((res: any) => {\n                console.log('successfully deleted the reviewRating', res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    }\n}\n\nconst CommentBlock: React.FC<CommentBlockProps> = (props: CommentBlockProps) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const [hasOverflow, setHasOverflow] = useState(false);\n    const expandableRef = useRef(null);\n    const { review, currentUserId, isCurrentUserComment } = props;\n    const date = new Date(review.datePosted).toDateString();\n\n    const isAuthor = useMemo(() => {\n        return currentUserId === review.userId;\n    }, [review, currentUserId]);\n\n    useEffect(() => {\n        const isOverflowing = hasDivOverflown(expandableRef);\n        if (isOverflowing) {\n            setHasOverflow(true);\n        } else {\n            setHasOverflow(false);\n        }\n    }, [review]);\n    // TODO only show the edit and delete buttons if the userId matches with the current user's id\n    return (\n        <>\n            <Review isCurrentUserComment={isCurrentUserComment}>\n            {isEdit ?\n                <>\n                    <Typography variant={'h5'}><strong>{review.userName}</strong></Typography>\n                    <CommentEditor\n                        actionType={CommentEditorAction.Edit}\n                        closeEdit={() => setIsEdit(false)}\n                        editCommentProps={props}\n                    />\n                </>\n                :\n                <ExpandableDiv expanded={expanded} ref={expandableRef}>\n                    <TopBar>\n                        <Typography variant={'h5'}>\n                            <strong>\n                                {review.userName}\n                            </strong>\n                            {` on ${date}`}\n                        </Typography>\n                        {isAuthor &&\n                            <div>\n                                <Button onClick={() => setIsEdit(true)}>Edit</Button>\n                                <Button onClick={() => deleteReview(props)}>Delete</Button>\n                            </div>\n                        }\n                    </TopBar>\n                    <VerticallyCenteredDiv>\n                        <Box mr={1}>User rated: </Box>\n                        {review.rating ?\n                            <StarRater readonly readOnlyRating={review.rating} hideReadOnlyLabel />\n                            : 'no rating'\n                        }\n                    </VerticallyCenteredDiv>\n                    <ReactMarkdown source={review.text} />\n                    {!expanded && hasOverflow &&\n                        <ShowMoreButton onClick={() => setExpanded(true)}>\n                            <Typography variant={'body1'}>Show more...</Typography>\n                        </ShowMoreButton>\n                    }\n                    {expanded &&\n                        <ShowLessButton onClick={() => setExpanded(false)}>\n                            <Typography variant={'body1'}>Show less</Typography>\n                        </ShowLessButton>\n                    }\n                </ExpandableDiv>}\n            </Review>\n        </>\n    );\n};\n\nexport default connect(null, { deleteReviewAction })(CommentBlock);\n","export function hasDivOverflown(ref: { current: any; }): boolean {\n    const element = ref.current;\n    return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\n","import React, {useEffect, useState} from 'react';\nimport CommentBlock from '../CommentBlock';\nimport {Typography} from '@material-ui/core';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\nimport Button from '../Button';\nimport { MediaType } from '../../constants/dataTypes';\nimport {connect} from 'react-redux';\n\ninterface ReviewListProps {\n    mediaId: string,\n    mediaType: MediaType,\n    otherUserReviews: any[],\n    currentUserReview?: any,\n    userId: string,\n    userName: string,\n    userRating?: number | undefined\n}\n\nconst ReviewList: React.FC<ReviewListProps> = (props: ReviewListProps) => {\n    const [addCommentEditorOpen, setAddCommentEditor] = useState(false);\n    const { otherUserReviews, currentUserReview, mediaId, mediaType, userId, userName, userRating } = props;\n\n    let hasAddedReview = !!currentUserReview;\n\n    const initialStateReviews = otherUserReviews?.slice(0,9);\n    const [stateReviews, setStateReviews] = useState(initialStateReviews);\n\n    useEffect(() => {\n        const rerenderReviews = otherUserReviews?.slice(0,9);\n        setStateReviews(rerenderReviews);\n    }, [otherUserReviews]);\n\n    const fetchMoreData = () => {\n        setTimeout(() => {\n            const currentReviewLength = stateReviews.length;\n            const theFetchNum = currentReviewLength + 5;\n            const fetchedReviews = otherUserReviews.slice(0, theFetchNum);\n            setStateReviews(fetchedReviews);\n        }, 1000);\n    };\n\n    const totalReviews = hasAddedReview ? otherUserReviews.length + 1 : otherUserReviews.length;\n\n    return (\n        <>\n            <Typography variant={'h3'} gutterBottom>\n                {totalReviews || 0} Total Reviews\n            </Typography>\n            {addCommentEditorOpen ?\n                <>\n                    <Typography variant={'h5'}><strong>{userName}</strong></Typography>\n                    <CommentEditor\n                        actionType={CommentEditorAction.Add}\n                        closeEdit={() => setAddCommentEditor(false)}\n                        addCommentProps={{\n                            mediaType: mediaType,\n                            mediaId: mediaId,\n                            userId: userId,\n                            userName: userName,\n                            userRating: userRating\n                        }}\n                    />\n                </> :\n                <div style={{textAlign: 'right'}}>\n                    {!hasAddedReview &&\n                        <Button onClick={() => setAddCommentEditor(true)}>\n                            Add Review\n                        </Button>\n                    }\n                </div>\n            }\n            {currentUserReview && currentUserReview.text &&\n                <>\n                    <CommentBlock\n                        review={currentUserReview}\n                        currentUserId={userId}\n                        isCurrentUserComment={true}\n                        mediaId={mediaId}\n                        mediaType={mediaType}\n                        userRating={userRating}\n                    />\n                </>\n            }\n            <br/>\n            {otherUserReviews ? <InfiniteScroll\n                dataLength={stateReviews.length}\n                next={fetchMoreData}\n                hasMore={stateReviews.length < otherUserReviews.length}\n                loader={<h4 style={{textAlign: 'center'}}>Loading more reviews...</h4>}\n                endMessage={\n                    <p style={{textAlign: 'center'}}>\n                        <b>No more reviews</b>\n                    </p>\n                }>\n                {stateReviews.map((r, index) =>\n                    <CommentBlock\n                        key={index}\n                        review={r}\n                        currentUserId={userId}\n                    />)\n                }\n            </InfiniteScroll> : null}\n        </>\n    );\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n    const reviews = state.reviewRatings.filter((r: any) => r.text);\n    let otherUserReviews: any[] = [];\n    let currentUserReview: any = undefined;\n    reviews.forEach((r: any) => {\n        r.userId === ownProps.userId ? currentUserReview = r : otherUserReviews.push(r);\n    });\n    return {\n        otherUserReviews: otherUserReviews,\n        currentUserReview: currentUserReview\n    };\n};\n\nexport default connect(mapStateToProps)(ReviewList);\n","import React, {useEffect, useState} from 'react';\nimport Container from '../Container';\nimport Typography from '@material-ui/core/Typography';\nimport ReviewList from '../../components/ReviewList';\nimport { MediaType } from '../../constants/dataTypes';\nimport MockCover from '../../assets/MockCover.png';\nimport styled from 'styled-components';\nimport {Box, Grid} from '@material-ui/core';\nimport TagsSection from '../../components/TagsSection';\nimport StarRater from '../../components/StarRater';\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport {loadAllReviewsAction} from '../../actions/reviewRatingActions';\nimport { FormControl, MenuItem, InputLabel, Select } from '@material-ui/core';\n\nconst StyledImage = styled.img`\n    width: 100%;\n    max-width: 300px;\n    margin-bottom: 15px;\n`;\n\nconst StyledGridItem = styled(Grid)`\n    text-align: center;\n`;\n\nconst VerticallyCenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nconst CenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 10px;\n`;\n\nconst AddToUserButton = styled.button<{ isAddedToUser: boolean }>`\n    background-color: ${({ theme, isAddedToUser }) => isAddedToUser ? theme.palette.grey[300] : theme.palette.primary.light};\n    border: none;\n    outline: none;\n    font-size: 16px;\n    border-radius: 5px;\n    padding: 5px;\n    cursor: pointer;\n    margin: 5px;\n    color: ${({ isAddedToUser }) => isAddedToUser ? 'black' : 'white'};\n`;\n\nconst StyledFormControl = styled(FormControl)`\n    width: 100%;\n    margin: 5px !important;\n`;\n\nconst MediaPage: React.FC<{}> = (props: any) => {\n    const [mediaType, id] = props.location.pathname.split('/').filter((o: string) => o);\n    const [isForLater, setForLater] = useState(false);\n    const [isFavorite, setFavorite] = useState(false);\n    const [watchedOrRead, setWatchedOrRead] = useState(false);\n    const [mediaObject, setMediaObject] = useState({\n        title: '',\n        id: id,\n        mediaType: MediaType.movie,\n        image: '',\n        people: '',\n        genres: [''],\n        blurb: '',\n        avgRating: 0,\n        userRating: 0,\n        userHasReviewText: false\n    });\n    const [userLists, setUserLists] = useState({\n        booksRead: [],\n        moviesWatched: [],\n        watchLater: [],\n        readLater: [],\n        favoriteMovies: [],\n        favoriteBooks: [],\n        favoriteAuthors: [],\n        favoriteDirectors: []\n    });\n\n    const [storyTags, setStoryTags] = useState([]);\n    const [unaddedStoryTags, setUnaddedStoryTags] = useState<Array<{ tagId: string, tagName: string }>>([]);\n    const [addedStoryTags, setAddedStoryTags] = useState<Array<{ tagId: string, tagName: string }>>([]);\n\n    const sessionDataString = sessionStorage.getItem('NS-session-data');\n    const sessionDataObj = sessionDataString && JSON.parse(sessionDataString);\n    const userName = sessionDataObj.username;\n    const userId = sessionDataObj.userId;\n\n    const {\n        title,\n        image,\n        people,\n        blurb,\n        genres,\n        avgRating,\n        userRating,\n        userHasReviewText\n    } = mediaObject;\n\n    const host = window.location.protocol + '//'+ window.location.host;\n\n    useEffect(() => {\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\n        axios.get(host + `/${mediaRouteType}/${id}`)\n            .then((mediaRes: any) => {\n                axios.get(host + `/reviewRatings/${mediaType}/${id}`)\n                    .then((reviewRatingRes: any) => {\n                        const reviews = reviewRatingRes.data.reviewArray;\n                        props.loadAllReviewsAction(reviews);\n                        const userRatingReviewArr = reviews.filter((r: any) => r.userId === userId);\n                        const userRating = userRatingReviewArr.length > 0 ? userRatingReviewArr[0].rating : undefined;\n                        const userHasReviewText = userRatingReviewArr.length > 0 && !!userRatingReviewArr[0].text;\n                        setMediaObject({\n                            title: 'Mock Title Harry Potter',\n                            id: 'movie-001',\n                            mediaType: MediaType.movie,\n                            image: MockCover,\n                            people: 'J.K. Rowling',\n                            genres: ['fantasy', 'action', 'sci-fi', 'superheroes', 'tag1', 'tag2', 'tag3'],\n                            blurb: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n                            avgRating: reviewRatingRes.data.average,\n                            userRating: userRating,\n                            userHasReviewText: userHasReviewText\n                        });\n                        setStoryTags(mediaRes.data.nextStoryTags);\n                    })\n                    .catch((error: any) => {\n                        console.log('Error getting reviews', error);\n                    });\n            })\n            .catch((error: any) => {\n                console.log('Error getting media', error);\n            });\n        // TODO get the media info from an api call using the media id\n    }, [props, id, mediaType, userId]);\n\n    useEffect(() => {\n        axios.get(host + `/users/userLists/${userId}`)\n            .then((response: any) => {\n                const userLists = response.data;\n                if (mediaType === MediaType.movie) {\n                    if (userLists.watchLater.includes(id)) {\n                        setForLater(true);\n                    }\n                    if (userLists.favoriteMovies.includes(id)) {\n                        setFavorite(true);\n                    }\n                    if (userLists.moviesWatched.includes(id)) {\n                        setWatchedOrRead(true);\n                    }\n                } else {\n                    if (userLists.readLater.includes(id)) {\n                        setForLater(true);\n                    }\n                    if (userLists.favoriteBooks.includes(id)) {\n                        setFavorite(true);\n                    }\n                    if (userLists.booksRead.includes(id)) {\n                        setWatchedOrRead(true);\n                    }\n                }\n                setUserLists({\n                    booksRead: userLists.booksRead,\n                    moviesWatched: userLists.moviesWatched,\n                    watchLater: userLists.watchLater,\n                    readLater: userLists.readLater,\n                    favoriteMovies: userLists.favoriteMovies,\n                    favoriteBooks: userLists.favoriteBooks,\n                    favoriteAuthors: userLists.favoriteAuthors,\n                    favoriteDirectors: userLists.favoriteDirectors\n                });\n            })\n            .catch((error: any) => {\n                console.log('Error getting media', error);\n            });\n    }, [userId, mediaType, id]);\n\n    useEffect(() => {\n        axios.get('/nextStoryTags')\n            .then((res: any) => {\n                const tagData = res.data;\n                const sortedTags = tagData.sort(function(a: any, b: any) {\n                    if(a.tagName < b.tagName) { return -1; }\n                    if(a.tagName > b.tagName) { return 1; }\n                    return 0;\n                });\n                const storyTagNames = storyTags.map((t: any) => t.tagName);\n                const unAdded: Array<{ tagId: string, tagName: string }> = [];\n                const added: Array<{ tagId: string, tagName: string }> = [];\n                sortedTags.forEach((t: any) => {\n                    if (storyTagNames.includes(t.tagName)) {\n                        added.push(t);\n                    } else unAdded.push(t);\n                });\n                setUnaddedStoryTags(unAdded);\n                setAddedStoryTags(added);\n            })\n            .catch((error: any) => {\n                console.log('Error getting all story tags', error);\n            });\n    }, [storyTags]);\n\n    const updateMediaInDB = (tagsArray: any[]) => {\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\n        axios.put(`/${mediaRouteType}/updateNextStoryTags/${id}`,\n            { tagsArray: tagsArray })\n            .then((res: any) => {\n                console.log('updated tags for media', res.data);\n            }).catch((err: any) => {\n                console.log('error setting tags for media', err);\n            });\n    };\n\n    const addOrRemoveCall = (key: string, mediaId: string, action:string) => {\n        axios.put(host + `/users/${key}/${mediaId}/${userId}`, {\n            action:action\n        }).then((response: any) => {\n            console.log(response);\n        })\n            .catch((error: any) => {\n                console.log('Error getting reviews', error);\n            });\n    };\n\n    const addOrRemoveWatchOrRead = (mediaId: string) => {\n        const key = mediaType === MediaType.movie ? 'moviesWatched' : 'booksRead';\n        if (watchedOrRead) {\n            setWatchedOrRead(false);\n            addOrRemoveCall(key, mediaId, 'REMOVE');\n        } else {\n            setWatchedOrRead(true);\n            addOrRemoveCall(key, mediaId, 'ADD');\n        }\n    };\n\n    const addOrRemoveWatchReadLater = (mediaId: string) => {\n        console.log('watch or read later, mediaType: ', mediaType, 'id: ', mediaId);\n        const key = mediaType === MediaType.movie ? 'watchLater' : 'readLater';\n        if (isForLater) {\n            setForLater(false);\n            addOrRemoveCall(key, mediaId, 'REMOVE');\n        } else {\n            setForLater(true);\n            addOrRemoveCall(key, mediaId, 'ADD');\n        }\n    };\n\n    const addOrRemoveFavorites = (mediaId: string) => {\n        const key = mediaType === MediaType.movie ? 'favoriteMovies' : 'favoriteBooks';\n        if (isFavorite) {\n            setFavorite(false);\n            addOrRemoveCall(key, mediaId, 'REMOVE');\n        } else {\n            setFavorite(true);\n            addOrRemoveCall(key, mediaId, 'ADD');\n        }\n    };\n\n    const handleAddTag = (event: any) => {\n        console.log(event.target.value);\n        const newAddedTags = [...addedStoryTags, event.target.value];\n        setAddedStoryTags(newAddedTags);\n        updateMediaInDB(newAddedTags);\n    };\n\n    const handleDeleteTag = (event: any) => {\n        console.log(event.target.value);\n        const filteredStoryTags = addedStoryTags.filter((t: any) => t.tagId !== event.target.value.tagId);\n        setAddedStoryTags(filteredStoryTags);\n        updateMediaInDB(filteredStoryTags);\n    };\n\n    return (\n        <>\n            <Container maxWidth='lg'>\n                <Grid container direction={'row'}  spacing={5}>\n                    <StyledGridItem item sm={3}>\n                        <StyledImage src={image} />\n                        <div>\n                            Your rating:\n                            <CenteredDiv>\n                                <StarRater\n                                    userRating={userRating}\n                                    readonly={false}\n                                    userId={userId}\n                                    userName={userName}\n                                    userHasReviewText={userHasReviewText}\n                                    mediaId={id}\n                                    mediaType={mediaType}\n                                />\n                            </CenteredDiv>\n                            <div>\n                                <AddToUserButton\n                                    onClick={() => addOrRemoveWatchOrRead(id)}\n                                    isAddedToUser={watchedOrRead}\n                                >\n                                    {`${watchedOrRead ? 'Remove from' : 'Add to'} ${mediaType === MediaType.movie ? 'watched' : 'read'}`}\n                                </AddToUserButton>\n                            </div>\n                            <div>\n                                <AddToUserButton\n                                    onClick={() => addOrRemoveWatchReadLater(id)}\n                                    isAddedToUser={isForLater}\n                                >\n                                    {`${isForLater ? 'Remove from' : 'Add to'} ${mediaType === MediaType.movie ? 'watch' : 'read'} later`}\n                                </AddToUserButton>\n                            </div>\n                            <div>\n                                <AddToUserButton\n                                    onClick={() => addOrRemoveFavorites(id)}\n                                    isAddedToUser={isFavorite}\n                                >\n                                    {isFavorite ? 'Remove favorite' : 'Add favorite'}\n                                </AddToUserButton>\n                            </div>\n                        </div>\n                    </StyledGridItem>\n                    <Grid item sm={6}>\n                        <Typography variant='h1'>{title}</Typography>\n                        <Box fontStyle='italic'>\n                            <Typography variant='subtitle1' gutterBottom>\n                                {people}\n                            </Typography>\n                        </Box>\n                        <VerticallyCenteredDiv>\n                            <Typography variant='subtitle2' >Avg rating: </Typography>\n                            <StarRater readOnlyRating={avgRating} readonly />\n                        </VerticallyCenteredDiv>\n                        <Typography variant='body1'>{blurb}</Typography>\n                    </Grid>\n                    <Grid item sm={3}>\n                        Genres:\n                        <TagsSection tags={genres}/>\n                        Tags:\n                        <TagsSection tagObjects={addedStoryTags}/>\n                        <StyledFormControl variant='outlined'>\n                            <InputLabel id='demo-simple-select-outlined-label'>Add a tag</InputLabel>\n                            <Select\n                                labelId='add-tag-label'\n                                id='add-tag'\n                                value={''}\n                                onChange={handleAddTag}\n                                label='Add a tag'\n                            >\n                                {unaddedStoryTags.map((t: any, index) => {\n                                    return <MenuItem key={`${index}_add`} value={t}>{t.tagName}</MenuItem>;\n                                })}\n                            </Select>\n                        </StyledFormControl>\n                        <StyledFormControl variant='outlined'>\n                            <InputLabel id='demo-simple-select-outlined-label'>Delete a tag</InputLabel>\n                            <Select\n                                labelId='delete-tag-label'\n                                id='delete-tag'\n                                value={''}\n                                onChange={handleDeleteTag}\n                                label='Delete a tag'\n                            >\n                                {addedStoryTags.map((t: any, index) => {\n                                    return <MenuItem key={`${index}_delete`} value={t}>{t.tagName}</MenuItem>;\n                                })}\n                            </Select>\n                        </StyledFormControl>\n                    </Grid>\n                </Grid>\n            </Container>\n            <Container maxWidth='md'>\n                <ReviewList\n                    mediaId={id}\n                    mediaType={mediaType}\n                    userName={userName}\n                    userId={userId}\n                    userRating={userRating}\n                />\n            </Container>\n        </>\n    );\n};\n\nexport default connect(null, { loadAllReviewsAction })(MediaPage);\n"],"sourceRoot":""}