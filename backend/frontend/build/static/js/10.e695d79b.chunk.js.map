{"version":3,"sources":["containers/Container/index.tsx","assets/MockCover.png","constants/dataTypes.ts","components/TagButton/index.tsx","components/TagsSection/index.tsx","components/Button/index.tsx","components/CommentEditor/index.tsx","actions/reviewRatingActions.ts","components/StarRater/index.tsx","components/CommentBlock/index.tsx","utils/styleHelpers.ts","components/ReviewList/index.tsx","containers/MediaPage/index.tsx"],"names":["StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","module","exports","MediaType","StyledTagButton","button","theme","palette","primary","light","secondary","TagButton","tag","StyledTagsSection","div","TagsSection","tags","tagObjects","map","index","key","tagObject","tagName","StyledButton","color","grey","fontSize","main","Button","onClick","label","CommentEditorAction","TextArea","textarea","connect","addReviewAction","reviewObject","type","ADD_REVIEW","text","userId","userName","datePosted","editReviewAction","EDIT_REVIEW","useState","editCommentProps","review","currentText","setCurrentText","value","onChange","event","target","style","textAlign","addCommentProps","now","Date","toString","actionType","Add","rating","undefined","axios","put","mediaId","mediaType","userRating","then","res","console","log","catch","err","Edit","closeEdit","StyledIconButton","IconButton","VerticallyCenteredDiv","changeRatingAction","CHANGE_RATING","ratedStar","setStar","readonly","readOnlyRating","hideReadOnlyLabel","twoDecimalRatingString","clickStar","starIndex","ratingToSet","userHasReviewText","delete","changeRating","toFixed","useEffect","Box","display","Array","star","split","wholeNumberString","decimalString","wholeNumber","parseInt","decimalTimes100","fill","closestFifty","Math","round","getIcon","size","ml","Review","isCurrentUserComment","TopBar","ExpandableDiv","expanded","ShowMoreButton","ShowLessButton","deleteReviewAction","DELETE_REVIEW","isEdit","setIsEdit","setExpanded","hasOverflow","setHasOverflow","expandableRef","useRef","currentUserId","date","toDateString","isAuthor","useMemo","isOverflowing","ref","element","current","scrollHeight","clientHeight","scrollWidth","clientWidth","hasDivOverflown","Typography","variant","reviewUserName","deleteReview","mr","source","state","ownProps","reviews","reviewRatings","filter","r","otherUserReviews","currentUserReview","forEach","push","addCommentEditorOpen","setAddCommentEditor","hasAddedReview","initialStateReviews","slice","stateReviews","setStateReviews","rerenderReviews","totalReviews","length","gutterBottom","dataLength","next","setTimeout","theFetchNum","fetchedReviews","hasMore","loader","endMessage","StyledImage","img","StyledGridItem","Grid","CenteredDiv","AddToUserButton","isAddedToUser","loadAllReviewsAction","reviewsArray","LOAD_REVIEWS_FROM_DB","match","params","id","isForLater","setForLater","isFavorite","setFavorite","watchedOrRead","setWatchedOrRead","title","movie","image","people","genres","nextStoryTags","tagId","blurb","avgRating","mediaObject","setMediaObject","booksRead","moviesWatched","watchLater","readLater","favoriteMovies","favoriteBooks","favoriteAuthors","favoriteDirectors","setUserLists","mediaRouteType","book","get","mediaRes","reviewRatingRes","data","reviewArray","userRatingReviewArr","MockCover","average","error","response","userLists","includes","addOrRemoveCall","action","container","direction","spacing","item","sm","src","addOrRemoveWatchOrRead","addOrRemoveWatchReadLater","addOrRemoveFavorites","fontStyle"],"mappings":"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","file":"static/js/10.e695d79b.chunk.js","sourcesContent":["import React, {ReactNode} from 'react';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled(Container)`\n    margin-top: 85px;\n`;\n\ninterface MarginContainerProps {\n    maxWidth: 'lg'\n        | 'md'\n        | 'sm'\n        | 'xl'\n        | 'xs'\n        | false;\n    children: ReactNode;\n}\n\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\n    return (\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\n    );\n};\n\nexport default MarginContainer;\n","module.exports = __webpack_public_path__ + \"static/media/MockCover.4d59545d.png\";","export enum MediaType {\n    movie = 'movie',\n    book = 'book'\n}\n\nexport type CardData = {\n    title: string,\n    id: string,\n    mediaType: MediaType,\n    image: string, // the url, etc to the image\n    tags: string[],\n    nextStoryTags: string[],\n    people: string,\n    blurb: string,\n    avgRating: number\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface TagsButtonProps {\n    tag: string;\n}\n\nconst StyledTagButton = styled.button`\n    border-radius: 7px;\n    color: white;\n    outline: none;\n    border: none;\n    margin: 5px;\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.palette.primary.light};\n    &:hover {\n        background-color: ${({ theme }) => theme.palette.secondary.light};\n    }\n    font-size: 16px;\n    padding: 3px 5px 3px 5px;\n`;\n\nconst TagButton: React.FC<TagsButtonProps> = (props: TagsButtonProps) => {\n    const { tag } = props;\n    return (\n        <>\n            {tag && <StyledTagButton>{tag}</StyledTagButton>}\n        </>\n    );\n};\n\nexport default TagButton;\n","import React from 'react';\nimport TagButton from '../TagButton';\nimport styled from 'styled-components';\n\ninterface TagsSectionProps {\n    tags?: string[],\n    tagObjects?: Array<{ tagId: string, tagName: string }>\n}\n\nconst StyledTagsSection = styled.div`\n    margin-bottom: 15px;\n`;\n\nconst TagsSection: React.FC<TagsSectionProps> = (props: TagsSectionProps) => {\n    const { tags, tagObjects } = props;\n    return (\n        <StyledTagsSection>\n            { tags && tags.map((tag, index) => <TagButton key={index} tag={tag}/>) }\n            { !tags && tagObjects && tagObjects.map((tagObject, index) => <TagButton key={index} tag={tagObject.tagName}/>) }\n        </StyledTagsSection>\n    );\n};\n\nexport default TagsSection;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button<{fontSize?: string, color?: string}>`\n    margin-right: 10px;\n    background: none;\n    border: none;\n    color: ${(props) => props.color} || ${({ theme }) => theme.palette.grey[500]};\n    cursor: pointer;\n    font-size: ${(props) => props.fontSize || '16px'};\n\n    &:hover {\n        color: ${({ theme }) => theme.palette.primary.main};\n    }\n`;\n\ninterface ButtonProps {\n    onClick: () => void;\n    label?: string;\n    children?: string;\n    fontSize?: string;\n    color?: string;\n}\n\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n    const {onClick, label, children, color} = props;\n    return (\n        <StyledButton onClick={onClick} color={color}>\n            {label || children}\n        </StyledButton>\n    );\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\nimport {connect} from 'react-redux';\nimport {addReviewAction, editReviewAction, ReviewObjectType} from '../../actions/reviewRatingActions';\nimport axios from 'axios';\n\nconst TextArea = styled.textarea`\n    height: 100px;\n    width: 99%;\n    resize: vertical;\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif\n`;\n\nexport enum CommentEditorAction {\n    Add,\n    Edit\n}\n\nconst CommentEditor: React.FC<any> = (props: any) => {\n    const [currentText, setCurrentText] = useState(props.editCommentProps?.review.text || '');\n\n    const submit = () => {\n        const { editCommentProps, addCommentProps } = props;\n        const now = new Date().toString();\n        switch(props.actionType) {\n            case CommentEditorAction.Add:\n                props.addReviewAction({\n                    text: currentText,\n                    userId: addCommentProps.userId,\n                    userName: addCommentProps.userName,\n                    datePosted: now,\n                    rating: undefined\n                } as ReviewObjectType);\n                axios.put('http://localhost:9000/reviewRatings/review',\n                    {\n                        mediaId: addCommentProps.mediaId,\n                        mediaType: addCommentProps.mediaType,\n                        userName: addCommentProps.userName,\n                        userId: addCommentProps.userId,\n                        rating: addCommentProps.userRating,\n                        datePosted: now,\n                        text: currentText\n                    })\n                    .then((res: any) => {\n                        console.log(res);\n                    })\n                    .catch((err: any) => {\n                        console.log(err);\n                    });\n                break;\n            case CommentEditorAction.Edit:\n                const userId = editCommentProps.review.userId;\n                props.editReviewAction({\n                    text: currentText,\n                    userId: userId,\n                    userName: editCommentProps.review.userName,\n                    datePosted: now\n                } as ReviewObjectType);\n                axios.put('http://localhost:9000/reviewRatings/review',\n                    {\n                        mediaId: editCommentProps.mediaId,\n                        mediaType: editCommentProps.mediaType,\n                        userName: editCommentProps.review.userName,\n                        userId: editCommentProps.review.userId,\n                        rating: editCommentProps.userRating,\n                        datePosted: now,\n                        text: currentText\n                    })\n                    .then((res: any) => {\n                        console.log(res);\n                    })\n                    .catch((err: any) => {\n                        console.log(err);\n                    });\n                break;\n            default:\n                return;\n        }\n        props.closeEdit();\n    };\n\n    const changeMessageText = (event: any) => {\n        setCurrentText(event.target.value);\n    };\n\n    // TODO use a better editor - markdown text area? - for the text\n    return (\n        <>\n            <TextArea value={currentText} onChange={changeMessageText}/>\n            <div style={{textAlign: 'right'}}>\n                <Button onClick={submit}>Submit</Button>\n                <Button onClick={props.closeEdit}>Cancel</Button>\n            </div>\n        </>\n    );\n};\n\nexport default connect(null, { addReviewAction, editReviewAction })(CommentEditor);\n","import {\n    ADD_REVIEW, CHANGE_RATING,\n    DELETE_REVIEW,\n    EDIT_REVIEW,\n    LOAD_REVIEWS_FROM_DB\n} from '../constants/reviewRatingConstants';\n\nexport interface ReviewObjectType {\n    text: string,\n    userId: string,\n    userName: string,\n    datePosted: string,\n    rating?: number | undefined\n}\n\nexport const loadAllReviewsAction = (reviewsArray: any[]) => {\n    return {\n        type: LOAD_REVIEWS_FROM_DB,\n        reviewsArray: reviewsArray\n    };\n};\n\nexport const addReviewAction = (reviewObject: ReviewObjectType) => {\n    return {\n        type: ADD_REVIEW,\n        text: reviewObject.text,\n        userId: reviewObject.userId,\n        userName: reviewObject.userName,\n        datePosted: reviewObject.datePosted\n    };\n};\n\nexport const deleteReviewAction = (userId: string) => {\n    return {\n        type: DELETE_REVIEW,\n        userId: userId\n    };\n};\n\nexport const editReviewAction = (reviewObject: ReviewObjectType) => {\n    return {\n        type: EDIT_REVIEW,\n        text: reviewObject.text,\n        userId: reviewObject.userId,\n        userName: reviewObject.userName,\n        datePosted: reviewObject.datePosted\n    };\n};\n\n\nexport const changeRatingAction = (reviewObject: { userId: string, userName: string, rating: number | undefined }) => {\n    return {\n        type: CHANGE_RATING,\n        userId: reviewObject.userId,\n        userName: reviewObject.userName,\n        rating: reviewObject.rating\n    };\n};\n","import React, {useEffect, useState} from 'react';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport {Box, IconButton} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport styled from 'styled-components';\nimport {connect} from 'react-redux';\nimport {changeRatingAction} from '../../actions/reviewRatingActions';\nimport axios from 'axios';\nimport {MediaType} from '../../constants/dataTypes';\n\ninterface StarRaterProps {\n    readonly: boolean\n\n    // required if readonly === true\n    readOnlyRating?: number;\n    hideReadOnlyLabel?: boolean;\n\n    // required if readonly === false\n    userRating?: number;\n    userId?: string;\n    userName?: string;\n    userHasReviewText?: boolean;\n    mediaId?: string;\n    mediaType?: MediaType;\n}\n\nconst StyledIconButton = styled(IconButton)`\n    padding: 0px !important;\n`;\n\nconst VerticallyCenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst getIcon = (index: number, rating: number | undefined) => {\n    const twoDecimalString = rating?.toFixed(2) || '0.00';\n    const [wholeNumberString, decimalString] = twoDecimalString.split('.');\n    const wholeNumber = parseInt(wholeNumberString);\n    const decimalTimes100 = parseInt(decimalString);\n    if ((index + 1) <= wholeNumber) {\n        return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n    } else if (index === wholeNumber) {\n        const closestFifty = Math.round(decimalTimes100 / 50)*50;\n        if (closestFifty === 0) {\n            return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n        } else if (closestFifty === 50) {\n            return <StarHalfIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n        } else if (closestFifty === 100) {\n            return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n        }\n    } else {\n        return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n    }\n};\n\nconst changeRating = (props: any, userId: string, userName: string, rating: number | undefined) => {\n    props.changeRatingAction({ userId, userName, rating });\n    if (!rating && !props.userHasReviewText) {\n        axios.delete(`http://localhost:9000/reviewRatings`\n            + `/${props.mediaType}/${props.mediaId}/${userId}`)\n            .then((res: any) => {\n                console.log('Successfully deleted the reviewRating', res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    } else {\n        axios.put('http://localhost:9000/reviewRatings/rating',\n            {\n                mediaId: props.mediaId,\n                mediaType: props.mediaType,\n                userId: userId,\n                rating: rating\n            })\n            .then((res: any) => {\n                console.log('Successfully put the rating: ', res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    }\n};\n\nconst StarRater: React.FC<StarRaterProps> = (props: StarRaterProps) => {\n    const [ratedStar, setStar] = useState(0);\n    const { readonly, readOnlyRating, hideReadOnlyLabel, userRating, userId, userName } = props;\n    let twoDecimalRatingString = ''; // TODO set up tooltip functionality\n    if (readonly && readOnlyRating) {\n        twoDecimalRatingString = readOnlyRating.toFixed(2);\n    } else if (userRating) {\n        twoDecimalRatingString = userRating.toFixed(2);\n    }\n\n    useEffect(() => {\n        if (!ratedStar) {\n            setStar(userRating || 0);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [userRating]);\n\n    function clickStar(starIndex: number) {\n        const ratingToSet = ratedStar === starIndex ? starIndex - 1 : starIndex;\n        setStar(ratingToSet);\n        userId && userName && changeRating(props, userId, userName, ratingToSet);\n        // TODO use the api to set the rating (add the media type and media id as props)\n    }\n\n    return (\n        <Box display='flex'>\n            {[...Array(5)].map((star, index) => {\n                return (\n                    <VerticallyCenteredDiv key={index}>\n                        {readonly ?\n                            <>\n                                {\n                                    getIcon(index, readOnlyRating)\n                                }\n                            </>\n                            :\n                            <StyledIconButton size={'small'} onClick={() => clickStar(index + 1)}>\n                                {index < ratedStar ?\n                                    <StarIcon style={{fill: '#FFCC00'}} />\n                                    :\n                                    <StarBorderIcon style={{fill: '#FFCC00'}} />\n                                }\n                            </StyledIconButton>\n                        }\n                    </VerticallyCenteredDiv>\n                );\n            })}\n            <Box ml={1}>{readonly && !hideReadOnlyLabel && twoDecimalRatingString}</Box>\n        </Box>\n    );\n};\n\nexport default connect(null, { changeRatingAction })(StarRater);\n","import React, {useEffect, useMemo, useRef, useState} from 'react';\nimport styled from 'styled-components';\nimport {Box, Typography} from '@material-ui/core';\nimport Button from '../Button';\nimport {connect} from 'react-redux';\nimport {deleteReviewAction} from '../../actions/reviewRatingActions';\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\nimport ReactMarkdown from 'react-markdown';\nimport {hasDivOverflown} from '../../utils/styleHelpers';\nimport StarRater from '../StarRater';\nimport axios from 'axios';\n\ninterface CommentBlockProps {\n    review: any,\n    currentUserId: string,\n    isCurrentUserComment?: boolean,\n    mediaId?: string,\n    mediaType?: string,\n    userRating?: number | undefined;\n}\n\nconst Review = styled.div<{ isCurrentUserComment: boolean | undefined }>`\n    border-top: ${({ theme }) => `2px solid ${theme.palette.grey[400]}`};\n    border: ${({ theme, isCurrentUserComment }) => isCurrentUserComment && `2px solid ${theme.palette.grey[400]}`};\n    min-height: 50px;\n    padding: 5px;\n    padding-bottom: 0px;\n`;\n\nconst TopBar = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst ExpandableDiv = styled.div<{ expanded: boolean }>`\n    max-height: ${(props) => props.expanded ? '' : '200px'};\n    overflow: ${(props) => props.expanded ? 'visible' : 'hidden'};\n    position: relative;\n`;\n\nconst ShowMoreButton = styled.button`\n    border: none;\n    box-shadow: 0px 0 5px rgba(0, 0, 0, 0.3);\n    outline: none;\n    background-color: rgba(255, 255, 255, 0.75);\n    text-align: center;\n    height: 30px;\n    cursor: pointer;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    padding: 0px;\n    width: 100%;\n    backdrop-filter: blur(1.5px);\n`;\n\nconst ShowLessButton = styled.button`\n    border: none;\n    outline: none;\n    background-color: rgba(255, 255, 255, 0.90);\n    text-align: center;\n    height: 30px;\n    cursor: pointer;\n    padding: 0px;\n    width: 100%;\n    &:hover {\n        background-color: ${({ theme }) => theme.palette.grey[200]};\n    }\n    margin-bottom: 5px;\n`;\n\nconst VerticallyCenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nfunction deleteReview(props: any) {\n    const userId = props.review.userId;\n    const reviewUserName = props.review.userName;\n    props.deleteReviewAction(userId);\n    if (props.userRating) { // if a rating exists, don't delete from db\n        axios.put('http://localhost:9000/reviewRatings/review',\n            {\n                mediaId: props.mediaId,\n                mediaType: props.mediaType,\n                userName: reviewUserName,\n                userId: userId,\n                datePosted: '',\n                text: ''\n            })\n            .then((res: any) => {\n                console.log(res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    } else { // if no rating, then delete whole reviewRating document from db\n        axios.delete(`http://localhost:9000/reviewRatings`\n        + `/${props.mediaType}/${props.mediaId}/${props.review.userId}`)\n            .then((res: any) => {\n                console.log('successfully deleted the reviewRating', res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    }\n}\n\nconst CommentBlock: React.FC<CommentBlockProps> = (props: CommentBlockProps) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const [hasOverflow, setHasOverflow] = useState(false);\n    const expandableRef = useRef(null);\n    const { review, currentUserId, isCurrentUserComment } = props;\n    const date = new Date(review.datePosted).toDateString();\n\n    const isAuthor = useMemo(() => {\n        return currentUserId === review.userId;\n    }, [review, currentUserId]);\n\n    useEffect(() => {\n        const isOverflowing = hasDivOverflown(expandableRef);\n        if (isOverflowing) {\n            setHasOverflow(true);\n        } else {\n            setHasOverflow(false);\n        }\n    }, [review]);\n    // TODO only show the edit and delete buttons if the userId matches with the current user's id\n    return (\n        <>\n            <Review isCurrentUserComment={isCurrentUserComment}>\n            {isEdit ?\n                <>\n                    <Typography variant={'h5'}><strong>{review.userName}</strong></Typography>\n                    <CommentEditor\n                        actionType={CommentEditorAction.Edit}\n                        closeEdit={() => setIsEdit(false)}\n                        editCommentProps={props}\n                    />\n                </>\n                :\n                <ExpandableDiv expanded={expanded} ref={expandableRef}>\n                    <TopBar>\n                        <Typography variant={'h5'}>\n                            <strong>\n                                {review.userName}\n                            </strong>\n                            {` on ${date}`}\n                        </Typography>\n                        {isAuthor &&\n                            <div>\n                                <Button onClick={() => setIsEdit(true)}>Edit</Button>\n                                <Button onClick={() => deleteReview(props)}>Delete</Button>\n                            </div>\n                        }\n                    </TopBar>\n                    <VerticallyCenteredDiv>\n                        <Box mr={1}>User rated: </Box>\n                        {review.rating ?\n                            <StarRater readonly readOnlyRating={review.rating} hideReadOnlyLabel />\n                            : 'no rating'\n                        }\n                    </VerticallyCenteredDiv>\n                    <ReactMarkdown source={review.text} />\n                    {!expanded && hasOverflow &&\n                        <ShowMoreButton onClick={() => setExpanded(true)}>\n                            <Typography variant={'body1'}>Show more...</Typography>\n                        </ShowMoreButton>\n                    }\n                    {expanded &&\n                        <ShowLessButton onClick={() => setExpanded(false)}>\n                            <Typography variant={'body1'}>Show less</Typography>\n                        </ShowLessButton>\n                    }\n                </ExpandableDiv>}\n            </Review>\n        </>\n    );\n};\n\nexport default connect(null, { deleteReviewAction })(CommentBlock);\n","export function hasDivOverflown(ref: { current: any; }): boolean {\n    const element = ref.current;\n    return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\n","import React, {useEffect, useState} from 'react';\nimport CommentBlock from '../CommentBlock';\nimport {Typography} from '@material-ui/core';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\nimport Button from '../Button';\nimport { MediaType } from '../../constants/dataTypes';\nimport {connect} from 'react-redux';\n\ninterface ReviewListProps {\n    mediaId: string,\n    mediaType: MediaType,\n    otherUserReviews: any[],\n    currentUserReview?: any,\n    userId: string,\n    userName: string,\n    userRating?: number | undefined\n}\n\nconst ReviewList: React.FC<ReviewListProps> = (props: ReviewListProps) => {\n    const [addCommentEditorOpen, setAddCommentEditor] = useState(false);\n    const { otherUserReviews, currentUserReview, mediaId, mediaType, userId, userName, userRating } = props;\n\n    let hasAddedReview = !!currentUserReview;\n\n    const initialStateReviews = otherUserReviews?.slice(0,9);\n    const [stateReviews, setStateReviews] = useState(initialStateReviews);\n\n    useEffect(() => {\n        const rerenderReviews = otherUserReviews?.slice(0,9);\n        setStateReviews(rerenderReviews);\n    }, [otherUserReviews]);\n\n    const fetchMoreData = () => {\n        setTimeout(() => {\n            const currentReviewLength = stateReviews.length;\n            const theFetchNum = currentReviewLength + 5;\n            const fetchedReviews = otherUserReviews.slice(0, theFetchNum);\n            setStateReviews(fetchedReviews);\n        }, 1000);\n    };\n\n    const totalReviews = hasAddedReview ? otherUserReviews.length + 1 : otherUserReviews.length;\n\n    return (\n        <>\n            <Typography variant={'h3'} gutterBottom>\n                {totalReviews || 0} Total Reviews\n            </Typography>\n            {addCommentEditorOpen ?\n                <>\n                    <Typography variant={'h5'}><strong>{userName}</strong></Typography>\n                    <CommentEditor\n                        actionType={CommentEditorAction.Add}\n                        closeEdit={() => setAddCommentEditor(false)}\n                        addCommentProps={{\n                            mediaType: mediaType,\n                            mediaId: mediaId,\n                            userId: userId,\n                            userName: userName,\n                            userRating: userRating\n                        }}\n                    />\n                </> :\n                <div style={{textAlign: 'right'}}>\n                    {!hasAddedReview &&\n                        <Button onClick={() => setAddCommentEditor(true)}>\n                            Add Review\n                        </Button>\n                    }\n                </div>\n            }\n            {currentUserReview && currentUserReview.text &&\n                <>\n                    <CommentBlock\n                        review={currentUserReview}\n                        currentUserId={userId}\n                        isCurrentUserComment={true}\n                        mediaId={mediaId}\n                        mediaType={mediaType}\n                        userRating={userRating}\n                    />\n                </>\n            }\n            <br/>\n            {otherUserReviews ? <InfiniteScroll\n                dataLength={stateReviews.length}\n                next={fetchMoreData}\n                hasMore={stateReviews.length < otherUserReviews.length}\n                loader={<h4 style={{textAlign: 'center'}}>Loading more reviews...</h4>}\n                endMessage={\n                    <p style={{textAlign: 'center'}}>\n                        <b>No more reviews</b>\n                    </p>\n                }>\n                {stateReviews.map((r, index) =>\n                    <CommentBlock\n                        key={index}\n                        review={r}\n                        currentUserId={userId}\n                    />)\n                }\n            </InfiniteScroll> : null}\n        </>\n    );\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n    const reviews = state.reviewRatings.filter((r: any) => r.text);\n    let otherUserReviews: any[] = [];\n    let currentUserReview: any = undefined;\n    reviews.forEach((r: any) => {\n        r.userId === ownProps.userId ? currentUserReview = r : otherUserReviews.push(r);\n    });\n    return {\n        otherUserReviews: otherUserReviews,\n        currentUserReview: currentUserReview\n    };\n};\n\nexport default connect(mapStateToProps)(ReviewList);\n","import React, {useEffect, useState} from 'react';\nimport Container from '../Container';\nimport Typography from '@material-ui/core/Typography';\nimport ReviewList from '../../components/ReviewList';\nimport { MediaType } from '../../constants/dataTypes';\nimport MockCover from '../../assets/MockCover.png';\nimport styled from 'styled-components';\nimport {Box, Grid} from '@material-ui/core';\nimport TagsSection from '../../components/TagsSection';\nimport StarRater from '../../components/StarRater';\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport {loadAllReviewsAction} from '../../actions/reviewRatingActions';\n\nconst StyledImage = styled.img`\n    width: 100%;\n    max-width: 300px;\n    margin-bottom: 15px;\n`;\n\nconst StyledGridItem = styled(Grid)`\n    text-align: center;\n`;\n\nconst VerticallyCenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nconst CenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 10px;\n`;\n\nconst AddToUserButton = styled.button<{ isAddedToUser: boolean }>`\n    background-color: ${({ theme, isAddedToUser }) => isAddedToUser ? theme.palette.grey[300] : theme.palette.primary.light};\n    border: none;\n    outline: none;\n    font-size: 16px;\n    border-radius: 5px;\n    padding: 5px;\n    cursor: pointer;\n    margin: 5px;\n    color: ${({ isAddedToUser }) => isAddedToUser ? 'black' : 'white'};\n`;\n\nconst MediaPage: React.FC<{}> = (props: any) => {\n    const { id, mediaType } = props.match.params;\n    const [isForLater, setForLater] = useState(false);\n    const [isFavorite, setFavorite] = useState(false);\n    const [watchedOrRead, setWatchedOrRead] = useState(false);\n    const [mediaObject, setMediaObject] = useState({\n        title: '',\n        id: id,\n        mediaType: MediaType.movie,\n        image: '',\n        people: '',\n        genres: [''],\n        nextStoryTags: [{ tagId: '', tagName: '' }],\n        blurb: '',\n        avgRating: 0,\n        userRating: 0,\n        userHasReviewText: false\n    });\n    const [userLists, setUserLists] = useState({\n        booksRead: [],\n        moviesWatched: [],\n        watchLater: [],\n        readLater: [],\n        favoriteMovies: [],\n        favoriteBooks: [],\n        favoriteAuthors: [],\n        favoriteDirectors: []\n    });\n    // TODO get username from redux\n    const userName = 'tempName';\n    const userId = 'user-000';\n\n    const {\n        title,\n        image,\n        people,\n        blurb,\n        genres,\n        nextStoryTags,\n        avgRating,\n        userRating,\n        userHasReviewText\n    } = mediaObject;\n\n    useEffect(() => {\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\n        axios.get(`http://localhost:9000/${mediaRouteType}/${id}`)\n            .then((mediaRes: any) => {\n                axios.get(`http://localhost:9000/reviewRatings/${mediaType}/${id}`)\n                    .then((reviewRatingRes: any) => {\n                        const reviews = reviewRatingRes.data.reviewArray;\n                        props.loadAllReviewsAction(reviews);\n                        const userRatingReviewArr = reviews.filter((r: any) => r.userId === userId);\n                        const userRating = userRatingReviewArr.length > 0 ? userRatingReviewArr[0].rating : undefined;\n                        const userHasReviewText = userRatingReviewArr.length > 0 && !!userRatingReviewArr[0].text;\n                        setMediaObject({\n                            title: 'Mock Title Harry Potter',\n                            id: 'movie-001',\n                            mediaType: MediaType.movie,\n                            image: MockCover,\n                            people: 'J.K. Rowling',\n                            genres: ['fantasy', 'action', 'sci-fi', 'superheroes', 'tag1', 'tag2', 'tag3'],\n                            nextStoryTags: mediaRes.data.nextStoryTags,\n                            blurb: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n                            avgRating: reviewRatingRes.data.average,\n                            userRating: userRating,\n                            userHasReviewText: userHasReviewText\n                        });\n                    })\n                    .catch((error: any) => {\n                        console.log('Error getting reviews', error);\n                    });\n            })\n            .catch((error: any) => {\n                console.log('Error getting media', error);\n            });\n        // TODO get the media info from an api call using the media id\n    }, [props, id, mediaType]);\n\n    useEffect(() => {\n        axios.get(`http://localhost:9000/users/userLists/${userId}`)\n            .then((response: any) => {\n                const userLists = response.data;\n                if (mediaType === MediaType.movie) {\n                    if (userLists.watchLater.includes(id)) {\n                        setForLater(true);\n                    }\n                    if (userLists.favoriteMovies.includes(id)) {\n                        setFavorite(true);\n                    }\n                    if (userLists.moviesWatched.includes(id)) {\n                        setWatchedOrRead(true);\n                    }\n                } else {\n                    if (userLists.readLater.includes(id)) {\n                        setForLater(true);\n                    }\n                    if (userLists.favoriteBooks.includes(id)) {\n                        setFavorite(true);\n                    }\n                    if (userLists.booksRead.includes(id)) {\n                        setWatchedOrRead(true);\n                    }\n                }\n                setUserLists({\n                    booksRead: userLists.booksRead,\n                    moviesWatched: userLists.moviesWatched,\n                    watchLater: userLists.watchLater,\n                    readLater: userLists.readLater,\n                    favoriteMovies: userLists.favoriteMovies,\n                    favoriteBooks: userLists.favoriteBooks,\n                    favoriteAuthors: userLists.favoriteAuthors,\n                    favoriteDirectors: userLists.favoriteDirectors\n                });\n            })\n            .catch((error: any) => {\n                console.log('Error getting media', error);\n            });\n    }, [userId, mediaType]);\n\n    const addOrRemoveCall = (key: string, mediaId: string, action:string) => {\n        axios.put(`http://localhost:9000/users/${key}/${mediaId}/${userId}`, {\n            action:action\n        }).then((response: any) => {\n            console.log(response);\n        })\n            .catch((error: any) => {\n                console.log('Error getting reviews', error);\n            });\n    };\n\n    const addOrRemoveWatchOrRead = (mediaId: string) => {\n        const key = mediaType === MediaType.movie ? 'moviesWatched' : 'booksRead';\n        if (watchedOrRead) {\n            setWatchedOrRead(false);\n            addOrRemoveCall(key, mediaId, 'REMOVE');\n        } else {\n            setWatchedOrRead(true);\n            addOrRemoveCall(key, mediaId, 'ADD');\n        }\n    };\n\n    const addOrRemoveWatchReadLater = (mediaId: string) => {\n        console.log('watch or read later, mediaType: ', mediaType, 'id: ', mediaId);\n        const key = mediaType === MediaType.movie ? 'watchLater' : 'readLater';\n        if (isForLater) {\n            setForLater(false);\n            addOrRemoveCall(key, mediaId, 'REMOVE');\n        } else {\n            setForLater(true);\n            addOrRemoveCall(key, mediaId, 'ADD');\n        }\n    };\n\n    const addOrRemoveFavorites = (mediaId: string) => {\n        const key = mediaType === MediaType.movie ? 'favoriteMovies' : 'favoriteBooks';\n        if (isFavorite) {\n            setFavorite(false);\n            addOrRemoveCall(key, mediaId, 'REMOVE');\n        } else {\n            setFavorite(true);\n            addOrRemoveCall(key, mediaId, 'ADD');\n        }\n    };\n\n    return (\n        <>\n            <Container maxWidth='lg'>\n                <Grid container direction={'row'}  spacing={5}>\n                    <StyledGridItem item sm={3}>\n                        <StyledImage src={image} />\n                        <div>\n                            Your rating:\n                            <CenteredDiv>\n                                <StarRater\n                                    userRating={userRating}\n                                    readonly={false}\n                                    userId={userId}\n                                    userName={userName}\n                                    userHasReviewText={userHasReviewText}\n                                    mediaId={id}\n                                    mediaType={mediaType}\n                                />\n                            </CenteredDiv>\n                            <div>\n                                <AddToUserButton\n                                    onClick={() => addOrRemoveWatchOrRead(id)}\n                                    isAddedToUser={watchedOrRead}\n                                >\n                                    {`${watchedOrRead ? 'Remove from' : 'Add to'} ${mediaType === MediaType.movie ? 'watched' : 'read'}`}\n                                </AddToUserButton>\n                            </div>\n                            <div>\n                                <AddToUserButton\n                                    onClick={() => addOrRemoveWatchReadLater(id)}\n                                    isAddedToUser={isForLater}\n                                >\n                                    {`${isForLater ? 'Remove from' : 'Add to'} ${mediaType === MediaType.movie ? 'watch' : 'read'} later`}\n                                </AddToUserButton>\n                            </div>\n                            <div>\n                                <AddToUserButton\n                                    onClick={() => addOrRemoveFavorites(id)}\n                                    isAddedToUser={isFavorite}\n                                >\n                                    {isFavorite ? 'Remove favorite' : 'Add favorite'}\n                                </AddToUserButton>\n                            </div>\n                        </div>\n                    </StyledGridItem>\n                    <Grid item sm={6}>\n                        <Typography variant='h1'>{title}</Typography>\n                        <Box fontStyle='italic'>\n                            <Typography variant='subtitle1' gutterBottom>\n                                {people}\n                            </Typography>\n                        </Box>\n                        <VerticallyCenteredDiv>\n                            <Typography variant='subtitle2' >Avg rating: </Typography>\n                            <StarRater readOnlyRating={avgRating} readonly />\n                        </VerticallyCenteredDiv>\n                        <Typography variant='body1'>{blurb}</Typography>\n                    </Grid>\n                    <Grid item sm={3}>\n                        Genres:\n                        <TagsSection tags={genres}/>\n                        Tags:\n                        <TagsSection tagObjects={nextStoryTags}/>\n                    </Grid>\n                </Grid>\n            </Container>\n            {/*TODO only show CommentEditor to add comments if the user has not submitted before*/}\n            <Container maxWidth='md'>\n                <ReviewList\n                    mediaId={id}\n                    mediaType={mediaType}\n                    userName={userName}\n                    userId={userId}\n                    userRating={userRating}\n                />\n            </Container>\n        </>\n    );\n};\n\nexport default connect(null, { loadAllReviewsAction })(MediaPage);\n"],"sourceRoot":""}