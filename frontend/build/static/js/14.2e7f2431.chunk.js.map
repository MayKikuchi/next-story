{"version":3,"sources":["constants/dataTypes.ts","containers/Container/index.tsx","actions/singleSearchPageFilterActions.ts","actions/reviewRatingActions.ts","components/TagButton/index.tsx","components/TagsSection/index.tsx","components/StarRater/index.tsx","components/AddToUserButton/index.tsx","components/Button/index.tsx","components/CommentEditor/index.tsx","components/CommentBlock/index.tsx","utils/styleHelpers.ts","components/ReviewList/index.tsx","components/FavoritesDropDown/index.tsx","containers/MediaPage/index.tsx"],"names":["MediaType","SingleQueryType","StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","changeSingleSearchPageFilter","filterName","type","CHANGE_SINGLE_SEARCH_PAGE_FILTER","loadAllReviewsAction","reviewsArray","LOAD_REVIEWS_FROM_DB","addReviewAction","reviewObject","ADD_REVIEW","text","userId","userName","datePosted","deleteReviewAction","DELETE_REVIEW","editReviewAction","EDIT_REVIEW","changeRatingAction","CHANGE_RATING","rating","StyledTagButton","button","theme","palette","primary","light","secondary","connect","label","tagId","singleQueryType","history","useHistory","encodedSubject","encodeURIComponent","onClick","queryType","bookPerson","BOOKS","moviePerson","MOVIES","tag","genre","searchBar","ALL","changeQueryFilter","push","StyledTagsSection","div","TagsSection","tags","tagObjects","map","index","key","tagObject","tagName","StyledIconButton","IconButton","VerticallyCenteredDiv","host","window","location","protocol","useState","ratedStar","setStar","readonly","readOnlyRating","hideReadOnlyLabel","userRating","twoDecimalRatingString","clickStar","starIndex","ratingToSet","userHasReviewText","axios","put","mediaId","mediaType","then","res","console","log","catch","err","delete","changeRating","toFixed","useEffect","display","Array","star","split","wholeNumberString","decimalString","wholeNumber","parseInt","decimalTimes100","style","fill","fontSize","closestFifty","Math","round","getIcon","size","ml","StyledButton","isAddedToUser","grey","AddToUserButton","addLabel","removeLabel","isAdded","toBackendOnClick","setIsAddedToUser","color","main","Button","CommentEditorAction","TextArea","textarea","editCommentProps","review","currentText","setCurrentText","value","onChange","event","target","textAlign","addCommentProps","now","Date","toString","actionType","Add","undefined","Edit","closeEdit","Review","isCurrentUserComment","TopBar","ExpandableDiv","expanded","ShowMoreButton","ShowLessButton","isEdit","setIsEdit","setExpanded","hasOverflow","setHasOverflow","expandableRef","useRef","currentUserId","date","toDateString","isAuthor","useMemo","isOverflowing","ref","element","current","scrollHeight","clientHeight","scrollWidth","clientWidth","hasDivOverflown","Typography","variant","reviewUserName","deleteReview","Box","mr","StarRater","source","state","ownProps","reviews","reviewRatings","filter","r","otherUserReviews","currentUserReview","forEach","addCommentEditorOpen","setAddCommentEditor","hasAddedReview","initialStateReviews","slice","stateReviews","setStateReviews","rerenderReviews","totalReviews","length","gutterBottom","dataLength","next","setTimeout","theFetchNum","fetchedReviews","hasMore","loader","endMessage","FavoritesDropDown","allOptions","favoriteOptions","favKey","favs","setFavs","React","anchorEl","setAnchorEl","currentTarget","endIcon","Menu","id","keepMounted","open","Boolean","onClose","o","isFav","includes","MenuItem","subject","filteredFavs","f","act","action","response","error","handleClose","whiteSpace","StyledImage","img","ImagePlaceholder","StyledGridItem","Grid","CenteredDiv","StyledFormControl","FormControl","pathname","isForLater","setForLater","isFavorite","setFavorite","watchedOrRead","setWatchedOrRead","title","start","image","people","genres","blurb","mediaObject","setMediaObject","avgRating","reviewsObject","setReviewsObject","booksRead","moviesWatched","watchLater","readLater","favoriteMovies","favoriteBooks","favoriteAuthors","favoriteDirectors","favoriteGenres","userLists","setUserLists","storyTags","setStoryTags","unaddedStoryTags","setUnaddedStoryTags","addedStoryTags","setAddedStoryTags","sessionDataString","sessionStorage","getItem","sessionDataObj","JSON","parse","username","numberSubscriptions","isLoading","setIsLoading","mediaRouteType","book","get","mediaRes","mediaData","data","message","nextStoryTags","reviewRatingRes","reviewArray","userRatingReviewArr","average","movie","tagData","storyTagNames","t","unAdded","added","updateMediaInDB","tagsArray","addOrRemoveCall","container","direction","spacing","item","sm","src","addOrRemoveWatchOrRead","addOrRemoveWatchReadLater","addOrRemoveFavorites","fontStyle","join","content","InputLabel","Select","labelId","newAddedTags","filteredDeleteTags","filteredStoryTags","newDeleteTags"],"mappings":"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","file":"static/js/14.2e7f2431.chunk.js","sourcesContent":["export enum MediaType {\r\n    movie = 'movie',\r\n    book = 'book',\r\n    start = ''\r\n}\r\n\r\nexport enum SingleQueryType {\r\n    bookPerson = 'bookPerson',\r\n    moviePerson = 'moviePerson',\r\n    genre = 'genre',\r\n    tag = 'tag',\r\n    searchBar = 'searchBar'\r\n}\r\n\r\nexport type CardData = {\r\n    title: string,\r\n    id: string,\r\n    mediaType: MediaType,\r\n    image: string, // the url, etc to the image\r\n    genres: string[],\r\n    nextStoryTags: string[],\r\n    people: string,\r\n    blurb: string,\r\n    avgRating: number\r\n}\r\n\r\nexport interface Tag{\r\n  tagId: string;\r\n  tagName: string;\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledContainer = styled(Container)`\r\n    margin-top: 85px;\r\n    margin-bottom: 85px;\r\n`;\r\n\r\ninterface MarginContainerProps {\r\n    maxWidth: 'lg'\r\n        | 'md'\r\n        | 'sm'\r\n        | 'xl'\r\n        | 'xs'\r\n        | false;\r\n    children: ReactNode;\r\n}\r\n\r\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\r\n    return (\r\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\r\n    );\r\n};\r\n\r\nexport default MarginContainer;\r\n","import {\r\n    CHANGE_SINGLE_SEARCH_PAGE_FILTER\r\n} from '../constants/singleSearchPageFilterConstants';\r\n\r\nexport const changeSingleSearchPageFilter = (filterName: string) => {\r\n    return {\r\n        type: CHANGE_SINGLE_SEARCH_PAGE_FILTER,\r\n        filterName: filterName\r\n    };\r\n};\r\n","import {\r\n    ADD_REVIEW, CHANGE_RATING,\r\n    DELETE_REVIEW,\r\n    EDIT_REVIEW,\r\n    LOAD_REVIEWS_FROM_DB,\r\n} from '../constants/reviewRatingConstants';\r\n\r\nexport interface ReviewObjectType {\r\n    text: string,\r\n    userId: string,\r\n    userName: string,\r\n    datePosted: string,\r\n    rating?: number | undefined\r\n}\r\n\r\nexport const loadAllReviewsAction = (reviewsArray: any[]) => {\r\n    return {\r\n        type: LOAD_REVIEWS_FROM_DB,\r\n        reviewsArray: reviewsArray\r\n    };\r\n};\r\n\r\nexport const addReviewAction = (reviewObject: ReviewObjectType) => {\r\n    return {\r\n        type: ADD_REVIEW,\r\n        text: reviewObject.text,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        datePosted: reviewObject.datePosted\r\n    };\r\n};\r\n\r\nexport const deleteReviewAction = (userId: string) => {\r\n    return {\r\n        type: DELETE_REVIEW,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const editReviewAction = (reviewObject: ReviewObjectType) => {\r\n    return {\r\n        type: EDIT_REVIEW,\r\n        text: reviewObject.text,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        datePosted: reviewObject.datePosted\r\n    };\r\n};\r\n\r\n\r\nexport const changeRatingAction = (reviewObject: { userId: string, userName: string, rating: number | undefined }) => {\r\n    return {\r\n        type: CHANGE_RATING,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        rating: reviewObject.rating\r\n    };\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useHistory} from 'react-router';\r\nimport {SingleQueryType} from '../../constants/dataTypes';\r\nimport {ALL, BOOKS, MOVIES} from '../../constants/homePageFilterConstants';\r\nimport {connect} from 'react-redux';\r\nimport {changeSingleSearchPageFilter} from '../../actions/singleSearchPageFilterActions';\r\n\r\ninterface TagsButtonProps {\r\n    label: string;\r\n    singleQueryType: SingleQueryType;\r\n    tagId?: string; // needed for if the tag button is being used for nextStoryTags\r\n}\r\n\r\nconst StyledTagButton = styled.button`\r\n    border-radius: 7px;\r\n    color: white;\r\n    outline: none;\r\n    border: none;\r\n    margin: 5px;\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.palette.primary.light};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.palette.secondary.light};\r\n    }\r\n    font-size: 16px;\r\n    padding: 3px 5px 3px 5px;\r\n`;\r\n\r\nconst changeQueryFilter = (props: any, queryType: SingleQueryType) => {\r\n    switch (queryType) {\r\n        case SingleQueryType.bookPerson:\r\n            props.changeSingleSearchPageFilter(BOOKS);\r\n            break;\r\n        case SingleQueryType.moviePerson:\r\n            props.changeSingleSearchPageFilter(MOVIES);\r\n            break;\r\n        case SingleQueryType.tag:\r\n        case SingleQueryType.genre:\r\n        case SingleQueryType.searchBar:\r\n        default:\r\n            props.changeSingleSearchPageFilter(ALL);\r\n            break;\r\n    }\r\n};\r\n\r\nconst TagButton: React.FC<TagsButtonProps> = (props: TagsButtonProps) => {\r\n    const { label, tagId, singleQueryType } = props;\r\n    const history = useHistory();\r\n\r\n    const encodedSubject = encodeURIComponent(tagId || label);\r\n    const goToSingleQuery = () => {\r\n        changeQueryFilter(props, singleQueryType);\r\n        history.push(`/searchResult/param?singleQueryType=${singleQueryType}&query=${encodedSubject}`);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {label &&\r\n                <StyledTagButton\r\n                    onClick={goToSingleQuery}\r\n                >\r\n                    {label}\r\n                </StyledTagButton>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, {changeSingleSearchPageFilter})(TagButton);\r\n","import React from 'react';\r\nimport TagButton from '../TagButton';\r\nimport styled from 'styled-components';\r\nimport {SingleQueryType} from '../../constants/dataTypes';\r\n\r\ninterface TagsSectionProps {\r\n    singleQueryType: SingleQueryType;\r\n    tags?: string[],\r\n    tagObjects?: Array<{ tagId: string, tagName: string }>\r\n}\r\n\r\nconst StyledTagsSection = styled.div`\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst TagsSection: React.FC<TagsSectionProps> = (props: TagsSectionProps) => {\r\n    const { singleQueryType, tags, tagObjects } = props;\r\n    return (\r\n        <StyledTagsSection>\r\n            { tags && tags.map((tag, index) => {\r\n                return (\r\n                    <TagButton\r\n                        key={index}\r\n                        label={tag}\r\n                        singleQueryType={singleQueryType}\r\n                    />);\r\n            }) }\r\n            { !tags && tagObjects && tagObjects.map((tagObject, index) => {\r\n                return (\r\n                    <TagButton\r\n                        key={index}\r\n                        label={tagObject.tagName}\r\n                        singleQueryType={singleQueryType}\r\n                        tagId={tagObject.tagId}\r\n                    />);\r\n            }) }\r\n        </StyledTagsSection>\r\n    );\r\n};\r\n\r\nexport default TagsSection;\r\n","import React, {useEffect, useState} from 'react';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {Box, IconButton} from '@material-ui/core';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\r\nimport styled from 'styled-components';\r\nimport {connect} from 'react-redux';\r\nimport {changeRatingAction} from '../../actions/reviewRatingActions';\r\nimport axios from 'axios';\r\nimport {MediaType} from '../../constants/dataTypes';\r\n\r\ninterface StarRaterProps {\r\n    readonly: boolean\r\n\r\n    // required if readonly === true\r\n    readOnlyRating?: number;\r\n    hideReadOnlyLabel?: boolean;\r\n\r\n    // required if readonly === false\r\n    userRating?: number;\r\n    userId?: string;\r\n    userName?: string;\r\n    userHasReviewText?: boolean;\r\n    mediaId?: string;\r\n    mediaType?: MediaType;\r\n}\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n    padding: 0px !important;\r\n`;\r\n\r\nconst VerticallyCenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst host = window.location.protocol + '//'+ window.location.host;\r\n\r\nconst getIcon = (index: number, rating: number | undefined) => {\r\n    const twoDecimalString = rating?.toFixed(2) || '0.00';\r\n    const [wholeNumberString, decimalString] = twoDecimalString.split('.');\r\n    const wholeNumber = parseInt(wholeNumberString);\r\n    const decimalTimes100 = parseInt(decimalString);\r\n    if ((index + 1) <= wholeNumber) {\r\n        return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n    } else if (index === wholeNumber) {\r\n        const closestFifty = Math.round(decimalTimes100 / 50)*50;\r\n        if (closestFifty === 0) {\r\n            return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        } else if (closestFifty === 50) {\r\n            return <StarHalfIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        } else if (closestFifty === 100) {\r\n            return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        }\r\n    } else {\r\n        return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n    }\r\n};\r\n\r\nconst changeRating = (props: any, userId: string, userName: string, rating: number | undefined) => {\r\n    props.changeRatingAction({ userId, userName, rating });\r\n    if (!rating && !props.userHasReviewText) {\r\n        axios.delete(host + `/reviewRatings`\r\n            + `/${props.mediaType}/${props.mediaId}/${userId}`)\r\n            .then((res: any) => {\r\n                console.log('Successfully deleted the reviewRating', res);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            });\r\n    } else {\r\n        axios.put(host + '/reviewRatings/rating',\r\n            {\r\n                mediaId: props.mediaId,\r\n                mediaType: props.mediaType,\r\n                userId: userId,\r\n                rating: rating\r\n            })\r\n            .then((res: any) => {\r\n                console.log('Successfully put the rating: ', res);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n};\r\n\r\nconst StarRater: React.FC<StarRaterProps> = (props: StarRaterProps) => {\r\n    const [ratedStar, setStar] = useState(0);\r\n    const { readonly, readOnlyRating, hideReadOnlyLabel, userRating, userId, userName } = props;\r\n    let twoDecimalRatingString = ''; // TODO set up tooltip functionality\r\n    if (readonly && readOnlyRating) {\r\n        twoDecimalRatingString = readOnlyRating.toFixed(2);\r\n    } else if (userRating) {\r\n        twoDecimalRatingString = userRating.toFixed(2);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!ratedStar) {\r\n            setStar(userRating || 0);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userRating]);\r\n\r\n    function clickStar(starIndex: number) {\r\n        const ratingToSet = ratedStar === starIndex ? starIndex - 1 : starIndex;\r\n        setStar(ratingToSet);\r\n        userId && userName && changeRating(props, userId, userName, ratingToSet);\r\n        // TODO use the api to set the rating (add the media type and media id as props)\r\n    }\r\n\r\n    return (\r\n        <Box display='flex'>\r\n            {[...Array(5)].map((star, index) => {\r\n                return (\r\n                    <VerticallyCenteredDiv key={index}>\r\n                        {readonly ?\r\n                            <>\r\n                                {\r\n                                    getIcon(index, readOnlyRating)\r\n                                }\r\n                            </>\r\n                            :\r\n                            <StyledIconButton size={'small'} onClick={() => clickStar(index + 1)}>\r\n                                {index < ratedStar ?\r\n                                    <StarIcon style={{fill: '#FFCC00'}} />\r\n                                    :\r\n                                    <StarBorderIcon style={{fill: '#FFCC00'}} />\r\n                                }\r\n                            </StyledIconButton>\r\n                        }\r\n                    </VerticallyCenteredDiv>\r\n                );\r\n            })}\r\n            <Box ml={1}>{readonly && !hideReadOnlyLabel && twoDecimalRatingString}</Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default connect(null, { changeRatingAction })(StarRater);\r\n","import styled from 'styled-components';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nconst StyledButton = styled.button<{ isAddedToUser: boolean }>`\r\n    background-color: ${({ theme, isAddedToUser }) => isAddedToUser ? theme.palette.grey[300] : theme.palette.primary.light};\r\n    border: none;\r\n    outline: none;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    margin: 5px;\r\n    color: ${({ isAddedToUser }) => isAddedToUser ? 'black' : 'white'};\r\n`;\r\n\r\ninterface AddToUserButtonProps {\r\n    addLabel: string;\r\n    removeLabel: string;\r\n    isAdded: boolean;\r\n    toBackendOnClick: any;\r\n}\r\n\r\nconst AddToUserButton: React.FC<AddToUserButtonProps> = (props: AddToUserButtonProps) => {\r\n    const { addLabel, removeLabel,isAdded, toBackendOnClick } = props;\r\n    const [isAddedToUser, setIsAddedToUser] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        setIsAddedToUser(isAdded);\r\n    }, [isAdded]);\r\n\r\n    const toggleAddedToUser = () => {\r\n        if (isAddedToUser) {\r\n            setIsAddedToUser(false);\r\n        } else {\r\n            setIsAddedToUser(true);\r\n        }\r\n        toBackendOnClick();\r\n    };\r\n\r\n    return (\r\n        <StyledButton\r\n            isAddedToUser={isAddedToUser}\r\n            onClick={() => toggleAddedToUser()}\r\n        >\r\n            {isAddedToUser ? removeLabel : addLabel}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nexport default AddToUserButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button<{fontSize?: string, color?: string}>`\r\n    margin-right: 10px;\r\n    background: none;\r\n    border: none;\r\n    color: ${(props) => props.color} || ${({ theme }) => theme.palette.grey[500]};\r\n    cursor: pointer;\r\n    font-size: ${(props) => props.fontSize || '16px'};\r\n\r\n    &:hover {\r\n        color: ${({ theme }) => theme.palette.primary.main};\r\n    }\r\n`;\r\n\r\ninterface ButtonProps {\r\n    onClick: () => void;\r\n    label?: string;\r\n    children?: string;\r\n    fontSize?: string;\r\n    color?: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\r\n    const {onClick, label, children, color} = props;\r\n    return (\r\n        <StyledButton onClick={onClick} color={color}>\r\n            {label || children}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button';\r\nimport {connect} from 'react-redux';\r\nimport {addReviewAction, editReviewAction, ReviewObjectType} from '../../actions/reviewRatingActions';\r\nimport axios from 'axios';\r\n\r\nconst TextArea = styled.textarea`\r\n    height: 100px;\r\n    width: 99%;\r\n    resize: vertical;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif\r\n`;\r\n\r\nexport enum CommentEditorAction {\r\n    Add,\r\n    Edit\r\n}\r\n\r\nconst host = window.location.protocol + '//'+ window.location.host;\r\n\r\nconst CommentEditor: React.FC<any> = (props: any) => {\r\n    const [currentText, setCurrentText] = useState(props.editCommentProps?.review.text || '');\r\n\r\n    const submit = () => {\r\n        const { editCommentProps, addCommentProps } = props;\r\n        const now = new Date().toString();\r\n        switch(props.actionType) {\r\n            case CommentEditorAction.Add:\r\n                props.addReviewAction({\r\n                    text: currentText,\r\n                    userId: addCommentProps.userId,\r\n                    userName: addCommentProps.userName,\r\n                    datePosted: now,\r\n                    rating: undefined\r\n                } as ReviewObjectType);\r\n                axios.put(host + '/reviewRatings/review',\r\n                    {\r\n                        mediaId: addCommentProps.mediaId,\r\n                        mediaType: addCommentProps.mediaType,\r\n                        userName: addCommentProps.userName,\r\n                        userId: addCommentProps.userId,\r\n                        rating: addCommentProps.userRating,\r\n                        datePosted: now,\r\n                        text: currentText\r\n                    })\r\n                    .then((res: any) => {\r\n                        console.log(res);\r\n                    })\r\n                    .catch((err: any) => {\r\n                        console.log(err);\r\n                    });\r\n                break;\r\n            case CommentEditorAction.Edit:\r\n                const userId = editCommentProps.review.userId;\r\n                props.editReviewAction({\r\n                    text: currentText,\r\n                    userId: userId,\r\n                    userName: editCommentProps.review.userName,\r\n                    datePosted: now\r\n                } as ReviewObjectType);\r\n                axios.put(host + '/reviewRatings/review',\r\n                    {\r\n                        mediaId: editCommentProps.mediaId,\r\n                        mediaType: editCommentProps.mediaType,\r\n                        userName: editCommentProps.review.userName,\r\n                        userId: editCommentProps.review.userId,\r\n                        rating: editCommentProps.userRating,\r\n                        datePosted: now,\r\n                        text: currentText\r\n                    })\r\n                    .then((res: any) => {\r\n                        console.log(res);\r\n                    })\r\n                    .catch((err: any) => {\r\n                        console.log(err);\r\n                    });\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        props.closeEdit();\r\n    };\r\n\r\n    const changeMessageText = (event: any) => {\r\n        setCurrentText(event.target.value);\r\n    };\r\n\r\n    // TODO use a better editor - markdown text area? - for the text\r\n    return (\r\n        <>\r\n            <TextArea value={currentText} onChange={changeMessageText}/>\r\n            <div style={{textAlign: 'right'}}>\r\n                <Button onClick={submit}>Submit</Button>\r\n                <Button onClick={props.closeEdit}>Cancel</Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, { addReviewAction, editReviewAction })(CommentEditor);\r\n","import React, {useEffect, useMemo, useRef, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Box, Typography} from '@material-ui/core';\r\nimport Button from '../Button';\r\nimport {connect} from 'react-redux';\r\nimport {deleteReviewAction} from '../../actions/reviewRatingActions';\r\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport {hasDivOverflown} from '../../utils/styleHelpers';\r\nimport StarRater from '../StarRater';\r\nimport axios from 'axios';\r\n\r\ninterface CommentBlockProps {\r\n    review: any,\r\n    currentUserId: string,\r\n    isCurrentUserComment?: boolean,\r\n    mediaId?: string,\r\n    mediaType?: string,\r\n    userRating?: number | undefined;\r\n}\r\n\r\nconst Review = styled.div<{ isCurrentUserComment: boolean | undefined }>`\r\n    border-top: ${({ theme }) => `2px solid ${theme.palette.grey[400]}`};\r\n    border: ${({ theme, isCurrentUserComment }) => isCurrentUserComment && `2px solid ${theme.palette.grey[400]}`};\r\n    min-height: 50px;\r\n    padding: 5px;\r\n    padding-bottom: 0px;\r\n`;\r\n\r\nconst TopBar = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst ExpandableDiv = styled.div<{ expanded: boolean }>`\r\n    max-height: ${(props) => props.expanded ? '' : '200px'};\r\n    overflow: ${(props) => props.expanded ? 'visible' : 'hidden'};\r\n    position: relative;\r\n`;\r\n\r\nconst ShowMoreButton = styled.button`\r\n    border: none;\r\n    box-shadow: 0px 0 5px rgba(0, 0, 0, 0.3);\r\n    outline: none;\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    text-align: center;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    padding: 0px;\r\n    width: 100%;\r\n    backdrop-filter: blur(1.5px);\r\n`;\r\n\r\nconst ShowLessButton = styled.button`\r\n    border: none;\r\n    outline: none;\r\n    background-color: rgba(255, 255, 255, 0.90);\r\n    text-align: center;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    padding: 0px;\r\n    width: 100%;\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.palette.grey[200]};\r\n    }\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst VerticallyCenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nfunction deleteReview(props: any) {\r\n    const userId = props.review.userId;\r\n    const reviewUserName = props.review.userName;\r\n    props.deleteReviewAction(userId);\r\n    if (props.userRating) { // if a rating exists, don't delete from db\r\n        axios.put('/reviewRatings/review',\r\n            {\r\n                mediaId: props.mediaId,\r\n                mediaType: props.mediaType,\r\n                userName: reviewUserName,\r\n                userId: userId,\r\n                datePosted: '',\r\n                text: ''\r\n            })\r\n            .then((res: any) => {\r\n                console.log(res);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            });\r\n    } else { // if no rating, then delete whole reviewRating document from db\r\n        axios.delete(`/reviewRatings`\r\n        + `/${props.mediaType}/${props.mediaId}/${props.review.userId}`)\r\n            .then((res: any) => {\r\n                console.log('successfully deleted the reviewRating', res);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n}\r\n\r\nconst CommentBlock: React.FC<CommentBlockProps> = (props: CommentBlockProps) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [hasOverflow, setHasOverflow] = useState(false);\r\n    const expandableRef = useRef(null);\r\n    const { review, currentUserId, isCurrentUserComment } = props;\r\n    const date = new Date(review.datePosted).toDateString();\r\n\r\n    const isAuthor = useMemo(() => {\r\n        return currentUserId === review.userId;\r\n    }, [review, currentUserId]);\r\n\r\n    useEffect(() => {\r\n        const isOverflowing = hasDivOverflown(expandableRef);\r\n        if (isOverflowing) {\r\n            setHasOverflow(true);\r\n        } else {\r\n            setHasOverflow(false);\r\n        }\r\n    }, [review]);\r\n\r\n    return (\r\n        <>\r\n            <Review isCurrentUserComment={isCurrentUserComment}>\r\n            {isEdit ?\r\n                <>\r\n                    <Typography variant={'h5'}><strong>{review.userName}</strong></Typography>\r\n                    <CommentEditor\r\n                        actionType={CommentEditorAction.Edit}\r\n                        closeEdit={() => setIsEdit(false)}\r\n                        editCommentProps={props}\r\n                    />\r\n                </>\r\n                :\r\n                <ExpandableDiv expanded={expanded} ref={expandableRef}>\r\n                    <TopBar>\r\n                        <Typography variant={'h5'}>\r\n                            <strong>\r\n                                {review.userName}\r\n                            </strong>\r\n                            {` on ${date}`}\r\n                        </Typography>\r\n                        {isAuthor &&\r\n                            <div>\r\n                                <Button onClick={() => setIsEdit(true)}>Edit</Button>\r\n                                <Button onClick={() => deleteReview(props)}>Delete</Button>\r\n                            </div>\r\n                        }\r\n                    </TopBar>\r\n                    <VerticallyCenteredDiv>\r\n                        <Box mr={1}>User rated: </Box>\r\n                        {review.rating ?\r\n                            <StarRater readonly readOnlyRating={review.rating} hideReadOnlyLabel />\r\n                            : 'no rating'\r\n                        }\r\n                    </VerticallyCenteredDiv>\r\n                    <ReactMarkdown source={review.text} />\r\n                    {!expanded && hasOverflow &&\r\n                        <ShowMoreButton onClick={() => setExpanded(true)}>\r\n                            <Typography variant={'body1'}>Show more...</Typography>\r\n                        </ShowMoreButton>\r\n                    }\r\n                    {expanded &&\r\n                        <ShowLessButton onClick={() => setExpanded(false)}>\r\n                            <Typography variant={'body1'}>Show less</Typography>\r\n                        </ShowLessButton>\r\n                    }\r\n                </ExpandableDiv>}\r\n            </Review>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, { deleteReviewAction })(CommentBlock);\r\n","export function hasDivOverflown(ref: { current: any; }): boolean {\r\n    const element = ref.current;\r\n    return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport CommentBlock from '../CommentBlock';\r\nimport {Typography} from '@material-ui/core';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\r\nimport Button from '../Button';\r\nimport { MediaType } from '../../constants/dataTypes';\r\nimport {connect} from 'react-redux';\r\n\r\ninterface ReviewListProps {\r\n    mediaId: string,\r\n    mediaType: MediaType,\r\n    otherUserReviews: any[],\r\n    currentUserReview?: any,\r\n    userId: string,\r\n    userName: string,\r\n    userRating?: number | undefined\r\n}\r\n\r\nconst ReviewList: React.FC<ReviewListProps> = (props: ReviewListProps) => {\r\n    const [addCommentEditorOpen, setAddCommentEditor] = useState(false);\r\n    const { otherUserReviews, currentUserReview, mediaId, mediaType, userId, userName, userRating } = props;\r\n\r\n    let hasAddedReview = !!currentUserReview;\r\n\r\n    const initialStateReviews = otherUserReviews?.slice(0,9);\r\n    const [stateReviews, setStateReviews] = useState(initialStateReviews);\r\n\r\n    useEffect(() => {\r\n        const rerenderReviews = otherUserReviews?.slice(0,9);\r\n        setStateReviews(rerenderReviews);\r\n    }, [otherUserReviews]);\r\n\r\n    const fetchMoreData = () => {\r\n        setTimeout(() => {\r\n            const currentReviewLength = stateReviews.length;\r\n            const theFetchNum = currentReviewLength + 5;\r\n            const fetchedReviews = otherUserReviews.slice(0, theFetchNum);\r\n            setStateReviews(fetchedReviews);\r\n        }, 1000);\r\n    };\r\n\r\n    const totalReviews = hasAddedReview ? otherUserReviews.length + 1 : otherUserReviews.length;\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={'h3'} gutterBottom>\r\n                {totalReviews || 0} Total Reviews\r\n            </Typography>\r\n            {addCommentEditorOpen ?\r\n                <>\r\n                    <Typography variant={'h5'}><strong>{userName}</strong></Typography>\r\n                    <CommentEditor\r\n                        actionType={CommentEditorAction.Add}\r\n                        closeEdit={() => setAddCommentEditor(false)}\r\n                        addCommentProps={{\r\n                            mediaType: mediaType,\r\n                            mediaId: mediaId,\r\n                            userId: userId,\r\n                            userName: userName,\r\n                            userRating: userRating\r\n                        }}\r\n                    />\r\n                </> :\r\n                <div style={{textAlign: 'right'}}>\r\n                    {!hasAddedReview &&\r\n                        <Button onClick={() => setAddCommentEditor(true)}>\r\n                            Add Review\r\n                        </Button>\r\n                    }\r\n                </div>\r\n            }\r\n            {currentUserReview && currentUserReview.text &&\r\n                <>\r\n                    <CommentBlock\r\n                        review={currentUserReview}\r\n                        currentUserId={userId}\r\n                        isCurrentUserComment={true}\r\n                        mediaId={mediaId}\r\n                        mediaType={mediaType}\r\n                        userRating={userRating}\r\n                    />\r\n                </>\r\n            }\r\n            <br/>\r\n            {otherUserReviews ? <InfiniteScroll\r\n                dataLength={stateReviews.length}\r\n                next={fetchMoreData}\r\n                hasMore={stateReviews.length < otherUserReviews.length}\r\n                loader={<h4 style={{textAlign: 'center'}}>Loading more reviews...</h4>}\r\n                endMessage={\r\n                    <p style={{textAlign: 'center'}}>\r\n                        <b>No more reviews</b>\r\n                    </p>\r\n                }>\r\n                {stateReviews.map((r, index) =>\r\n                    <CommentBlock\r\n                        key={index}\r\n                        review={r}\r\n                        currentUserId={userId}\r\n                    />)\r\n                }\r\n            </InfiniteScroll> : null}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n    const reviews = state.reviewRatings.filter((r: any) => r.text);\r\n    let otherUserReviews: any[] = [];\r\n    let currentUserReview: any = undefined;\r\n    reviews.forEach((r: any) => {\r\n        r.userId === ownProps.userId ? currentUserReview = r : otherUserReviews.push(r);\r\n    });\r\n    return {\r\n        otherUserReviews: otherUserReviews,\r\n        currentUserReview: currentUserReview\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ReviewList);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Menu, MenuItem} from '@material-ui/core';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport axios from 'axios';\r\n\r\ninterface FavoritesDropDownProps {\r\n    allOptions: Array<string>;\r\n    favoriteOptions: Array<string>;\r\n    favKey: string;\r\n    userId: string;\r\n}\r\n\r\nconst FavoritesDropDown = (props: FavoritesDropDownProps) => {\r\n    const { allOptions, favoriteOptions, favKey, userId } = props;\r\n    const [favs, setFavs] = useState<Array<string>>([]);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    useEffect(() => {\r\n        setFavs(favoriteOptions);\r\n    }, [favoriteOptions]);\r\n\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (subject: string, isFav: boolean) => {\r\n        setAnchorEl(null);\r\n        if (isFav) {\r\n            const filteredFavs = favs.filter((f) => f !== subject);\r\n            setFavs(filteredFavs);\r\n        } else {\r\n            setFavs([...favs, subject]);\r\n        }\r\n        const act = isFav ? 'REMOVE' : 'ADD';\r\n        const encodedSubject = encodeURIComponent(subject);\r\n        axios.put(`/users/${favKey}/${encodedSubject}/${userId}`, {\r\n            action: act\r\n        }).then((response: any) => {\r\n            console.log(response);\r\n        }).catch((error: any) => {\r\n            console.log('Error adding or removing favorite from dropdown', error);\r\n        });\r\n    };\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                onClick={handleClick}\r\n                endIcon={<DetailsIcon/>}\r\n                style={{ fontSize: '12px' }}\r\n            >\r\n                Add to favorites\r\n            </Button>\r\n            <Menu\r\n                id='simple-menu'\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n            >\r\n                {allOptions.map((o, index) => {\r\n                    const isFav = favs.includes(o);\r\n                    return (\r\n                        <MenuItem key={index} onClick={() => handleClose(o, isFav)} style={{whiteSpace: 'normal'}}>\r\n                            {o}\r\n                            {isFav && <CheckIcon fontSize={'small'}/>}\r\n                        </MenuItem>);\r\n                })}\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FavoritesDropDown;\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport Container from '../Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReviewList from '../../components/ReviewList';\r\nimport {MediaType, SingleQueryType} from '../../constants/dataTypes';\r\nimport styled from 'styled-components';\r\nimport {Box, FormControl, Grid, InputLabel, MenuItem, Select} from '@material-ui/core';\r\nimport TagsSection from '../../components/TagsSection';\r\nimport StarRater from '../../components/StarRater';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {loadAllReviewsAction} from '../../actions/reviewRatingActions';\r\nimport AddToUserButton from '../../components/AddToUserButton';\r\nimport FavoritesDropDown from '../../components/FavoritesDropDown';\r\nimport Interweave from 'interweave';\r\nimport {useHistory} from 'react-router';\r\nimport LoadingSpinner from '../../components/LoadingSign';\r\n\r\nconst StyledImage = styled.img`\r\n    width: 100%;\r\n    max-width: 300px;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst ImagePlaceholder = styled.div`\r\n    width: 100%;\r\n    max-width: 300px;\r\n    min-height: 300px;\r\n    margin-bottom: 15px;\r\n    background-color: ${({ theme }) => theme.palette.grey[300]};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledGridItem = styled(Grid)`\r\n    text-align: center;\r\n`;\r\n\r\nconst VerticallyCenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst StyledFormControl = styled(FormControl)`\r\n    width: 100%;\r\n    margin: 5px !important;\r\n`;\r\n\r\nconst MediaPage: React.FC<{}> = (props: any) => {\r\n    const [mediaType, id] = props.location.pathname.split('/').filter((o: string) => o);\r\n    const [isForLater, setForLater] = useState(false);\r\n    const [isFavorite, setFavorite] = useState(false);\r\n    const [watchedOrRead, setWatchedOrRead] = useState(false);\r\n    const [mediaObject, setMediaObject] = useState({\r\n        title: 'No title',\r\n        id: id,\r\n        mediaType: MediaType.start,\r\n        image: '',\r\n        people: [''],\r\n        genres: [''],\r\n        blurb: 'No description'\r\n    });\r\n    const [reviewsObject, setReviewsObject] = useState({\r\n        avgRating: 0,\r\n        userRating: 0,\r\n        userHasReviewText: false\r\n    });\r\n    const [userLists, setUserLists] = useState({\r\n        booksRead: [],\r\n        moviesWatched: [],\r\n        watchLater: [],\r\n        readLater: [],\r\n        favoriteMovies: [],\r\n        favoriteBooks: [],\r\n        favoriteAuthors: [],\r\n        favoriteDirectors: [],\r\n        favoriteGenres: []\r\n    });\r\n\r\n    const [storyTags, setStoryTags] = useState([]);\r\n    const [unaddedStoryTags, setUnaddedStoryTags] = useState<Array<{ tagId: string, tagName: string }>>([]);\r\n    const [addedStoryTags, setAddedStoryTags] = useState<Array<{ tagId: string, tagName: string }>>([]);\r\n\r\n    const sessionDataString = sessionStorage.getItem('NS-session-data');\r\n    const sessionDataObj = sessionDataString && JSON.parse(sessionDataString);\r\n    const userName = sessionDataObj.username;\r\n    const userId = sessionDataObj.userId;\r\n    const history = useHistory();\r\n    let ref = useRef({numberSubscriptions: 0});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const {\r\n        title,\r\n        image,\r\n        people,\r\n        blurb,\r\n        genres\r\n    } = mediaObject;\r\n\r\n    const {\r\n        avgRating,\r\n        userRating,\r\n        userHasReviewText\r\n    } = reviewsObject;\r\n\r\n    useEffect(() => {\r\n        ref.current.numberSubscriptions++;\r\n        setIsLoading(true);\r\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\r\n        axios.get(`/${mediaRouteType}/${id}`)\r\n            .then((mediaRes: any) => {\r\n                const mediaData = mediaRes.data;\r\n                if (!mediaData.title) {\r\n                    ref.current.numberSubscriptions = 0;\r\n                    history.push('/notFound');\r\n                }\r\n                if (ref.current.numberSubscriptions) {\r\n                    setMediaObject({\r\n                        title: mediaData.title || 'No title',\r\n                        id: id,\r\n                        mediaType: mediaType,\r\n                        image: mediaData.image,\r\n                        people: mediaData.people,\r\n                        genres: mediaData.genres,\r\n                        blurb:  mediaData.blurb || 'No description'\r\n                    });\r\n                    ref.current.numberSubscriptions--;\r\n                    setIsLoading(false);\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                if (error.response.data.message === 'Could not fetch movie') {\r\n                    ref.current.numberSubscriptions = 0;\r\n                    history.push('/notFound');\r\n                }\r\n            });\r\n    }, [props, id, mediaType, userId]);\r\n\r\n    useEffect(() => {\r\n        ref.current.numberSubscriptions++;\r\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\r\n        axios.get(`/${mediaRouteType}/tags/${id}`)\r\n            .then((mediaRes: any) => {\r\n                const mediaData = mediaRes.data;\r\n                if (ref.current.numberSubscriptions) {\r\n                    setStoryTags(mediaData.nextStoryTags);\r\n                    ref.current.numberSubscriptions--;\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                console.log('Error getting media', error);\r\n            });\r\n    }, [props, id, mediaType, userId]);\r\n\r\n    useEffect(() => {\r\n        ref.current.numberSubscriptions++;\r\n        axios.get(`/reviewRatings/${mediaType}/${id}`)\r\n            .then((reviewRatingRes: any) => {\r\n                const reviews = reviewRatingRes.data.reviewArray;\r\n                props.loadAllReviewsAction(reviews);\r\n                const userRatingReviewArr = reviews.filter((r: any) => r.userId === userId);\r\n                const userRating = userRatingReviewArr.length > 0 ? userRatingReviewArr[0].rating : undefined;\r\n                const userHasReviewText = userRatingReviewArr.length > 0 && !!userRatingReviewArr[0].text;\r\n                if (ref.current.numberSubscriptions) {\r\n                    setReviewsObject({\r\n                        avgRating: reviewRatingRes.data.average,\r\n                        userRating: userRating,\r\n                        userHasReviewText: userHasReviewText\r\n                    });\r\n                    ref.current.numberSubscriptions--;\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                console.log('Error getting reviews', error);\r\n            });\r\n    }, [props, id, mediaType, userId]);\r\n\r\n    useEffect(() => {\r\n        ref.current.numberSubscriptions++;\r\n        axios.get(`/users/userLists/${userId}`)\r\n            .then((response: any) => {\r\n                const userLists = response.data;\r\n                if (ref.current.numberSubscriptions) {\r\n                    if (mediaType === MediaType.movie) {\r\n                        if (userLists.watchLater.includes(id)) {\r\n                            setForLater(true);\r\n                        }\r\n                        if (userLists.favoriteMovies.includes(id)) {\r\n                            setFavorite(true);\r\n                        }\r\n                        if (userLists.moviesWatched.includes(id)) {\r\n                            setWatchedOrRead(true);\r\n                        }\r\n                    } else {\r\n                        if (userLists.readLater.includes(id)) {\r\n                            setForLater(true);\r\n                        }\r\n                        if (userLists.favoriteBooks.includes(id)) {\r\n                            setFavorite(true);\r\n                        }\r\n                        if (userLists.booksRead.includes(id)) {\r\n                            setWatchedOrRead(true);\r\n                        }\r\n                    }\r\n                    setUserLists({\r\n                        booksRead: userLists.booksRead,\r\n                        moviesWatched: userLists.moviesWatched,\r\n                        watchLater: userLists.watchLater,\r\n                        readLater: userLists.readLater,\r\n                        favoriteMovies: userLists.favoriteMovies,\r\n                        favoriteBooks: userLists.favoriteBooks,\r\n                        favoriteAuthors: userLists.favoriteAuthors,\r\n                        favoriteDirectors: userLists.favoriteDirectors,\r\n                        favoriteGenres: userLists.favoriteGenres\r\n                    });\r\n                    ref.current.numberSubscriptions--;\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                console.log('Error getting media', error);\r\n            });\r\n    }, [userId, mediaType, id]);\r\n\r\n    useEffect(() => {\r\n        ref.current.numberSubscriptions++;\r\n        axios.get('/nextStoryTags')\r\n            .then((res: any) => {\r\n                const tagData = res.data;\r\n                const storyTagNames = storyTags.map((t: any) => t.tagName);\r\n                const unAdded: Array<{ tagId: string, tagName: string }> = [];\r\n                const added: Array<{ tagId: string, tagName: string }> = [];\r\n                tagData.forEach((t: any) => {\r\n                    if (storyTagNames.includes(t.tagName)) {\r\n                        added.push(t);\r\n                    } else unAdded.push(t);\r\n                });\r\n                if (ref.current.numberSubscriptions) {\r\n                    setUnaddedStoryTags(unAdded);\r\n                    setAddedStoryTags(added);\r\n                    ref.current.numberSubscriptions--;\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                console.log('Error getting all story tags', error);\r\n            });\r\n    }, [storyTags]);\r\n\r\n    const updateMediaInDB = (tagsArray: any[]) => {\r\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\r\n        axios.put(`/${mediaRouteType}/updateNextStoryTags/${id}`,\r\n            { tagsArray: tagsArray })\r\n            .then((res: any) => {\r\n                console.log('updated tags for media', res.data);\r\n            }).catch((err: any) => {\r\n                console.log('error setting tags for media', err);\r\n            });\r\n    };\r\n\r\n    const addOrRemoveCall = (key: string, mediaId: string, action:string) => {\r\n        axios.put(`/users/${key}/${mediaId}/${userId}`, {\r\n            action:action\r\n        }).then((response: any) => {\r\n            console.log(response);\r\n        }).catch((error: any) => {\r\n                console.log('Error getting reviews', error);\r\n        });\r\n    };\r\n\r\n    const addOrRemoveWatchOrRead = (mediaId: string) => {\r\n        const key = mediaType === MediaType.movie ? 'moviesWatched' : 'booksRead';\r\n        if (watchedOrRead) {\r\n            setWatchedOrRead(false);\r\n            addOrRemoveCall(key, mediaId, 'REMOVE');\r\n        } else {\r\n            setWatchedOrRead(true);\r\n            addOrRemoveCall(key, mediaId, 'ADD');\r\n        }\r\n    };\r\n\r\n    const addOrRemoveWatchReadLater = (mediaId: string) => {\r\n        const key = mediaType === MediaType.movie ? 'watchLater' : 'readLater';\r\n        if (isForLater) {\r\n            setForLater(false);\r\n            addOrRemoveCall(key, mediaId, 'REMOVE');\r\n        } else {\r\n            setForLater(true);\r\n            addOrRemoveCall(key, mediaId, 'ADD');\r\n        }\r\n    };\r\n\r\n    const addOrRemoveFavorites = (mediaId: string) => {\r\n        const key = mediaType === MediaType.movie ? 'favoriteMovies' : 'favoriteBooks';\r\n        if (isFavorite) {\r\n            setFavorite(false);\r\n            addOrRemoveCall(key, mediaId, 'REMOVE');\r\n        } else {\r\n            setFavorite(true);\r\n            addOrRemoveCall(key, mediaId, 'ADD');\r\n        }\r\n    };\r\n\r\n    const handleAddTag = (event: any) => {\r\n        const newAddedTags = [...addedStoryTags, event.target.value];\r\n        const filteredDeleteTags = unaddedStoryTags.filter((t: any) => t.tagId !== event.target.value.tagId);\r\n        setAddedStoryTags(newAddedTags);\r\n        setUnaddedStoryTags(filteredDeleteTags);\r\n        updateMediaInDB(newAddedTags);\r\n    };\r\n\r\n    const handleDeleteTag = (event: any) => {\r\n        const filteredStoryTags = addedStoryTags.filter((t: any) => t.tagId !== event.target.value.tagId);\r\n        const newDeleteTags = [...unaddedStoryTags, event.target.value];\r\n        setAddedStoryTags(filteredStoryTags);\r\n        setUnaddedStoryTags(newDeleteTags);\r\n        updateMediaInDB(filteredStoryTags);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <LoadingSpinner/>}\r\n            <Container maxWidth='lg'>\r\n                <Grid container direction={'row'}  spacing={5}>\r\n                    <StyledGridItem item sm={3}>\r\n                        {image ? <StyledImage src={image}/> : <ImagePlaceholder>No Image</ImagePlaceholder>}\r\n                        <div>\r\n                            Your rating:\r\n                            <CenteredDiv>\r\n                                <StarRater\r\n                                    userRating={userRating}\r\n                                    readonly={false}\r\n                                    userId={userId}\r\n                                    userName={userName}\r\n                                    userHasReviewText={userHasReviewText}\r\n                                    mediaId={id}\r\n                                    mediaType={mediaType}\r\n                                />\r\n                            </CenteredDiv>\r\n                            <div>\r\n                                <AddToUserButton\r\n                                    toBackendOnClick={() => addOrRemoveWatchOrRead(id)}\r\n                                    isAdded={watchedOrRead}\r\n                                    addLabel={`Add to ${mediaType === MediaType.movie ? 'watched' : 'read'}`}\r\n                                    removeLabel={`Remove from ${mediaType === MediaType.movie ? 'watched' : 'read'}`}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <AddToUserButton\r\n                                    toBackendOnClick={() => addOrRemoveWatchReadLater(id)}\r\n                                    isAdded={isForLater}\r\n                                    addLabel={`Add to ${mediaType === MediaType.movie ? 'watch' : 'read'} later`}\r\n                                    removeLabel={`Remove from ${mediaType === MediaType.movie ? 'watch' : 'read'} later`}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <AddToUserButton\r\n                                    toBackendOnClick={() => addOrRemoveFavorites(id)}\r\n                                    isAdded={isFavorite}\r\n                                    addLabel={'Add favorite'}\r\n                                    removeLabel={'Remove favorite'}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </StyledGridItem>\r\n                    <Grid item sm={6}>\r\n                        <Typography variant='h1'>{title} {mediaType === MediaType.movie ? '(Movie)' : '(Book)'}</Typography>\r\n                        <Box fontStyle='italic'>\r\n                            <Typography variant='subtitle1' gutterBottom>\r\n                                {people?.join(', ')}\r\n                                {people && people[0] !== '' && <FavoritesDropDown\r\n                                    allOptions={people}\r\n                                    favoriteOptions={mediaType === MediaType.movie ? userLists.favoriteDirectors : userLists.favoriteAuthors}\r\n                                    userId={userId}\r\n                                    favKey={mediaType === MediaType.movie ? 'favoriteDirectors' : 'favoriteAuthors'}\r\n                                />}\r\n                            </Typography>\r\n                        </Box>\r\n                        <VerticallyCenteredDiv>\r\n                            <Typography variant='subtitle2' >Avg members rating: </Typography>\r\n                            <StarRater readOnlyRating={avgRating} readonly />\r\n                        </VerticallyCenteredDiv>\r\n                        <Interweave content={blurb} />\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        Genres:\r\n                        <TagsSection tags={genres} singleQueryType={SingleQueryType.genre}/>\r\n                        <div>\r\n                            {genres.length > 0 && <FavoritesDropDown\r\n                                allOptions={genres}\r\n                                favoriteOptions={userLists.favoriteGenres}\r\n                                userId={userId}\r\n                                favKey={'favoriteGenres'}\r\n                            />}\r\n                        </div>\r\n                        Tags:\r\n                        <TagsSection tagObjects={addedStoryTags} singleQueryType={SingleQueryType.tag}/>\r\n                        {unaddedStoryTags.length > 0 && <StyledFormControl variant='outlined'>\r\n                            <InputLabel id='demo-simple-select-outlined-label'>Add a tag</InputLabel>\r\n                            <Select\r\n                                labelId='add-tag-label'\r\n                                id='add-tag'\r\n                                value={''}\r\n                                onChange={handleAddTag}\r\n                                label='Add a tag'\r\n                            >\r\n                                {unaddedStoryTags.map((t: any, index) => {\r\n                                    return <MenuItem key={`${index}_add`} value={t}>{t.tagName}</MenuItem>;\r\n                                })}\r\n                            </Select>\r\n                        </StyledFormControl>}\r\n                        {addedStoryTags.length > 0 && <StyledFormControl variant='outlined'>\r\n                            <InputLabel id='demo-simple-select-outlined-label'>Delete a tag</InputLabel>\r\n                            <Select\r\n                                labelId='delete-tag-label'\r\n                                id='delete-tag'\r\n                                value={''}\r\n                                onChange={handleDeleteTag}\r\n                                label='Delete a tag'\r\n                            >\r\n                                {addedStoryTags.map((t: any, index) => {\r\n                                    return <MenuItem key={`${index}_delete`} value={t}>{t.tagName}</MenuItem>;\r\n                                })}\r\n                            </Select>\r\n                        </StyledFormControl>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <Container maxWidth='md'>\r\n                <ReviewList\r\n                    mediaId={id}\r\n                    mediaType={mediaType}\r\n                    userName={userName}\r\n                    userId={userId}\r\n                    userRating={userRating}\r\n                />\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, { loadAllReviewsAction })(MediaPage);\r\n"],"sourceRoot":""}