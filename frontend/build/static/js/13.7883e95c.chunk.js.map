{"version":3,"sources":["containers/Container/index.tsx","components/AddToUserButton/index.tsx","containers/NextStoryTagsPage/index.tsx"],"names":["StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","StyledButton","button","theme","isAddedToUser","palette","grey","primary","light","AddToUserButton","addLabel","removeLabel","isAdded","toBackendOnClick","useState","setIsAddedToUser","useEffect","onClick","TagDiv","div","last","NextStoryTagsPage","allTags","setAllTags","userFavTags","setUserFavTags","axios","get","then","res","sortedTags","data","sort","a","b","tagName","catch","error","console","log","sessionDataString","sessionStorage","getItem","sessionDataObj","JSON","parse","userId","userFavTagIds","map","t","tagId","variant","gutterBottom","color","index","isAFavTag","filter","tag","length","shouldRemoveOnClick","key","fontWeight","fontSize","mb","display","justifyContent","shouldRemove","put","addOrRemoveTagFromFavorites","tagDescription"],"mappings":"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","file":"static/js/13.7883e95c.chunk.js","sourcesContent":["import React, {ReactNode} from 'react';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled(Container)`\n    margin-top: 85px;\n`;\n\ninterface MarginContainerProps {\n    maxWidth: 'lg'\n        | 'md'\n        | 'sm'\n        | 'xl'\n        | 'xs'\n        | false;\n    children: ReactNode;\n}\n\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\n    return (\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\n    );\n};\n\nexport default MarginContainer;\n","import styled from 'styled-components';\nimport React, {useEffect, useState} from 'react';\n\nconst StyledButton = styled.button<{ isAddedToUser: boolean }>`\n    background-color: ${({ theme, isAddedToUser }) => isAddedToUser ? theme.palette.grey[300] : theme.palette.primary.light};\n    border: none;\n    outline: none;\n    font-size: 16px;\n    border-radius: 5px;\n    padding: 5px;\n    cursor: pointer;\n    margin: 5px;\n    color: ${({ isAddedToUser }) => isAddedToUser ? 'black' : 'white'};\n`;\n\ninterface AddToUserButtonProps {\n    addLabel: string;\n    removeLabel: string;\n    isAdded: boolean;\n    toBackendOnClick: any;\n}\n\nconst AddToUserButton: React.FC<AddToUserButtonProps> = (props: AddToUserButtonProps) => {\n    const { addLabel, removeLabel,isAdded, toBackendOnClick } = props;\n    const [isAddedToUser, setIsAddedToUser] = useState<boolean>(false);\n\n    useEffect(() => {\n        setIsAddedToUser(isAdded);\n    }, [isAdded]);\n\n    const toggleAddedToUser = () => {\n        if (isAddedToUser) {\n            setIsAddedToUser(false);\n        } else {\n            setIsAddedToUser(true);\n        }\n        toBackendOnClick();\n    };\n\n    return (\n        <StyledButton\n            isAddedToUser={isAddedToUser}\n            onClick={() => toggleAddedToUser()}\n        >\n            {isAddedToUser ? removeLabel : addLabel}\n        </StyledButton>\n    );\n};\n\nexport default AddToUserButton;\n","import React, {useEffect, useState} from 'react';\nimport Container from '../Container';\nimport axios from 'axios';\nimport {Box, Typography} from '@material-ui/core';\nimport styled from 'styled-components';\nimport AddToUserButton from '../../components/AddToUserButton';\n\nconst TagDiv = styled.div<{ last: boolean }>`\n    border-top: 2px solid ${({ theme }) => theme.palette.grey[400]};\n    border-bottom: ${({ theme, last }) => last && `2px solid ${theme.palette.grey[400]}`};\n    min-height: 50px;\n    padding: 10px;\n`;\n\nconst NextStoryTagsPage: React.FC = () => {\n    const [allTags, setAllTags] = useState<Array<{ tagId: string, tagName: string, tagDescription: string }>>([]);\n    const [userFavTags, setUserFavTags] = useState<Array<string>>([]);\n\n    useEffect(() => {\n        axios.get('/nextStoryTags')\n            .then((res: any) => {\n                const tagData = res.data;\n                const sortedTags = tagData.sort(function(a: any, b: any) {\n                    if(a.tagName < b.tagName) { return -1; }\n                    if(a.tagName > b.tagName) { return 1; }\n                    return 0;\n                });\n                setAllTags(sortedTags);\n            })\n            .catch((error: any) => {\n                console.log('Error getting all tags', error);\n            });\n    }, []);\n\n    useEffect(() => {\n        const sessionDataString = sessionStorage.getItem('NS-session-data');\n        const sessionDataObj = sessionDataString && JSON.parse(sessionDataString);\n        const userId = sessionDataObj?.userId;\n        axios.get(`/users/favoriteNSTags/${userId}`)\n            .then((res: any) => {\n                const userFavTags = res.data;\n                const userFavTagIds = userFavTags.map((t: any) => t.tagId);\n                setUserFavTags(userFavTagIds);\n            })\n            .catch((error: any) => {\n                console.log('Error getting all tags', error);\n            });\n    }, []);\n\n    const addOrRemoveTagFromFavorites = (tag: any, shouldRemove: boolean) => {\n        const sessionDataString = sessionStorage.getItem('NS-session-data');\n        const sessionDataObj = sessionDataString && JSON.parse(sessionDataString);\n        const userId = sessionDataObj?.userId;\n        axios.put(`/users/favoriteNSTags/putToFavorites/${userId}/${shouldRemove}`, {tag: tag})\n            .then((res: any) => {\n                console.log(res.data);\n            })\n            .catch((error: any) => {\n                console.log('Error getting all tags', error);\n            });\n    };\n\n    return (\n        <Container maxWidth='md'>\n            <Typography variant={'h1'} gutterBottom>All our story tags!</Typography>\n            <Typography variant={'h3'} color={'primary'} gutterBottom>\n                Use these tags to filter stories, or add them to stories yourself\n            </Typography>\n            {allTags.map((t: any, index) => {\n                const isAFavTag = userFavTags.filter((tag: any) => {\n                    return t.tagId === tag;\n                }).length > 0;\n                const shouldRemoveOnClick = isAFavTag;\n                return (\n                    <TagDiv key={index} last={index + 1 === allTags.length}>\n                        <Box\n                            fontWeight={'fontWeightBold'}\n                            fontSize={24}\n                            mb={1}\n                            display={'flex'}\n                            justifyContent={'space-between'}\n                        >\n                            {t.tagName}\n                            <AddToUserButton\n                                addLabel={'Add to favorites'}\n                                removeLabel={'Remove from favorites'}\n                                isAdded={isAFavTag}\n                                toBackendOnClick={() => addOrRemoveTagFromFavorites(t, shouldRemoveOnClick)}\n                            />\n                        </Box>\n                        <Typography>{t.tagDescription}</Typography>\n                    </TagDiv>\n                );\n            })}\n        </Container>\n    );\n};\n\nexport default NextStoryTagsPage;\n"],"sourceRoot":""}