{"version":3,"sources":["containers/Container/index.tsx","components/SignUp/index.tsx","containers/SignUp/index.tsx"],"names":["StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","useState","signUpError","setSignUpError","errorMsg","setErrorMsg","userName","setUserName","email","setEmail","password","setPassword","confirmPass","setConfirmPass","isLoggedIn","setIsLoggedIn","isGoogleLogin","setIsGoogleLogin","history","useHistory","useEffect","sessionDataString","sessionStorage","getItem","sessionDataObj","JSON","parse","loginExpiry","expiry","loggedIn","googleLogin","postNewUser","newUserObject","isGoogle","axios","post","then","profile","userId","data","username","name","time","setSeconds","getSeconds","authObject","setItem","stringify","push","catch","error","response","message","console","log","component","CssBaseline","className","Avatar","style","clientId","buttonText","onLogoutSuccess","removeItem","Button","onClick","noValidate","onSubmit","event","preventDefault","textPass","Grid","container","item","xs","TextField","autoComplete","required","fullWidth","id","label","onChange","target","value","autoFocus","type","onSuccess","googleName","profileObj","googleEmail","onFailure","cookiePolicy","justify","Box","mt","SignUpForm"],"mappings":"4PAIA,IAAMA,EAAkBC,YAAOC,IAAPD,CAAH,KAoBNE,IANyC,SAACC,GACrD,OACI,kBAACJ,EAAD,CAAiBK,SAAUD,EAAMC,UAAWD,EAAME,Y,wPCJ1D,SAASC,IACL,OACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACnD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,aAEQ,KACP,IAAIC,MAAOC,cACX,KAKb,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE7BY,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIrB,SAASa,IACpB,IAAMC,EAAUnB,IADa,EAESoB,oBAAS,GAFlB,mBAEtBC,EAFsB,KAETC,EAFS,OAGGF,mBAAS,IAHZ,mBAGtBG,EAHsB,KAGZC,EAHY,OAKGJ,mBAAS,IALZ,mBAKtBK,EALsB,KAKZC,EALY,OAMHN,mBAAS,IANN,mBAMtBO,EANsB,KAMfC,EANe,OAOGR,mBAAS,IAPZ,mBAOtBS,EAPsB,KAOZC,EAPY,OAQSV,mBAAS,IARlB,mBAQtBW,EARsB,KAQTC,EARS,OAUOZ,oBAAS,GAVhB,mBAUtBa,EAVsB,KAUVC,EAVU,OAWad,oBAAS,GAXtB,mBAWtBe,EAXsB,KAWPC,EAXO,KAavBC,EAAUC,cAEhBC,qBAAU,WACN,IAAMC,EAAoBC,eAAeC,QAAQ,mBAC3CC,EAAiBH,GAAqBI,KAAKC,MAAML,GACjDM,EAAW,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAgBI,OAC9BC,EAAWF,GAAe,IAAIhD,KAAKgD,GAAe,IAAIhD,KACtDmD,EAAW,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAgBR,cACpCD,EAAcc,GACdZ,EAAiBa,KAClB,IAEH,IAAMC,EAAc,SAACC,EAAoBC,GACrCC,IAAMC,KAAN,qCAAiDH,GAC5CI,MAAK,SAACC,GACH,IAAMC,EAASD,EAAQE,KAAKD,OACtBE,EAAWH,EAAQE,KAAKE,KACxBC,EAAO,IAAI/D,KACjB+D,EAAKC,WAAWD,EAAKE,aAAe,MACpC,IAAMC,EAAa,CACfjB,OAAQc,EACRF,SAAUA,EACVF,OAAQA,EACRtB,cAAeiB,GAEnBX,eAAewB,QAAQ,kBAAmBrB,KAAKsB,UAAUF,IACzD3B,EAAQ8B,KAAR,QAEHC,OAAM,SAACC,GACJ/C,GAAe,GACf,IAAMC,EAAW8C,EAAMC,SAASZ,KAAKa,QACrC/C,EAAYD,GACZiD,QAAQC,IAAI,mBAAoBJ,OA4E5C,OACI,kBAACnF,EAAA,EAAD,CAAWwF,UAAU,OAAOrF,SAAS,MACjC,kBAACsF,EAAA,EAAD,MACA,yBAAKC,UAAWzD,EAAQhB,OACpB,kBAAC0E,EAAA,EAAD,CAAQD,UAAWzD,EAAQV,QACvB,kBAAC,IAAD,OAEJ,kBAACjB,EAAA,EAAD,CAAYkF,UAAU,KAAKjF,QAAQ,MAAnC,WAGEwC,EA+FE,oCACI,yBAAK6C,MAAO,CAAE,MAAS,MAAO,OAAU,SAAxC,6BAGA,kBAAClF,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,SAAvB,cAGA,yBAAKqF,MAAO,CAAE,OAAU,SAAxB,MAGC3C,EAAgB,kBAAC,eAAD,CACb4C,SAAS,2EACTC,WAAW,SACXC,gBA7HG,WACvBT,QAAQC,IAAI,yBACZhC,eAAeyC,WAAW,mBAC1BhD,GAAc,GACdE,GAAiB,MA4HD,kBAAC+C,EAAA,EAAD,CAAQzF,MAAO,UAAW0F,QAvIzB,WACjBZ,QAAQC,IAAI,kBACZhC,eAAeyC,WAAW,mBAC1BhD,GAAc,GACdE,GAAiB,KAmID,WA/GO,0BACXwC,UAAWzD,EAAQJ,KACnBsE,YAAU,EACVC,SArFK,SAACC,GAElB,OADAA,EAAMC,iBACD/D,GAAcE,GAAUE,GAAaE,EAKtCF,IAAaE,GACbT,GAAe,QACfE,EAAY,4BAGhBF,GAAe,QACf4B,EAAY,CACRzB,SAAUA,EACVE,MAAOA,EACP8D,SAAU5D,IACX,KAdCP,GAAe,QACfE,EAAY,mCAmFJ,kBAACkE,EAAA,EAAD,CAAMC,WAAS,EAACtF,QAAS,GACrB,kBAACqF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,CACIC,aAAa,OACbnC,KAAK,WACLnE,QAAQ,WACRuG,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,YACNC,SA7EH,SAACb,GACtB7D,EAAY6D,EAAMc,OAAOC,QA6EDC,WAAS,KAGjB,kBAACb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,CACIrG,QAAQ,WACRuG,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNvC,KAAK,QACLmC,aAAa,QACbK,SAtFF,SAACb,GACvB3D,EAAS2D,EAAMc,OAAOC,OACtBhF,GAAe,GACfE,EAAY,QAsFI,kBAACkE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,CACIrG,QAAQ,WACRuG,UAAQ,EACRC,WAAS,EACTrC,KAAK,WACLuC,MAAM,WACNK,KAAK,WACLN,GAAG,WACHH,aAAa,mBACbK,SA7FH,SAACb,GACtBzD,EAAYyD,EAAMc,OAAOC,WA+FT,kBAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,CACIrG,QAAQ,WACRuG,UAAQ,EACRC,WAAS,EACTrC,KAAK,kBACLuC,MAAM,mBACNK,KAAK,WACLN,GAAG,kBACHH,aAAa,mBACbK,SAtGI,SAACb,GAC7BvD,EAAeuD,EAAMc,OAAOC,WAwGXjF,GACG,kBAACqE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,yBAAKf,MAAO,CAAE,MAAS,QAClBvD,GAAY,mCAK7B,kBAAC4D,EAAA,EAAD,CACIqB,KAAK,SACLP,WAAS,EACTxG,QAAQ,YACRC,MAAM,UACNkF,UAAWzD,EAAQF,QALvB,WASI,0BAAM6D,MAAO,CAAE,YAAe,QAA9B,0BAGA,kBAAC,cAAD,CACIC,SAAS,2EACTC,WAAW,UACXyB,UA5HA,SAACnC,GACrBE,QAAQC,IAAI,aAAcH,GAC1BhD,GAAe,GACf,IAAMoF,EAAapC,EAASqC,WAAW/C,KACjCgD,EAActC,EAASqC,WAAWhF,MACpCiF,GAKA1D,EAJgB,CACZzB,SAAUiF,EACV/E,MAAOiF,IAEU,IAmHLC,UA/GA,SAACvC,GACrBE,QAAQC,IAAI,aACZD,QAAQC,IAAI,aAAcH,GAC1BhD,GAAe,IA6GKwF,aAAc,uBAEtB,6BACA,6BACA,kBAACpB,EAAA,EAAD,CAAMC,WAAS,EAACoB,QAAQ,YACpB,kBAACrB,EAAA,EAAD,CAAME,MAAI,GACN,kBAAChG,EAAA,EAAD,CAAMC,KAAK,SAASJ,QAAQ,SAA5B,sCA8BhB,kBAACuH,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC1H,EAAD,Q,aC5RD2H,UARc,WACzB,OACI,kBAAC,IAAD,CAAW7H,SAAS,MAChB,kBAAC6B,EAAD","file":"static/js/12.5e4bbed8.chunk.js","sourcesContent":["import React, {ReactNode} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledContainer = styled(Container)`\r\n    margin-top: 85px;\r\n`;\r\n\r\ninterface MarginContainerProps {\r\n    maxWidth: 'lg'\r\n        | 'md'\r\n        | 'sm'\r\n        | 'xl'\r\n        | 'xs'\r\n        | false;\r\n    children: ReactNode;\r\n}\r\n\r\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\r\n    return (\r\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\r\n    );\r\n};\r\n\r\nexport default MarginContainer;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant='body2' color='textSecondary' align='center'>\r\n            {'Copyright Â© '}\r\n            <Link color='inherit' href='https://material-ui.com/'>\r\n                NextStory\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const [signUpError, setSignUpError] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPass, setConfirmPass] = useState('');\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isGoogleLogin, setIsGoogleLogin] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const sessionDataString = sessionStorage.getItem('NS-session-data');\r\n        const sessionDataObj = sessionDataString && JSON.parse(sessionDataString);\r\n        const loginExpiry = sessionDataObj?.expiry;\r\n        const loggedIn = loginExpiry && new Date(loginExpiry) > new Date();\r\n        const googleLogin = sessionDataObj?.isGoogleLogin;\r\n        setIsLoggedIn(loggedIn);\r\n        setIsGoogleLogin(googleLogin);\r\n    }, []);\r\n\r\n    const postNewUser = (newUserObject: any, isGoogle: boolean) => {\r\n        axios.post(`http://localhost:9000/users/signUp`, newUserObject)\r\n            .then((profile: any) => {\r\n                const userId = profile.data.userId;\r\n                const username = profile.data.name;\r\n                const time = new Date();\r\n                time.setSeconds(time.getSeconds() + 3599); // same as google auth timeout\r\n                const authObject = {\r\n                    expiry: time,\r\n                    username: username,\r\n                    userId: userId,\r\n                    isGoogleLogin: isGoogle\r\n                };\r\n                sessionStorage.setItem('NS-session-data', JSON.stringify(authObject));\r\n                history.push(`/`);\r\n            })\r\n            .catch((error: any) => {\r\n                setSignUpError(true);\r\n                const errorMsg = error.response.data.message;\r\n                setErrorMsg(errorMsg);\r\n                console.log('Error signing up', error);\r\n            });\r\n    };\r\n\r\n    const handleSignUp = (event: any) => {\r\n        event.preventDefault();\r\n        if (!userName || ! email || !password || !confirmPass) {\r\n            setSignUpError(true);\r\n            setErrorMsg('All fields must be filled in');\r\n            return;\r\n        }\r\n        if (password !== confirmPass) {\r\n            setSignUpError(true);\r\n            setErrorMsg('Passwords do not match');\r\n            return;\r\n        }\r\n        setSignUpError(false);\r\n        postNewUser({\r\n            userName: userName,\r\n            email: email,\r\n            textPass: password\r\n        }, false);\r\n    };\r\n\r\n    const handleNameChange = (event: any) => {\r\n        setUserName(event.target.value);\r\n    };\r\n\r\n    const handleEmailChange = (event: any) => {\r\n        setEmail(event.target.value);\r\n        setSignUpError(false);\r\n        setErrorMsg('');\r\n    };\r\n\r\n    const handlePassChange = (event: any) => {\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const handleConfirmPassChange = (event: any) => {\r\n        setConfirmPass(event.target.value);\r\n    };\r\n\r\n    const onSignUpSuccess = (response: any) => {\r\n        console.log('response: ', response);\r\n        setSignUpError(false);\r\n        const googleName = response.profileObj.name;\r\n        const googleEmail = response.profileObj.email;\r\n        if (googleEmail) {\r\n            const userObj = {\r\n                userName: googleName,\r\n                email: googleEmail\r\n            };\r\n            postNewUser(userObj, true);\r\n        }\r\n    };\r\n\r\n    const onSignUpFailure = (response: any) => {\r\n        console.log('onFailure');\r\n        console.log('response: ', response);\r\n        setSignUpError(true);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        console.log('logout success');\r\n        sessionStorage.removeItem('NS-session-data');\r\n        setIsLoggedIn(false);\r\n        setIsGoogleLogin(false);\r\n    };\r\n\r\n    const handleGoogleLogout = () => {\r\n        console.log('google logout success');\r\n        sessionStorage.removeItem('NS-session-data');\r\n        setIsLoggedIn(false);\r\n        setIsGoogleLogin(false);\r\n    };\r\n\r\n    return (\r\n        <Container component='main' maxWidth='xs'>\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <FaceIcon />\r\n                </Avatar>\r\n                <Typography component='h1' variant='h5'>\r\n                    Sign up\r\n                </Typography>\r\n                {!isLoggedIn ? <form\r\n                    className={classes.form}\r\n                    noValidate\r\n                    onSubmit={handleSignUp}\r\n                >\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete='name'\r\n                                name='userName'\r\n                                variant='outlined'\r\n                                required\r\n                                fullWidth\r\n                                id='userName'\r\n                                label='User Name'\r\n                                onChange={handleNameChange}\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                required\r\n                                fullWidth\r\n                                id='email'\r\n                                label='Email Address'\r\n                                name='email'\r\n                                autoComplete='email'\r\n                                onChange={handleEmailChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                required\r\n                                fullWidth\r\n                                name='password'\r\n                                label='Password'\r\n                                type='password'\r\n                                id='password'\r\n                                autoComplete='current-password'\r\n                                onChange={handlePassChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                required\r\n                                fullWidth\r\n                                name='confirmPassword'\r\n                                label='Confirm Password'\r\n                                type='password'\r\n                                id='confirmPassword'\r\n                                autoComplete='confirm-password'\r\n                                onChange={handleConfirmPassChange}\r\n                            />\r\n                        </Grid>\r\n                        {signUpError &&\r\n                            <Grid item xs={12}>\r\n                                <div style={{ 'color': 'red' }}>\r\n                                    {errorMsg || 'There was an error signing up'}\r\n                                </div>\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                    <Button\r\n                        type='submit'\r\n                        fullWidth\r\n                        variant='contained'\r\n                        color='primary'\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                        <span style={{ 'marginRight': '5px' }}>\r\n                            Or sign up with Google\r\n                        </span>\r\n                        <GoogleLogin\r\n                            clientId='279438615331-cvlr0tk0j35i4s9df4m51o9sb5uj8k3s.apps.googleusercontent.com'\r\n                            buttonText='Sign up'\r\n                            onSuccess={onSignUpSuccess}\r\n                            onFailure={onSignUpFailure}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    <br/>\r\n                    <br/>\r\n                    <Grid container justify='flex-end'>\r\n                        <Grid item>\r\n                            <Link href='/login' variant='body2'>\r\n                                Already have an account? Login\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                :\r\n                    <>\r\n                        <div style={{ 'color': 'red', 'margin': '20px' }}>\r\n                            You are already signed in\r\n                        </div>\r\n                        <Link href='/' variant='body2'>\r\n                        Go to home\r\n                        </Link>\r\n                        <div style={{ 'margin': '10px' }}>\r\n                            Or\r\n                        </div>\r\n                        {isGoogleLogin ? <GoogleLogout\r\n                            clientId='279438615331-cvlr0tk0j35i4s9df4m51o9sb5uj8k3s.apps.googleusercontent.com'\r\n                            buttonText='Logout'\r\n                            onLogoutSuccess={handleGoogleLogout}\r\n                        />\r\n                        :\r\n                        <Button color={'primary'} onClick={handleLogout} >\r\n                            Logout\r\n                        </Button>\r\n                        }\r\n                    </>\r\n                }\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\nimport SignUp from '../../components/SignUp';\r\nimport Container from '../Container';\r\n\r\n\r\nconst SignUpForm: React.FC = () => {\r\n    return (\r\n        <Container maxWidth='md'>\r\n            <SignUp />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;\r\n"],"sourceRoot":""}