{"version":3,"sources":["constants/dataTypes.ts","containers/Container/index.tsx","actions/singleSearchPageFilterActions.ts","components/TagButton/index.tsx","components/TagsSection/index.tsx","../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/utils/useControlled.js","components/SearchResultBlock/index.tsx","components/SearchResultsInfiniteScroll/index.tsx","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","components/TagFilter/index.tsx","containers/ExplorePage/index.tsx"],"names":["MediaType","SingleQueryType","StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","changeSingleSearchPageFilter","filterName","type","CHANGE_SINGLE_SEARCH_PAGE_FILTER","StyledTagButton","button","theme","palette","primary","light","secondary","connect","label","tagId","singleQueryType","history","useHistory","encodedSubject","encodeURIComponent","onClick","queryType","bookPerson","BOOKS","moviePerson","MOVIES","tag","genre","searchBar","ALL","changeQueryFilter","push","StyledTagsSection","div","TagsSection","tags","tagObjects","map","index","key","tagObject","tagName","useFormControl","React","FormControlContext","useControlled","_ref","controlled","defaultProp","default","isControlled","name","state","undefined","current","_React$useState","valueState","setValue","newValue","Block","grey","TopBar","StyledImage","img","isSmall","StyledTitle","StyledLink","Link","SearchResultBlock","image","title","blurb","genres","mediaType","mediaId","nextStoryTags","useMediaQuery","goToPage","Grid","container","direction","spacing","item","sm","src","variant","color","gutterBottom","content","SearchResultsInfiniteScroll","resultsToDisplay","hasMore","doNext","style","overflow","dataLength","length","scrollThreshold","next","loader","textAlign","endMessage","result","id","FormControlLabel","ref","checked","classes","className","control","disabledProp","disabled","inputRef","_props$labelPlacement","labelPlacement","other","onChange","value","_objectWithoutProperties","muiFormControl","controlProps","forEach","_extends","clsx","root","concat","capitalize","Typography","component","withStyles","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","text","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","inputProps","onBlur","onFocus","readOnly","required","tabIndex","_useControlled","Boolean","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","role","event","input","newChecked","target","padding","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","fontSize","colorPrimary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","TypeSelector","TagFilter","useState","allTags","setTags","isMovieSelected","selectMovie","isBookSelected","selectBook","allSelectedTags","selectTags","queryStartIndex","setQueryStartIndex","hasMoreMovieResults","setHasMoreMovieResults","hasMoreBookResults","setHasMoreBookResults","allResults","setAllResults","queryStatus","setQueryStatus","useEffect","axios","get","then","res","data","catch","error","console","log","getResultsByTag","a","movieList","bookList","query","reduce","acc","curr","substring","movieRes","bookRes","getFromThirdParty","mongoMovies","mongoBooks","bookData","movieData","maxEndIndex","movieEndIndex","bookEndIndex","i","movieId","movieWithNextStoryTags","thisMongoMovieMaybe","filter","m","thisMongoMovie","bookId","bookWithNextStoryTags","thisMongoBookMaybe","b","thisMongoBook","tabFilter","stopPropagation","includes","indexOf","splice","Button","marginBottom","alert","ExplorePage"],"mappings":"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","file":"static/js/14.c2e88fec.chunk.js","sourcesContent":["export enum MediaType {\r\n    movie = 'movie',\r\n    book = 'book',\r\n    start = ''\r\n}\r\n\r\nexport enum SingleQueryType {\r\n    bookPerson = 'bookPerson',\r\n    moviePerson = 'moviePerson',\r\n    genre = 'genre',\r\n    tag = 'tag',\r\n    searchBar = 'searchBar'\r\n}\r\n\r\nexport type CardData = {\r\n    title: string,\r\n    id: string,\r\n    mediaType: MediaType,\r\n    image: string, // the url, etc to the image\r\n    genres: string[],\r\n    nextStoryTags: string[],\r\n    people: string,\r\n    blurb: string,\r\n    avgRating: number\r\n}\r\n\r\nexport interface Tag{\r\n  tagId: string;\r\n  tagName: string;\r\n}\r\n","import React/* , {ReactNode}  */from 'react';\r\nimport Container, { ContainerProps } from '@material-ui/core/Container';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledContainer = styled(Container)`\r\n    margin-top: 85px;\r\n    margin-bottom: 85px;\r\n`;\r\n\r\ninterface MarginContainerProps extends ContainerProps {\r\n    maxWidth: 'lg'\r\n        | 'md'\r\n        | 'sm'\r\n        | 'xl'\r\n        | 'xs'\r\n        | false;\r\n    // children: React.ReactNode;\r\n}\r\n\r\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\r\n    return (\r\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\r\n    );\r\n};\r\n\r\nexport default MarginContainer;\r\n","import {\r\n    CHANGE_SINGLE_SEARCH_PAGE_FILTER\r\n} from '../constants/singleSearchPageFilterConstants';\r\n\r\nexport const changeSingleSearchPageFilter = (filterName: string) => {\r\n    return {\r\n        type: CHANGE_SINGLE_SEARCH_PAGE_FILTER,\r\n        filterName: filterName\r\n    };\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useHistory} from 'react-router';\r\nimport {SingleQueryType} from '../../constants/dataTypes';\r\nimport {ALL, BOOKS, MOVIES} from '../../constants/homePageFilterConstants';\r\nimport {connect} from 'react-redux';\r\nimport {changeSingleSearchPageFilter} from '../../actions/singleSearchPageFilterActions';\r\n\r\ninterface TagsButtonProps {\r\n    label: string;\r\n    singleQueryType: SingleQueryType;\r\n    tagId?: string; // needed for if the tag button is being used for nextStoryTags\r\n}\r\n\r\nconst StyledTagButton = styled.button`\r\n    border-radius: 7px;\r\n    color: white;\r\n    outline: none;\r\n    border: none;\r\n    margin: 5px;\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.palette.primary.light};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.palette.secondary.light};\r\n    }\r\n    font-size: 16px;\r\n    padding: 3px 5px 3px 5px;\r\n`;\r\n\r\nconst changeQueryFilter = (props: any, queryType: SingleQueryType) => {\r\n    switch (queryType) {\r\n        case SingleQueryType.bookPerson:\r\n            props.changeSingleSearchPageFilter(BOOKS);\r\n            break;\r\n        case SingleQueryType.moviePerson:\r\n            props.changeSingleSearchPageFilter(MOVIES);\r\n            break;\r\n        case SingleQueryType.tag:\r\n        case SingleQueryType.genre:\r\n        case SingleQueryType.searchBar:\r\n        default:\r\n            props.changeSingleSearchPageFilter(ALL);\r\n            break;\r\n    }\r\n};\r\n\r\nconst TagButton: React.FC<TagsButtonProps> = (props: TagsButtonProps) => {\r\n    const { label, tagId, singleQueryType } = props;\r\n    const history = useHistory();\r\n\r\n    const encodedSubject = encodeURIComponent(tagId || label);\r\n    const goToSingleQuery = () => {\r\n        changeQueryFilter(props, singleQueryType);\r\n        history.push(`/searchResult/param?singleQueryType=${singleQueryType}&query=${encodedSubject}`);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {label &&\r\n                <StyledTagButton\r\n                    onClick={goToSingleQuery}\r\n                >\r\n                    {label}\r\n                </StyledTagButton>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, {changeSingleSearchPageFilter})(TagButton);\r\n","import React from 'react';\r\nimport TagButton from '../TagButton';\r\nimport styled from 'styled-components';\r\nimport {SingleQueryType} from '../../constants/dataTypes';\r\n\r\ninterface TagsSectionProps {\r\n    singleQueryType: SingleQueryType;\r\n    tags?: string[],\r\n    tagObjects?: Array<{ tagId: string, tagName: string }>\r\n}\r\n\r\nconst StyledTagsSection = styled.div`\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst TagsSection: React.FC<TagsSectionProps> = (props: TagsSectionProps) => {\r\n    const { singleQueryType, tags, tagObjects } = props;\r\n    return (\r\n        <StyledTagsSection>\r\n            { tags && tags.map((tag, index) => {\r\n                return (\r\n                    <TagButton\r\n                        key={index}\r\n                        label={tag}\r\n                        singleQueryType={singleQueryType}\r\n                    />);\r\n            }) }\r\n            { !tags && tagObjects && tagObjects.map((tagObject, index) => {\r\n                return (\r\n                    <TagButton\r\n                        key={index}\r\n                        label={tagObject.tagName}\r\n                        singleQueryType={singleQueryType}\r\n                        tagId={tagObject.tagId}\r\n                    />);\r\n            }) }\r\n        </StyledTagsSection>\r\n    );\r\n};\r\n\r\nexport default TagsSection;\r\n","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Grid, Link, useMediaQuery} from '@material-ui/core';\r\nimport {MediaType, SingleQueryType} from '../../constants/dataTypes';\r\nimport TagsSection from '../TagsSection';\r\nimport {useHistory} from 'react-router';\r\nimport Interweave from 'interweave';\r\n\r\ninterface SearchResultBlockProps {\r\n    image: string;\r\n    title: string;\r\n    blurb: string;\r\n    genres: Array<string>;\r\n    mediaType: MediaType;\r\n    mediaId: string;\r\n    nextStoryTags?: Array<any>; // optional\r\n}\r\n\r\nconst Block = styled.div`\r\n    border-top: ${({ theme }) => `2px solid ${theme.palette.grey[400]}`};\r\n    border-bottom: ${({ theme }) => `2px solid ${theme.palette.grey[400]}`};\r\n    min-height: 50px;\r\n    padding: 5px;\r\n    margin-bottom: 2px;\r\n`;\r\n\r\nconst TopBar = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst StyledImage = styled.img<{isSmall: boolean}>`\r\n    max-width: ${(props) => props.isSmall ? '150px' : '100%'};\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst StyledTitle = styled.div`\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst SearchResultBlock: React.FC<SearchResultBlockProps> = (props: SearchResultBlockProps) => {\r\n    const { image, title, blurb, genres, mediaType, mediaId, nextStoryTags } = props;\r\n    const history = useHistory();\r\n    const isSmall = useMediaQuery('(max-width:450px)');\r\n\r\n    const goToPage = () => {\r\n        history.push(`/${mediaType}/${mediaId}`);\r\n    };\r\n\r\n    return (\r\n        <Block>\r\n            <TopBar>\r\n                <Grid container direction={'row'}  spacing={5}>\r\n                    <Grid item sm={3}>\r\n                        <StyledImage src={image} onClick={goToPage} isSmall={isSmall}/>\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <StyledTitle>\r\n                            <StyledLink variant={'h5'} onClick={goToPage} color={'textPrimary'} gutterBottom>\r\n                                <strong>\r\n                                    {title}\r\n                                </strong>\r\n                            </StyledLink>\r\n                        </StyledTitle>\r\n                        <Interweave content={blurb} />\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        Genres:\r\n                        <TagsSection tags={genres} singleQueryType={SingleQueryType.genre}/>\r\n                        {nextStoryTags &&\r\n                            <>\r\n                                Tags:\r\n                                <TagsSection tagObjects={nextStoryTags} singleQueryType={SingleQueryType.tag}/>\r\n                            </>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </TopBar>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default SearchResultBlock;\r\n","import React from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport SearchResultBlock from '../SearchResultBlock';\r\n\r\n\r\ninterface SearchResultsInfiniteScrollProps {\r\n    resultsToDisplay: Array<any>;\r\n    hasMore: boolean;\r\n    doNext: any;\r\n}\r\n\r\nconst SearchResultsInfiniteScroll = (props: SearchResultsInfiniteScrollProps) => {\r\n    const { resultsToDisplay, hasMore, doNext } = props;\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            style={{overflow: 'hidden'}}\r\n            dataLength={resultsToDisplay.length}\r\n            scrollThreshold={1}\r\n            next={doNext}\r\n            hasMore={hasMore}\r\n            loader={<h4 style={{textAlign: 'center'}}>Loading more results...</h4>}\r\n            endMessage={\r\n                <p style={{textAlign: 'center'}}>\r\n                    <b>No more results</b>\r\n                </p>\r\n            }>\r\n            {resultsToDisplay.map((result, index) =>\r\n                <SearchResultBlock\r\n                    key={index}\r\n                    image={result.image}\r\n                    title={result.title}\r\n                    blurb={result.blurb}\r\n                    genres={result.genres}\r\n                    nextStoryTags={result.nextStoryTags}\r\n                    mediaType={result.mediaType}\r\n                    mediaId={result.id}\r\n                />)\r\n            }\r\n        </InfiniteScroll>\r\n    );\r\n};\r\n\r\nexport default SearchResultsInfiniteScroll;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, {useEffect, useState}  from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { Typography, Checkbox, FormControlLabel, Button } from '@material-ui/core';\r\nimport SearchResultsInfiniteScroll from '../../components/SearchResultsInfiniteScroll';\r\n\r\nconst TypeSelector = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst TagFilter: React.FC = () => {\r\n    const [allTags, setTags] = useState<Array<any>>([]);\r\n    const [isMovieSelected, selectMovie] = useState<Boolean>(false);\r\n    const [isBookSelected, selectBook] = useState<Boolean>(false);\r\n    const [allSelectedTags, selectTags] = useState<Array<any>>([]);\r\n    const increaseIndexBy = 5;\r\n    const [queryStartIndex, setQueryStartIndex] = useState(0);\r\n    const [hasMoreMovieResults, setHasMoreMovieResults] = useState<boolean>(true);\r\n    const [hasMoreBookResults, setHasMoreBookResults] = useState<boolean>(true);\r\n    const [allResults, setAllResults] = useState<Array<any>>([]);\r\n    const [queryStatus, setQueryStatus] = useState<Boolean>(false);\r\n\r\n    useEffect(() => {\r\n        axios.get('/nextStoryTags')\r\n            .then((res: any) => {\r\n                setTags(res.data);\r\n            })\r\n            .catch((error: any) => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    const getResultsByTag = async () => {\r\n        let movieList: Array<any> = [];\r\n        let bookList: Array<any> = [];\r\n        const query: String = allSelectedTags.reduce((acc, curr)=> {\r\n            return `${acc}&${curr.tagId}`;\r\n        }, '').substring(1);\r\n\r\n        if (isMovieSelected) {\r\n            try {\r\n                const movieRes = await axios.get(`/movies/withTags/${query}`);\r\n                movieList = movieRes.data;\r\n            } catch (e) {\r\n                console.log('error fetching movies from mongo for tag', e);\r\n            }\r\n        }\r\n\r\n        if (isBookSelected) {\r\n            try {\r\n                const bookRes = await axios.get(`/books/withTags/${query}`);\r\n                bookList = bookRes.data;\r\n            } catch (e) {\r\n                console.log('error fetching books from mongo for tag', e);\r\n            }\r\n        }\r\n        try {\r\n            await getFromThirdParty(movieList, bookList);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    async function getFromThirdParty(mongoMovies: any[], mongoBooks: any[]) {\r\n        const bookData: any[] = [];\r\n        const movieData: any[] = [];\r\n        const maxEndIndex = queryStartIndex + increaseIndexBy;\r\n        const movieEndIndex = mongoMovies.length >= maxEndIndex ? maxEndIndex : mongoMovies.length;\r\n        const bookEndIndex = mongoBooks.length >= maxEndIndex ? maxEndIndex : mongoBooks.length;\r\n        for(let i = queryStartIndex; i < movieEndIndex; i++){\r\n            const movieId = mongoMovies[i].movieId;\r\n            try {\r\n                const movieRes = await axios.get(`/thirdPartyMovieApi/tmdbMovies/searchOneById/${movieId}`);\r\n                let movieWithNextStoryTags = movieRes.data;\r\n                const thisMongoMovieMaybe = mongoMovies.filter((m) => m.movieId === movieId);\r\n                const thisMongoMovie = thisMongoMovieMaybe.length > 0 && thisMongoMovieMaybe[0];\r\n                if (thisMongoMovie) {\r\n                    movieWithNextStoryTags.nextStoryTags = thisMongoMovie.nextStoryTags;\r\n                } else {\r\n                    movieWithNextStoryTags.nextStoryTags = [];\r\n                }\r\n                movieData.push(movieWithNextStoryTags);\r\n                setAllResults((allResults) => [...allResults, movieWithNextStoryTags]);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        for(let i = queryStartIndex; i < bookEndIndex; i++){\r\n            const bookId = mongoBooks[i].bookId;\r\n            try {\r\n                const bookRes = await axios.get(`/thirdPartyBookApi/googleBooks/searchOneById/${bookId}`);\r\n                let bookWithNextStoryTags = bookRes.data;\r\n                const thisMongoBookMaybe = mongoBooks.filter((b) => b.bookId === bookId);\r\n                const thisMongoBook = thisMongoBookMaybe.length > 0 && thisMongoBookMaybe[0];\r\n                if (thisMongoBook) {\r\n                    bookWithNextStoryTags.nextStoryTags = thisMongoBook.nextStoryTags;\r\n                } else {\r\n                    bookWithNextStoryTags.nextStoryTags = [];\r\n                }\r\n                bookData.push(bookWithNextStoryTags);\r\n                setAllResults((allResults) => [...allResults, bookWithNextStoryTags]);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        if (movieData.length === 0) {\r\n            setHasMoreMovieResults(false);\r\n        }\r\n        if (bookData.length === 0) {\r\n            setHasMoreBookResults(false);\r\n        }\r\n        return [movieData, bookData];\r\n    }\r\n\r\n    const doNext = () => {\r\n        setQueryStartIndex(queryStartIndex + increaseIndexBy);\r\n    };\r\n\r\n    const showFilterResult = () => {\r\n        if (queryStatus) {\r\n            if (allResults && allResults.length > 0) {\r\n                return (\r\n                    <SearchResultsInfiniteScroll\r\n                        resultsToDisplay={allResults}\r\n                        hasMore={hasMoreMovieResults || hasMoreBookResults}\r\n                        doNext={doNext}\r\n                    />\r\n                );\r\n            } else {\r\n                return (\r\n                    <p style={{textAlign: 'center'}}>\r\n                        <b>Sorry... We Haven't Found What You Are Looking For.</b>\r\n                    </p>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <p style={{textAlign: 'center'}}>\r\n                <b>What's Your Next Story?</b>\r\n            </p>\r\n        );\r\n    };\r\n\r\n    const tabFilter = (\r\n        <div>\r\n            <TypeSelector>\r\n                <Typography>\r\n                    Types:\r\n                </Typography>\r\n                <div>\r\n                    <FormControlLabel\r\n                        onClick={(event) => event.stopPropagation()}\r\n                        onFocus={(event) => event.stopPropagation()}\r\n                        control={\r\n                        <Checkbox\r\n                            name='movie'\r\n                            onClick={(event) => {\r\n                                event.stopPropagation();\r\n                                selectMovie(!isMovieSelected);\r\n                            }}\r\n                        />}\r\n                        label='Movies'\r\n                    />\r\n                    <FormControlLabel\r\n                        onClick={(event) => event.stopPropagation()}\r\n                        onFocus={(event) => event.stopPropagation()}\r\n                        control={\r\n                        <Checkbox\r\n                            name='book'\r\n                            onClick={(event) => {\r\n                                event.stopPropagation();\r\n                                selectBook(!isBookSelected);\r\n                            }}\r\n                        />}\r\n                        label='Books'\r\n                    />\r\n                </div>\r\n            </TypeSelector>\r\n            <div>\r\n                <Typography>\r\n                    Tags:\r\n                </Typography>\r\n                <div>\r\n                    {\r\n                        allTags.map(\r\n                            (tag, index) => (\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            name={tag.tagName}\r\n                                            onClick={() => {\r\n                                                if (allSelectedTags.includes(tag)) {\r\n                                                    const index = allSelectedTags.indexOf(tag);\r\n                                                    if (index > -1) {\r\n                                                        allSelectedTags.splice(index, 1);\r\n                                                    }\r\n                                                } else {\r\n                                                    selectTags([...allSelectedTags, tag]);\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label={tag.tagName}\r\n                                    key={index}\r\n                                />\r\n                            )\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <Button\r\n                variant='contained'\r\n                style={{ marginBottom: '5px' }}\r\n                onClick={()=>{\r\n                    if (!(isMovieSelected || isBookSelected)) {\r\n                        alert('Please Specify The Story Type You Are Looking For!');\r\n                    } else if (!allSelectedTags || allSelectedTags.length === 0) {\r\n                        alert('Please Specify The Tags For Your Story!');\r\n                    } else {\r\n                        setAllResults([]);\r\n                        setQueryStatus(true);\r\n                        getResultsByTag();\r\n                    }\r\n                }}\r\n            >\r\n                Explore\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                tabFilter\r\n            }\r\n            {\r\n               showFilterResult()\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TagFilter;\r\n","import React from 'react';\r\nimport Container from '../Container';\r\nimport { Typography } from '@material-ui/core';\r\nimport TagFilter from '../../components/TagFilter';\r\n\r\nconst ExplorePage: React.FC = () => {\r\n    return (\r\n        <Container maxWidth='md'>\r\n            <Typography variant={'h1'} gutterBottom>Explore Your Next Story!</Typography>\r\n            <TagFilter />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ExplorePage;\r\n"],"sourceRoot":""}