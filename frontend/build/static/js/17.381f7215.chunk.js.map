{"version":3,"sources":["containers/Container/index.tsx","components/Login/index.tsx","containers/Login/index.tsx"],"names":["StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","useState","email","setEmail","password","setPassword","errorMsg","setErrorMsg","loginError","setLoginError","isLoggedIn","setIsLoggedIn","isGoogleLogin","setIsGoogleLogin","history","useHistory","host","window","location","protocol","useEffect","sessionDataString","sessionStorage","getItem","sessionDataObj","JSON","parse","loginExpiry","expiry","loggedIn","googleLogin","component","CssBaseline","className","Avatar","style","clientId","buttonText","onLogoutSuccess","removeItem","Button","onClick","noValidate","onSubmit","event","preventDefault","axios","get","then","profile","data","passwordCorrect","userId","username","name","time","setSeconds","getSeconds","authObject","setItem","stringify","push","catch","error","response","message","console","log","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","target","value","type","Grid","item","xs","onSuccess","googleEmail","profileObj","onFailure","cookiePolicy","container","Box","mt","LoginForm"],"mappings":"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","file":"static/js/17.381f7215.chunk.js","sourcesContent":["import React, {ReactNode} from 'react';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled(Container)`\n    margin-top: 85px;\n    margin-bottom: 85px;\n`;\n\ninterface MarginContainerProps {\n    maxWidth: 'lg'\n        | 'md'\n        | 'sm'\n        | 'xl'\n        | 'xs'\n        | false;\n    children: ReactNode;\n}\n\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\n    return (\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\n    );\n};\n\nexport default MarginContainer;\n","import React, {useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport FaceIcon from '@material-ui/icons/Face';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useHistory} from 'react-router-dom';\nimport axios from 'axios';\nimport {GoogleLogin, GoogleLogout} from 'react-google-login';\n\nfunction Copyright() {\n    return (\n        <Typography variant='body2' color='textSecondary' align='center'>\n            {'Copyright Â© '}\n            <Link color='inherit' href='https://material-ui.com/'>\n                NextStory\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        margin: theme.spacing(2, 0, 2)\n    }\n}));\n\nexport default function Login() {\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMsg, setErrorMsg] = useState('');\n    const [loginError, setLoginError] = useState(false);\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [isGoogleLogin, setIsGoogleLogin] = useState(false);\n\n    const history = useHistory();\n    const host = window.location.protocol + '//'+ window.location.host;\n    useEffect(() => {\n        const sessionDataString = sessionStorage.getItem('NS-session-data');\n        const sessionDataObj = sessionDataString && JSON.parse(sessionDataString);\n        const loginExpiry = sessionDataObj?.expiry;\n        const loggedIn = loginExpiry && new Date(loginExpiry) > new Date();\n        const googleLogin = sessionDataObj?.isGoogleLogin;\n        setIsLoggedIn(loggedIn);\n        setIsGoogleLogin(googleLogin);\n    }, []);\n\n    const handleLogin = (event: any) => {\n        event.preventDefault();\n        if (! email || !password) {\n            setLoginError(true);\n            setErrorMsg('All fields must be filled in');\n            return;\n        }\n        setLoginError(false);\n        axios.get(host + `/users/notGoogleLogin/${email}/${password}`)\n            .then((profile: any) => {\n                const passwordIsCorrect = profile.data.passwordCorrect;\n                if (passwordIsCorrect) {\n                    const userId = profile.data.userId;\n                    const username = profile.data.name;\n                    const time = new Date();\n                    time.setSeconds(time.getSeconds() + 3599); // same as google auth timeout\n                    const authObject = {\n                        expiry: time,\n                        username: username,\n                        userId: userId,\n                        isGoogleLogin: false\n                    };\n                    sessionStorage.setItem('NS-session-data', JSON.stringify(authObject));\n                    history.push(`/`);\n                } else {\n                    setLoginError(true);\n                    setErrorMsg('Password is incorrect');\n                }\n            })\n            .catch((error: any) => {\n                setLoginError(true);\n                const errorMsg = error.response?.data?.message || 'There was an error logging in';\n                setErrorMsg(errorMsg);\n                console.log('Error logging in', error);\n            });\n    };\n\n    const handleEmailChange = (event: any) => {\n        setEmail(event.target.value);\n    };\n\n    const handlePassChange = (event: any) => {\n        setPassword(event.target.value);\n    };\n\n    const onLoginSuccess = (response: any) => {\n        console.log('response: ', response);\n        const googleEmail = response.profileObj.email;\n        if (googleEmail) {\n            axios.get(host + `/users/googleLogin/${googleEmail}`)\n                .then((profile: any) => {\n                    const userId = profile.data.userId;\n                    const username = profile.data.name;\n                    const time = new Date();\n                    time.setSeconds(time.getSeconds() + 3599); // same as google auth timeout\n                    const authObject = {\n                        expiry: time,\n                        username: username,\n                        userId: userId,\n                        isGoogleLogin: true\n                    };\n                    sessionStorage.setItem('NS-session-data', JSON.stringify(authObject));\n                    history.push(`/`);\n                })\n                .catch((error: any) => {\n                    setLoginError(true);\n                    const errorMsg = error.response?.data?.message || 'There was an error logging in';\n                    setErrorMsg(errorMsg);\n                    console.log('Error logging in', error);\n                });\n        }\n    };\n\n    const onLoginFailure = (response: any) => {\n        console.log('on login Failure');\n        console.log('response: ', response);\n        setLoginError(true);\n        setErrorMsg('There was an error logging in');\n    };\n\n    const handleLogout = () => {\n        sessionStorage.removeItem('NS-session-data');\n        setIsLoggedIn(false);\n        setIsGoogleLogin(false);\n    };\n\n    const handleGoogleLogout = () => {\n        sessionStorage.removeItem('NS-session-data');\n        setIsLoggedIn(false);\n        setIsGoogleLogin(false);\n    };\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <FaceIcon />\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                    {isLoggedIn ? 'Logout' : 'Login'}\n                </Typography>\n                {!isLoggedIn ? <form className={classes.form} noValidate onSubmit={handleLogin}>\n                    <TextField\n                        variant='outlined'\n                        margin='normal'\n                        required\n                        fullWidth\n                        id='email'\n                        label='Email Address'\n                        name='email'\n                        autoComplete='email'\n                        autoFocus\n                        onChange={handleEmailChange}\n                    />\n                    <TextField\n                        variant='outlined'\n                        margin='normal'\n                        required\n                        fullWidth\n                        name='password'\n                        label='Password'\n                        type='password'\n                        id='password'\n                        autoComplete='current-password'\n                        onChange={handlePassChange}\n                    />\n                    {loginError &&\n                        <Grid item xs={12}>\n                            <div style={{ 'color': 'red' }}>\n                                {errorMsg}\n                            </div>\n                        </Grid>\n                    }\n                    <Button\n                        type='submit'\n                        fullWidth\n                        variant='contained'\n                        color='primary'\n                        className={classes.submit}\n                    >\n                        Log In\n                    </Button>\n                    <span style={{ 'marginRight': '5px' }}>\n                        Or login with Google\n                    </span>\n                    <GoogleLogin\n                        clientId='279438615331-cvlr0tk0j35i4s9df4m51o9sb5uj8k3s.apps.googleusercontent.com'\n                        buttonText='Login'\n                        onSuccess={onLoginSuccess}\n                        onFailure={onLoginFailure}\n                        cookiePolicy={'single_host_origin'}\n                    />\n                    <br/>\n                    <br/>\n                    <Grid container>\n                        <Grid item>\n                            <Link href='/signup' variant='body2'>\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n                :\n                    <>\n                        <div style={{ 'color': 'red', 'margin': '20px' }}>\n                        Click here to logout:\n                        </div>\n                        {isGoogleLogin ? <GoogleLogout\n                                clientId='279438615331-cvlr0tk0j35i4s9df4m51o9sb5uj8k3s.apps.googleusercontent.com'\n                                buttonText='Logout'\n                                onLogoutSuccess={handleGoogleLogout}\n                            />\n                            :\n                            <Button color={'primary'} onClick={handleLogout} >\n                                Logout\n                            </Button>\n                        }\n                    </>\n                }\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from '../Container';\nimport '../../App.css';\nimport Login from '../../components/Login';\n\n\nconst LoginForm: React.FC = () => {\n    return (\n        <Container maxWidth='md'>\n            <Login />\n        </Container>\n    );\n};\n\nexport default LoginForm;\n"],"sourceRoot":""}