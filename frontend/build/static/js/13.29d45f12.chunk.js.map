{"version":3,"sources":["constants/dataTypes.ts","containers/Container/index.tsx","actions/singleSearchPageFilterActions.ts","components/TagButton/index.tsx","components/TagsSection/index.tsx","actions/reviewRatingActions.ts","components/StarRater/index.tsx","actions/homePageFilterActions.ts","assets/MockCover.png","assets/MockBookCover.jpg","components/MediaModal/index.tsx","components/MediaCard/index.tsx","components/DesktopFilter/index.tsx","components/MobileFilter/index.tsx","components/PopularMulitCardCarousel/index.tsx","components/RecommendationMulitCardCarousel/index.tsx","containers/Home/index.tsx"],"names":["MediaType","SingleQueryType","StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","changeSingleSearchPageFilter","filterName","type","CHANGE_SINGLE_SEARCH_PAGE_FILTER","StyledTagButton","button","theme","palette","primary","light","secondary","connect","label","tagId","singleQueryType","history","useHistory","encodedSubject","encodeURIComponent","onClick","queryType","bookPerson","BOOKS","moviePerson","MOVIES","tag","genre","searchBar","ALL","changeQueryFilter","push","StyledTagsSection","div","TagsSection","tags","tagObjects","map","index","key","tagObject","tagName","loadAllReviewsAction","reviewsArray","LOAD_REVIEWS_FROM_DB","addReviewAction","reviewObject","ADD_REVIEW","text","userId","userName","datePosted","deleteReviewAction","DELETE_REVIEW","editReviewAction","EDIT_REVIEW","changeRatingAction","CHANGE_RATING","rating","StyledIconButton","IconButton","VerticallyCenteredDiv","host","window","location","protocol","useState","ratedStar","setStar","readonly","readOnlyRating","hideReadOnlyLabel","userRating","twoDecimalRatingString","clickStar","starIndex","ratingToSet","userHasReviewText","axios","put","mediaId","mediaType","then","res","console","log","catch","err","delete","changeRating","toFixed","useEffect","display","Array","star","split","wholeNumberString","decimalString","wholeNumber","parseInt","decimalTimes100","style","fill","fontSize","closestFifty","Math","round","getIcon","size","ml","changeHomePageFilter","CHANGE_HOME_PAGE_FILTER","module","exports","CenteredBody","isSmall","isShort","ModalHeader","main","ModalContent","TopContainer","MediaImage","img","TopLeftContainer","MediaTags","MediaBlurb","ModalFooter","Paper","StyledButton","Button","grey","StyledCloseIcon","CloseIcon","MediaModal","isOpen","modalData","setModalOpen","storyTags","setStoryTags","averageRating","setAverageRating","useMediaQuery","id","mediaRouteType","book","get","mediaRes","mediaData","data","nextStoryTags","error","averageRatingData","average","Modal","open","onClose","src","image","Typography","variant","gutterBottom","title","movie","StarRater","genres","length","content","blurb","elevation","endIcon","goToPage","CardContainer","Card","MediaCard","cardData","isMediaModalOpen","setMediaModalOpen","DeskTopFilters","Tabs","state","singleSearchPageFilter","singleSearchPageFilterReducer","isSearchPage","React","storyType","setStoryType","smDown","value","onChange","event","newType","aria-label","centered","component","MobileFilters","BottomNavigation","mdUp","showLabels","icon","StyledCarousel","Carousel","homePageFilterReducer","start","MockMovieCover","people","avgRating","movieData","setMovieData","MockBookCover","bookData","setBookData","mountedRef","useRef","response","current","additionalTransfrom","arrows","autoPlaySpeed","draggable","infinite","keyBoardControl","minimumTouchDrag","slidesToSlide","swipeable","centerMode","removeArrowOnDeviceType","responsive","xl","breakpoint","max","min","items","partialVisibilityGutter","lg","md","xmd","sm","xs","xxs","filter","renderCards","Home"],"mappings":"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","file":"static/js/13.29d45f12.chunk.js","sourcesContent":["export enum MediaType {\r\n    movie = 'movie',\r\n    book = 'book',\r\n    start = ''\r\n}\r\n\r\nexport enum SingleQueryType {\r\n    bookPerson = 'bookPerson',\r\n    moviePerson = 'moviePerson',\r\n    genre = 'genre',\r\n    tag = 'tag',\r\n    searchBar = 'searchBar'\r\n}\r\n\r\nexport type CardData = {\r\n    title: string,\r\n    id: string,\r\n    mediaType: MediaType,\r\n    image: string, // the url, etc to the image\r\n    genres: string[],\r\n    nextStoryTags: string[],\r\n    people: string,\r\n    blurb: string,\r\n    avgRating: number\r\n}\r\n\r\nexport interface Tag{\r\n  tagId: string;\r\n  tagName: string;\r\n}\r\n","import React/* , {ReactNode}  */from 'react';\r\nimport Container, { ContainerProps } from '@material-ui/core/Container';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledContainer = styled(Container)`\r\n    margin-top: 85px;\r\n    margin-bottom: 85px;\r\n`;\r\n\r\ninterface MarginContainerProps extends ContainerProps {\r\n    maxWidth: 'lg'\r\n        | 'md'\r\n        | 'sm'\r\n        | 'xl'\r\n        | 'xs'\r\n        | false;\r\n    // children: React.ReactNode;\r\n}\r\n\r\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\r\n    return (\r\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\r\n    );\r\n};\r\n\r\nexport default MarginContainer;\r\n","import {\r\n    CHANGE_SINGLE_SEARCH_PAGE_FILTER\r\n} from '../constants/singleSearchPageFilterConstants';\r\n\r\nexport const changeSingleSearchPageFilter = (filterName: string) => {\r\n    return {\r\n        type: CHANGE_SINGLE_SEARCH_PAGE_FILTER,\r\n        filterName: filterName\r\n    };\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useHistory} from 'react-router';\r\nimport {SingleQueryType} from '../../constants/dataTypes';\r\nimport {ALL, BOOKS, MOVIES} from '../../constants/homePageFilterConstants';\r\nimport {connect} from 'react-redux';\r\nimport {changeSingleSearchPageFilter} from '../../actions/singleSearchPageFilterActions';\r\n\r\ninterface TagsButtonProps {\r\n    label: string;\r\n    singleQueryType: SingleQueryType;\r\n    tagId?: string; // needed for if the tag button is being used for nextStoryTags\r\n}\r\n\r\nconst StyledTagButton = styled.button`\r\n    border-radius: 7px;\r\n    color: white;\r\n    outline: none;\r\n    border: none;\r\n    margin: 5px;\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.palette.primary.light};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.palette.secondary.light};\r\n    }\r\n    font-size: 16px;\r\n    padding: 3px 5px 3px 5px;\r\n`;\r\n\r\nconst changeQueryFilter = (props: any, queryType: SingleQueryType) => {\r\n    switch (queryType) {\r\n        case SingleQueryType.bookPerson:\r\n            props.changeSingleSearchPageFilter(BOOKS);\r\n            break;\r\n        case SingleQueryType.moviePerson:\r\n            props.changeSingleSearchPageFilter(MOVIES);\r\n            break;\r\n        case SingleQueryType.tag:\r\n        case SingleQueryType.genre:\r\n        case SingleQueryType.searchBar:\r\n        default:\r\n            props.changeSingleSearchPageFilter(ALL);\r\n            break;\r\n    }\r\n};\r\n\r\nconst TagButton: React.FC<TagsButtonProps> = (props: TagsButtonProps) => {\r\n    const { label, tagId, singleQueryType } = props;\r\n    const history = useHistory();\r\n\r\n    const encodedSubject = encodeURIComponent(tagId || label);\r\n    const goToSingleQuery = () => {\r\n        changeQueryFilter(props, singleQueryType);\r\n        history.push(`/searchResult/param?singleQueryType=${singleQueryType}&query=${encodedSubject}`);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {label &&\r\n                <StyledTagButton\r\n                    onClick={goToSingleQuery}\r\n                >\r\n                    {label}\r\n                </StyledTagButton>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, {changeSingleSearchPageFilter})(TagButton);\r\n","import React from 'react';\r\nimport TagButton from '../TagButton';\r\nimport styled from 'styled-components';\r\nimport {SingleQueryType} from '../../constants/dataTypes';\r\n\r\ninterface TagsSectionProps {\r\n    singleQueryType: SingleQueryType;\r\n    tags?: string[],\r\n    tagObjects?: Array<{ tagId: string, tagName: string }>\r\n}\r\n\r\nconst StyledTagsSection = styled.div`\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst TagsSection: React.FC<TagsSectionProps> = (props: TagsSectionProps) => {\r\n    const { singleQueryType, tags, tagObjects } = props;\r\n    return (\r\n        <StyledTagsSection>\r\n            { tags && tags.map((tag, index) => {\r\n                return (\r\n                    <TagButton\r\n                        key={index}\r\n                        label={tag}\r\n                        singleQueryType={singleQueryType}\r\n                    />);\r\n            }) }\r\n            { !tags && tagObjects && tagObjects.map((tagObject, index) => {\r\n                return (\r\n                    <TagButton\r\n                        key={index}\r\n                        label={tagObject.tagName}\r\n                        singleQueryType={singleQueryType}\r\n                        tagId={tagObject.tagId}\r\n                    />);\r\n            }) }\r\n        </StyledTagsSection>\r\n    );\r\n};\r\n\r\nexport default TagsSection;\r\n","import {\r\n    ADD_REVIEW, CHANGE_RATING,\r\n    DELETE_REVIEW,\r\n    EDIT_REVIEW,\r\n    LOAD_REVIEWS_FROM_DB,\r\n} from '../constants/reviewRatingConstants';\r\n\r\nexport interface ReviewObjectType {\r\n    text: string,\r\n    userId: string,\r\n    userName: string,\r\n    datePosted: string,\r\n    rating?: number | undefined\r\n}\r\n\r\nexport const loadAllReviewsAction = (reviewsArray: any[]) => {\r\n    return {\r\n        type: LOAD_REVIEWS_FROM_DB,\r\n        reviewsArray: reviewsArray\r\n    };\r\n};\r\n\r\nexport const addReviewAction = (reviewObject: ReviewObjectType) => {\r\n    return {\r\n        type: ADD_REVIEW,\r\n        text: reviewObject.text,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        datePosted: reviewObject.datePosted\r\n    };\r\n};\r\n\r\nexport const deleteReviewAction = (userId: string) => {\r\n    return {\r\n        type: DELETE_REVIEW,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const editReviewAction = (reviewObject: ReviewObjectType) => {\r\n    return {\r\n        type: EDIT_REVIEW,\r\n        text: reviewObject.text,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        datePosted: reviewObject.datePosted\r\n    };\r\n};\r\n\r\n\r\nexport const changeRatingAction = (reviewObject: { userId: string, userName: string, rating: number | undefined }) => {\r\n    return {\r\n        type: CHANGE_RATING,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        rating: reviewObject.rating\r\n    };\r\n};","import React, {useEffect, useState} from 'react';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {Box, IconButton} from '@material-ui/core';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\r\nimport styled from 'styled-components';\r\nimport {connect} from 'react-redux';\r\nimport {changeRatingAction} from '../../actions/reviewRatingActions';\r\nimport axios from 'axios';\r\nimport {MediaType} from '../../constants/dataTypes';\r\n\r\ninterface StarRaterProps {\r\n    readonly: boolean\r\n\r\n    // required if readonly === true\r\n    readOnlyRating?: number;\r\n    hideReadOnlyLabel?: boolean;\r\n\r\n    // required if readonly === false\r\n    userRating?: number;\r\n    userId?: string;\r\n    userName?: string;\r\n    userHasReviewText?: boolean;\r\n    mediaId?: string;\r\n    mediaType?: MediaType;\r\n}\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n    padding: 0px !important;\r\n`;\r\n\r\nconst VerticallyCenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst host = window.location.protocol + '//'+ window.location.host;\r\n\r\nconst getIcon = (index: number, rating: number | undefined) => {\r\n    const twoDecimalString = rating?.toFixed(2) || '0.00';\r\n    const [wholeNumberString, decimalString] = twoDecimalString.split('.');\r\n    const wholeNumber = parseInt(wholeNumberString);\r\n    const decimalTimes100 = parseInt(decimalString);\r\n    if ((index + 1) <= wholeNumber) {\r\n        return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n    } else if (index === wholeNumber) {\r\n        const closestFifty = Math.round(decimalTimes100 / 50)*50;\r\n        if (closestFifty === 0) {\r\n            return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        } else if (closestFifty === 50) {\r\n            return <StarHalfIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        } else if (closestFifty === 100) {\r\n            return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        }\r\n    } else {\r\n        return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n    }\r\n};\r\n\r\nconst changeRating = (props: any, userId: string, userName: string, rating: number | undefined) => {\r\n    props.changeRatingAction({ userId, userName, rating });\r\n    if (!rating && !props.userHasReviewText) {\r\n        axios.delete(host + `/reviewRatings`\r\n            + `/${props.mediaType}/${props.mediaId}/${userId}`)\r\n            .then((res: any) => {\r\n                console.log('Successfully deleted the reviewRating', res);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            });\r\n    } else {\r\n        axios.put(host + '/reviewRatings/rating',\r\n            {\r\n                mediaId: props.mediaId,\r\n                mediaType: props.mediaType,\r\n                userId: userId,\r\n                rating: rating\r\n            })\r\n            .then((res: any) => {\r\n                console.log('Successfully put the rating: ', res);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n};\r\n\r\nconst StarRater: React.FC<StarRaterProps> = (props: StarRaterProps) => {\r\n    const [ratedStar, setStar] = useState(0);\r\n    const { readonly, readOnlyRating, hideReadOnlyLabel, userRating, userId, userName } = props;\r\n    let twoDecimalRatingString = ''; // TODO set up tooltip functionality\r\n    if (readonly && readOnlyRating) {\r\n        twoDecimalRatingString = readOnlyRating.toFixed(2);\r\n    } else if (userRating) {\r\n        twoDecimalRatingString = userRating.toFixed(2);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!ratedStar) {\r\n            setStar(userRating || 0);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userRating]);\r\n\r\n    function clickStar(starIndex: number) {\r\n        const ratingToSet = ratedStar === starIndex ? starIndex - 1 : starIndex;\r\n        setStar(ratingToSet);\r\n        userId && userName && changeRating(props, userId, userName, ratingToSet);\r\n        // TODO use the api to set the rating (add the media type and media id as props)\r\n    }\r\n\r\n    return (\r\n        <Box display='flex'>\r\n            {[...Array(5)].map((star, index) => {\r\n                return (\r\n                    <VerticallyCenteredDiv key={index}>\r\n                        {readonly ?\r\n                            <>\r\n                                {\r\n                                    getIcon(index, readOnlyRating)\r\n                                }\r\n                            </>\r\n                            :\r\n                            <StyledIconButton size={'small'} onClick={() => clickStar(index + 1)}>\r\n                                {index < ratedStar ?\r\n                                    <StarIcon style={{fill: '#FFCC00'}} />\r\n                                    :\r\n                                    <StarBorderIcon style={{fill: '#FFCC00'}} />\r\n                                }\r\n                            </StyledIconButton>\r\n                        }\r\n                    </VerticallyCenteredDiv>\r\n                );\r\n            })}\r\n            <Box ml={1}>{readonly && !hideReadOnlyLabel && twoDecimalRatingString}</Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default connect(null, { changeRatingAction })(StarRater);\r\n","import {\r\n    CHANGE_HOME_PAGE_FILTER\r\n} from '../constants/homePageFilterConstants';\r\n\r\nexport const changeHomePageFilter = (filterName: string) => {\r\n    return {\r\n        type: CHANGE_HOME_PAGE_FILTER,\r\n        filterName: filterName\r\n    };\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/MockCover.4d59545d.png\";","module.exports = __webpack_public_path__ + \"static/media/MockBookCover.db0a0480.jpg\";","import React, {useEffect, useState} from 'react';\r\nimport {Modal, useMediaQuery, Typography, Paper, IconButton} from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {CardData, MediaType, SingleQueryType} from '../../constants/dataTypes';\r\nimport Interweave from 'interweave';\r\nimport TagsSection from '../TagsSection';\r\nimport axios from 'axios';\r\nimport StarRater from '../StarRater';\r\n\r\ninterface MediaModalProps {\r\n    isOpen: boolean,\r\n    modalData: CardData,\r\n    setModalOpen: (open: boolean) => void\r\n}\r\n\r\nconst CenteredBody = styled.div<{ isSmall: boolean, isShort: boolean }>`\r\n    width: ${(props) => props.isSmall || props.isShort ? '100vw' : '500px'};\r\n    height: ${(props) => props.isSmall || props.isShort ? '100vh' : '500px'};\r\n    position: absolute;\r\n    left: 50% !important;\r\n    top: 50% !important;\r\n    transform: translate(-50%, -50%);\r\n    background-color: white;\r\n    position: relative;\r\n`;\r\n\r\nconst ModalHeader = styled.div`\r\n    background-color: ${({ theme }) => theme.palette.primary.main};\r\n    height: 50px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n`;\r\n\r\nconst ModalContent = styled.div<{ isSmall: boolean, isShort: boolean }>`\r\n    height: ${(props) => props.isSmall || props.isShort ? '100%' : '450px'};\r\n    overflow: auto;\r\n`;\r\n\r\nconst TopContainer = styled.div<{ isShort: boolean }>`\r\n    max-height: ${(props) => props.isShort ? '80%' : '350px'};\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 10px;\r\n    overflow: auto;\r\n`;\r\n\r\nconst MediaImage = styled.img<{ isShort: boolean }>`\r\n    max-width: ${(props) => props.isShort ? '30%' : '50%'};\r\n`;\r\n\r\nconst TopLeftContainer = styled.div<{ isShort: boolean }>`\r\n    max-height: ${(props) => props.isShort ? '80%' : '350px'};\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right: 10px;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst MediaTags = styled.div`\r\n    overflow: auto;\r\n`;\r\n\r\nconst MediaBlurb = styled.div<{ isSmall: boolean, isShort: boolean }>`\r\n    margin: 10px;\r\n    margin-bottom: ${(props) => props.isSmall || props.isShort ? '100px' : '35px'};\r\n`;\r\n\r\nconst ModalFooter = styled(Paper)`\r\n    height: 35px;\r\n    width: 100%;\r\n    position:absolute;\r\n    bottom:0;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    margin-right: 10px;\r\n    background: none;\r\n    border: none;\r\n    color: ${({ theme }) => theme.palette.grey[600]};\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n\r\n    &:hover {\r\n        color: ${({ theme }) => theme.palette.grey[900]};\r\n    }\r\n`;\r\n\r\nconst StyledCloseIcon = styled(CloseIcon)`\r\n    color: white;\r\n    &:hover {\r\n        color: grey;\r\n    }\r\n`;\r\n\r\nconst MediaModal: React.FC<MediaModalProps> = (props: MediaModalProps) => {\r\n    const { isOpen, modalData, setModalOpen } = props;\r\n    const history = useHistory();\r\n\r\n    const [storyTags, setStoryTags] = useState([]);\r\n    const [averageRating, setAverageRating] = useState(0);\r\n\r\n    const isSmall = useMediaQuery('(max-width:450px)');\r\n    const isShort = useMediaQuery('(max-height:500px)');\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            const { id, mediaType } = modalData;\r\n            const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\r\n            axios.get(`/${mediaRouteType}/tags/${id}`)\r\n                .then((mediaRes: any) => {\r\n                    const mediaData = mediaRes.data;\r\n                    setStoryTags(mediaData.nextStoryTags);\r\n                })\r\n                .catch((error: any) => {\r\n                    console.log('Error getting media', error);\r\n                });\r\n        }\r\n    }, [modalData, isOpen]);\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            const { id, mediaType } = modalData;\r\n            axios.get(`/reviewRatings/averageRating/${mediaType}/${id}`)\r\n                .then((mediaRes: any) => {\r\n                    const averageRatingData = mediaRes.data;\r\n                    setAverageRating(averageRatingData.average);\r\n                })\r\n                .catch((error: any) => {\r\n                    console.log('Error getting media', error);\r\n                });\r\n        }\r\n    }, [modalData, isOpen]);\r\n\r\n    function goToPage() {\r\n        const { id, mediaType } = modalData;\r\n        history.push(`/${mediaType}/${id}`);\r\n        setModalOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Modal open={isOpen} onClose={() => setModalOpen(false)}>\r\n            <CenteredBody isSmall={isSmall} isShort={isShort}>\r\n                <ModalHeader>\r\n                    <IconButton onClick={() => setModalOpen(false)}>\r\n                        <StyledCloseIcon />\r\n                    </IconButton>\r\n                </ModalHeader>\r\n                <ModalContent isSmall={isSmall} isShort={isShort}>\r\n                    <TopContainer isShort={isShort}>\r\n                        <MediaImage src={modalData?.image} isShort={isShort} />\r\n                        <TopLeftContainer  isShort={isShort}>\r\n                            <Typography variant='h3' gutterBottom>{modalData?.title} {modalData?.mediaType === MediaType.movie ? '(Movie)' : '(Book)'}</Typography>\r\n                            <Typography variant='subtitle2' >Avg members rating: {!averageRating && 'No rating'}</Typography>\r\n                            {averageRating > 0 && <StarRater readOnlyRating={averageRating} readonly />}\r\n                            <MediaTags>\r\n                                Genres:\r\n                                <TagsSection\r\n                                    tags={modalData?.genres || []}\r\n                                    singleQueryType={SingleQueryType.genre}\r\n                                />\r\n                                {storyTags.length > 0 && <>\r\n                                    Tags:\r\n                                    <TagsSection\r\n                                        tagObjects={storyTags || []}\r\n                                        singleQueryType={SingleQueryType.tag}\r\n                                    />\r\n                                </>}\r\n                            </MediaTags>\r\n                        </TopLeftContainer>\r\n                    </TopContainer>\r\n                    <MediaBlurb isSmall={isSmall} isShort={isShort}>\r\n                        <Interweave content={modalData?.blurb || ''} />\r\n                    </MediaBlurb>\r\n                </ModalContent>\r\n                <ModalFooter elevation={3}>\r\n                    <StyledButton\r\n                        endIcon={<ArrowForwardIcon />}\r\n                        onClick={() => goToPage()}\r\n                    >\r\n                        Go to page\r\n                    </StyledButton>\r\n                </ModalFooter>\r\n            </CenteredBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default MediaModal;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Card } from '@material-ui/core';\r\nimport { CardData } from '../../constants/dataTypes';\r\nimport MediaModal from '../MediaModal';\r\n\r\nconst CardContainer = styled(Card)`\r\n    height: 250px;\r\n    width: 175px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: space-between;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst MediaImage = styled.img`\r\n    height: 100%;\r\n    max-width: 100%;\r\n    cursor: pointer;\r\n    &:hover {\r\n        opacity: 50%;\r\n    }\r\n`;\r\n\r\ninterface MediaCardProps {\r\n    cardData: CardData\r\n}\r\n\r\nconst MediaCard: React.FC<MediaCardProps> = (props: MediaCardProps) => {\r\n    const { image } = props.cardData;\r\n    const [isMediaModalOpen, setMediaModalOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <MediaModal isOpen={isMediaModalOpen} setModalOpen={() => setMediaModalOpen(false)} modalData={props.cardData} />\r\n            <CardContainer elevation={1}>\r\n                <MediaImage src={image} onClick={() => setMediaModalOpen(true)} />\r\n            </CardContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MediaCard;\r\n","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    Tab,\r\n    Tabs,\r\n    Hidden\r\n} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport { changeHomePageFilter } from '../../actions/homePageFilterActions';\r\nimport {\r\n    ALL,\r\n    MOVIES,\r\n    BOOKS\r\n} from '../../constants/homePageFilterConstants';\r\nimport {changeSingleSearchPageFilter} from '../../actions/singleSearchPageFilterActions';\r\n\r\nconst DeskTopFilters = styled(Tabs)`\r\n`;\r\n\r\nconst DesktopFilter = (props: any) => {\r\n    const { singleSearchPageFilter, isSearchPage } = props;\r\n    const [storyType, setStoryType] = React.useState<string>('all');\r\n    const handleChange = (event: React.ChangeEvent<{}>, newType: string) => {\r\n        setStoryType(newType);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isSearchPage && singleSearchPageFilter) {\r\n            setStoryType(singleSearchPageFilter);\r\n        }\r\n    }, [singleSearchPageFilter]);\r\n\r\n    useEffect(() => {\r\n        switch (storyType) {\r\n            case 'all':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(ALL) : props.changeHomePageFilter(ALL);\r\n                break;\r\n            case 'movies':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(MOVIES) : props.changeHomePageFilter(MOVIES);\r\n                break;\r\n            case 'books':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(BOOKS) : props.changeHomePageFilter(BOOKS);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [storyType]);\r\n\r\n    return (\r\n        <Hidden smDown>\r\n            <DeskTopFilters\r\n                value={storyType}\r\n                onChange={handleChange}\r\n                aria-label='home-page-filter'\r\n                centered\r\n            >\r\n                <Tab\r\n                    component='a'\r\n                    label='All'\r\n                    value={'all'}\r\n                />\r\n                <Tab\r\n                    component='a'\r\n                    label='Movies'\r\n                    value={'movies'}\r\n                />\r\n                <Tab\r\n                    component='a'\r\n                    label='Books'\r\n                    value={'books'}\r\n                />\r\n            </DeskTopFilters>\r\n        </Hidden>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        singleSearchPageFilter: state.singleSearchPageFilterReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { changeHomePageFilter, changeSingleSearchPageFilter })(DesktopFilter);\r\n","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    Hidden,\r\n    BottomNavigation,\r\n    BottomNavigationAction\r\n} from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport {connect} from 'react-redux';\r\nimport { changeHomePageFilter } from '../../actions/homePageFilterActions';\r\nimport { changeSingleSearchPageFilter } from '../../actions/singleSearchPageFilterActions';\r\nimport {\r\n    ALL,\r\n    MOVIES,\r\n    BOOKS\r\n} from '../../constants/homePageFilterConstants';\r\n\r\nconst MobileFilters = styled(BottomNavigation)`\r\n    width: 100%;\r\n    position: fixed;\r\n    bottom: 0;\r\n`;\r\n\r\nconst MobileFilter = (props: any) => {\r\n    const { singleSearchPageFilter, isSearchPage } = props;\r\n    const [storyType, setStoryType] = useState<string>(ALL);\r\n    const handleChange = (event: React.ChangeEvent<{}>, newType: string) => {\r\n        setStoryType(newType);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isSearchPage && singleSearchPageFilter) {\r\n            setStoryType(singleSearchPageFilter);\r\n        }\r\n    }, [singleSearchPageFilter]);\r\n\r\n    useEffect(() => {\r\n        switch (storyType) {\r\n            case 'all':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(ALL) : props.changeHomePageFilter(ALL);\r\n                break;\r\n            case 'movies':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(MOVIES) : props.changeHomePageFilter(MOVIES);\r\n                break;\r\n            case 'books':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(BOOKS) : props.changeHomePageFilter(BOOKS);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [storyType]);\r\n\r\n    return (\r\n        <Hidden mdUp>\r\n            <MobileFilters\r\n                value={storyType}\r\n                onChange={handleChange}\r\n                showLabels\r\n                aria-label='home-page-filter'\r\n            >\r\n                <BottomNavigationAction\r\n                    label='All'\r\n                    icon={<HomeIcon />}\r\n                    value={'all'}\r\n                />\r\n                <BottomNavigationAction\r\n                    label='Movies'\r\n                    icon={<MovieIcon />}\r\n                    value={'movies'}\r\n                />\r\n                <BottomNavigationAction\r\n                    label='Books'\r\n                    icon={<BookIcon />}\r\n                    value={'books'}\r\n                />\r\n            </MobileFilters>\r\n        </Hidden>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        singleSearchPageFilter: state.singleSearchPageFilterReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { changeHomePageFilter, changeSingleSearchPageFilter })(MobileFilter);\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport MediaCard from '../MediaCard';\r\nimport styled from 'styled-components';\r\nimport MockMovieCover from '../../assets/MockCover.png';\r\nimport MockBookCover from '../../assets/MockBookCover.jpg';\r\nimport { CardData, MediaType } from '../../constants/dataTypes';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    ALL,\r\n    MOVIES,\r\n    BOOKS\r\n} from '../../constants/homePageFilterConstants';\r\nconst StyledCarousel = styled(Carousel)`\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst PopularMultiCardCarousel: React.FC = (props: any) => { //should take popular/recommendation data as parameter\r\n    const [movieData, setMovieData] = useState([{    title: '',\r\n        id: '',\r\n        mediaType: MediaType.start,\r\n        image: MockMovieCover,\r\n        people: '',\r\n        genres: [],\r\n        nextStoryTags: [],\r\n        blurb: '',\r\n        avgRating: 0}]);\r\n    const [bookData, setBookData] = useState([{    title: '',\r\n        id: '',\r\n        mediaType: MediaType.start,\r\n        image: MockBookCover,\r\n        people: '',\r\n        genres: [],\r\n        nextStoryTags: [],\r\n        blurb: '',\r\n        avgRating: 0}]);\r\n    let mountedRef = useRef(true);\r\n    // let mountedRef2 = useRef(true);\r\n    useEffect(() => {\r\n        axios.get(`/thirdPartyMovieApi/tmdbMovies/popularMovies`)\r\n            .then((response: any) => {\r\n                const data = response.data;\r\n                if (!mountedRef.current) return null;\r\n                setMovieData(data);\r\n            })\r\n            .catch((error: any) => {\r\n                console.log(error);\r\n            });\r\n        axios.get(`/thirdPartyBookApi/googleBooks/popularBooks`)\r\n            .then((response: any) => {\r\n                const data = response.data;\r\n                if (!mountedRef.current) return null;\r\n                setBookData(data);\r\n            })\r\n            .catch((error: any) => {\r\n                console.log(error);\r\n            });\r\n        if(bookData.length > 1 && movieData.length>1){\r\n            return () => {\r\n                mountedRef.current = false;\r\n            };\r\n        }\r\n    }, []);\r\n    const renderCards = (filter: any) => {\r\n        switch (filter) {\r\n            case ALL:\r\n                return [...bookData, ...movieData].map((cardData:CardData,index)  => {\r\n                    return (<MediaCard key={index} cardData={cardData} />);});\r\n            case MOVIES:\r\n                return movieData.map((cardData:CardData, index) => {\r\n                    return (<MediaCard key={index} cardData={cardData} />);});\r\n            case BOOKS:\r\n                return bookData.map((cardData:CardData, index) => {\r\n                    return (<MediaCard key={index} cardData={cardData} />);});\r\n            default:\r\n                return [...bookData, ...movieData].map((cardData:CardData,index) => {\r\n                    return (<MediaCard key={index} cardData={cardData} />);});\r\n        }\r\n    };\r\n    return (\r\n        <StyledCarousel\r\n            additionalTransfrom={0}\r\n            arrows\r\n            autoPlaySpeed={3000}\r\n            draggable\r\n            infinite\r\n            keyBoardControl\r\n            minimumTouchDrag={80}\r\n            slidesToSlide={1}\r\n            swipeable\r\n            centerMode={true}\r\n            removeArrowOnDeviceType={['xxs', 'xs', 'sm']}\r\n            responsive={{\r\n                xl: {\r\n                    breakpoint: {\r\n                        max: 3000,\r\n                        min: 1920\r\n                    },\r\n                    items: 6,\r\n                    partialVisibilityGutter: 40\r\n                },\r\n                lg: {\r\n                    breakpoint: {\r\n                        max: 1920,\r\n                        min: 1280\r\n                    },\r\n                    items: 5,\r\n                    partialVisibilityGutter: 30\r\n                },\r\n                md: {\r\n                    breakpoint: {\r\n                        max: 1280,\r\n                        min: 1100\r\n                    },\r\n                    items: 4,\r\n                    partialVisibilityGutter: 0\r\n                },\r\n                xmd: {\r\n                    breakpoint: {\r\n                        max: 1100,\r\n                        min: 900\r\n                    },\r\n                    items: 3,\r\n                    partialVisibilityGutter: 0\r\n                },\r\n                sm: {\r\n                    breakpoint: {\r\n                        max: 900,\r\n                        min: 600\r\n                    },\r\n                    items: 2,\r\n                    partialVisibilityGutter: 0\r\n                },\r\n                xs: {\r\n                    breakpoint: {\r\n                        max: 600,\r\n                        min: 400\r\n                    },\r\n                    items: 1,\r\n                    partialVisibilityGutter: 0\r\n                },\r\n                xxs: {\r\n                    breakpoint: {\r\n                        max: 400,\r\n                        min: 0\r\n                    },\r\n                    items: 0.5,\r\n                    partialVisibilityGutter: 100\r\n                }\r\n            }}>\r\n            {\r\n                renderCards(props.homePageFilterReducer)\r\n            }\r\n\r\n        </StyledCarousel>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        homePageFilterReducer: state.homePageFilterReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PopularMultiCardCarousel);\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport MediaCard from '../MediaCard';\r\nimport styled from 'styled-components';\r\nimport MockMovieCover from '../../assets/MockCover.png';\r\nimport MockBookCover from '../../assets/MockBookCover.jpg';\r\nimport { CardData, MediaType } from '../../constants/dataTypes';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    ALL,\r\n    MOVIES,\r\n    BOOKS\r\n} from '../../constants/homePageFilterConstants';\r\nconst StyledCarousel = styled(Carousel)`\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst RecomendationMultiCardCarousel: React.FC = (props: any) => { //should take popular/recommendation data as parameter\r\n    const [movieData, setMovieData] = useState([{    title: '',\r\n        id: '',\r\n        mediaType: MediaType.start,\r\n        image: MockMovieCover,\r\n        people: '',\r\n        genres: [],\r\n        nextStoryTags: [],\r\n        blurb: '',\r\n        avgRating: 0}]);\r\n    const [bookData, setBookData] = useState([{    title: '',\r\n        id: '',\r\n        mediaType: MediaType.start,\r\n        image: MockBookCover,\r\n        people: '',\r\n        genres: [],\r\n        nextStoryTags: [],\r\n        blurb: '',\r\n        avgRating: 0}]);\r\n    let mountedRef = useRef(true);\r\n    useEffect(() => {\r\n        axios.get(`/thirdPartyMovieApi/tmdbMovies/movieRecommendations`)\r\n            .then((response: any) => {\r\n                const data = response.data;\r\n                if (!mountedRef.current) return null;\r\n                setMovieData(data);\r\n            })\r\n            .catch((error: any) => {\r\n                console.log(error);\r\n            });\r\n        axios.get(`/thirdPartyBookApi/googleBooks/bookRecommendations`)\r\n            .then((response: any) => {\r\n                const data = response.data;\r\n                if (!mountedRef.current) return null;\r\n                setBookData(data);\r\n            })\r\n            .catch((error: any) => {\r\n                console.log(error);\r\n            });\r\n        if(bookData.length > 1 && movieData.length>1){\r\n            return () => {\r\n                mountedRef.current = false;\r\n            };\r\n        }\r\n    }, []);\r\n    const renderCards = (filter: any) => {\r\n        switch (filter) {\r\n            case ALL:\r\n                return [...bookData, ...movieData].map((cardData:CardData,index)  => {\r\n                    return (<MediaCard key={index} cardData={cardData} />);});\r\n            case MOVIES:\r\n                return movieData.map((cardData:CardData, index) => {\r\n                    return (<MediaCard key={index} cardData={cardData} />);});\r\n            case BOOKS:\r\n                return bookData.map((cardData:CardData, index) => {\r\n                    return (<MediaCard key={index} cardData={cardData} />);});\r\n            default:\r\n                return [...bookData, ...movieData].map((cardData:CardData,index) => {\r\n                    return (<MediaCard key={index} cardData={cardData} />);});\r\n        }\r\n    };\r\n    return (\r\n        <StyledCarousel\r\n            additionalTransfrom={0}\r\n            arrows\r\n            autoPlaySpeed={3000}\r\n            draggable\r\n            infinite\r\n            keyBoardControl\r\n            minimumTouchDrag={80}\r\n            slidesToSlide={1}\r\n            swipeable\r\n            centerMode={true}\r\n            removeArrowOnDeviceType={['xxs', 'xs', 'sm']}\r\n            responsive={{\r\n                xl: {\r\n                    breakpoint: {\r\n                        max: 3000,\r\n                        min: 1920\r\n                    },\r\n                    items: 6,\r\n                    partialVisibilityGutter: 40\r\n                },\r\n                lg: {\r\n                    breakpoint: {\r\n                        max: 1920,\r\n                        min: 1280\r\n                    },\r\n                    items: 5,\r\n                    partialVisibilityGutter: 30\r\n                },\r\n                md: {\r\n                    breakpoint: {\r\n                        max: 1280,\r\n                        min: 1100\r\n                    },\r\n                    items: 4,\r\n                    partialVisibilityGutter: 0\r\n                },\r\n                xmd: {\r\n                    breakpoint: {\r\n                        max: 1100,\r\n                        min: 900\r\n                    },\r\n                    items: 3,\r\n                    partialVisibilityGutter: 0\r\n                },\r\n                sm: {\r\n                    breakpoint: {\r\n                        max: 900,\r\n                        min: 600\r\n                    },\r\n                    items: 2,\r\n                    partialVisibilityGutter: 0\r\n                },\r\n                xs: {\r\n                    breakpoint: {\r\n                        max: 600,\r\n                        min: 400\r\n                    },\r\n                    items: 1,\r\n                    partialVisibilityGutter: 0\r\n                },\r\n                xxs: {\r\n                    breakpoint: {\r\n                        max: 400,\r\n                        min: 0\r\n                    },\r\n                    items: 0.5,\r\n                    partialVisibilityGutter: 100\r\n                }\r\n            }}>\r\n            {\r\n                renderCards(props.homePageFilterReducer)\r\n            }\r\n\r\n        </StyledCarousel>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        homePageFilterReducer: state.homePageFilterReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RecomendationMultiCardCarousel);\r\n","import React from 'react';\r\nimport Container from '../Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PopularMultiCardCarousel from '../../components/PopularMulitCardCarousel';\r\nimport RecomendationMultiCardCarousel from '../../components/RecommendationMulitCardCarousel';\r\nimport HomePageDesktopFilter from '../../components/DesktopFilter';\r\nimport HomePageMobileFilter from '../../components/MobileFilter';\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <Container maxWidth='lg'>\r\n        <HomePageDesktopFilter/>\r\n        <Typography variant='h1'>Recommendation</Typography>\r\n          <RecomendationMultiCardCarousel/>\r\n          <br/>\r\n        <Typography variant='h1'>Popular</Typography>\r\n          <PopularMultiCardCarousel/>\r\n        <HomePageMobileFilter/>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}