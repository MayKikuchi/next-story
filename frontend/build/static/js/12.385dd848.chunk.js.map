{"version":3,"sources":["containers/Container/index.tsx","components/SignUp/index.tsx","containers/SignUp/index.tsx"],"names":["StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","useState","signUpError","setSignUpError","errorMsg","setErrorMsg","userName","setUserName","email","setEmail","password","setPassword","confirmPass","setConfirmPass","history","useHistory","host","window","location","protocol","postNewUser","newUserObject","isGoogle","axios","post","then","profile","userId","data","username","name","time","setSeconds","getSeconds","authObject","expiry","isGoogleLogin","sessionStorage","setItem","JSON","stringify","push","catch","error","response","message","console","log","component","CssBaseline","className","Avatar","noValidate","onSubmit","event","preventDefault","textPass","Grid","container","item","xs","TextField","autoComplete","required","fullWidth","id","label","onChange","target","value","autoFocus","type","style","Button","clientId","buttonText","onSuccess","googleName","profileObj","googleEmail","onFailure","cookiePolicy","justify","Box","mt","SignUpForm"],"mappings":"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","file":"static/js/12.385dd848.chunk.js","sourcesContent":["import React, {ReactNode} from 'react';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled(Container)`\n    margin-top: 85px;\n`;\n\ninterface MarginContainerProps {\n    maxWidth: 'lg'\n        | 'md'\n        | 'sm'\n        | 'xl'\n        | 'xs'\n        | false;\n    children: ReactNode;\n}\n\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\n    return (\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\n    );\n};\n\nexport default MarginContainer;\n","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport FaceIcon from '@material-ui/icons/Face';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\n\nfunction Copyright() {\n    return (\n        <Typography variant='body2' color='textSecondary' align='center'>\n            {'Copyright Â© '}\n            <Link color='inherit' href='https://material-ui.com/'>\n                NextStory\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}));\n\nexport default function SignUp() {\n    const classes = useStyles();\n    const [signUpError, setSignUpError] = useState(false);\n    const [errorMsg, setErrorMsg] = useState('');\n\n    const [userName, setUserName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPass, setConfirmPass] = useState('');\n\n    const history = useHistory();\n\n    const host = window.location.protocol + '//'+ window.location.host;\n\n    const postNewUser = (newUserObject: any, isGoogle: boolean) => {\n        axios.post(host + `/users/signUp`, newUserObject)\n            .then((profile: any) => {\n                const userId = profile.data.userId;\n                const username = profile.data.name;\n                const time = new Date();\n                time.setSeconds(time.getSeconds() + 3599); // same as google auth timeout\n                const authObject = {\n                    expiry: time,\n                    username: username,\n                    userId: userId,\n                    isGoogleLogin: isGoogle\n                };\n                sessionStorage.setItem('NS-session-data', JSON.stringify(authObject));\n                history.push(`/`);\n            })\n            .catch((error: any) => {\n                setSignUpError(true);\n                const errorMsg = error.response.data.message;\n                setErrorMsg(errorMsg);\n                console.log('Error signing up', error);\n            });\n    };\n\n    const handleSignUp = (event: any) => {\n        event.preventDefault();\n        if (!userName || ! email || !password || !confirmPass) {\n            setSignUpError(true);\n            setErrorMsg('All fields must be filled in');\n            return;\n        }\n        if (password !== confirmPass) {\n            setSignUpError(true);\n            setErrorMsg('Passwords do not match');\n            return;\n        }\n        setSignUpError(false);\n        postNewUser({\n            userName: userName,\n            email: email,\n            textPass: password\n        }, false);\n    };\n\n    const handleNameChange = (event: any) => {\n        setUserName(event.target.value);\n    };\n\n    const handleEmailChange = (event: any) => {\n        setEmail(event.target.value);\n        setSignUpError(false);\n        setErrorMsg('');\n    };\n\n    const handlePassChange = (event: any) => {\n        setPassword(event.target.value);\n    };\n\n    const handleConfirmPassChange = (event: any) => {\n        setConfirmPass(event.target.value);\n    };\n\n    const onSignUpSuccess = (response: any) => {\n        console.log('response: ', response);\n        setSignUpError(false);\n        const googleName = response.profileObj.name;\n        const googleEmail = response.profileObj.email;\n        if (googleEmail) {\n            const userObj = {\n                userName: googleName,\n                email: googleEmail\n            };\n            postNewUser(userObj, true);\n        }\n    };\n\n    const onSignUpFailure = (response: any) => {\n        console.log('onFailure');\n        console.log('response: ', response);\n        setSignUpError(true);\n    };\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <FaceIcon />\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                    Sign up\n                </Typography>\n                <form\n                    className={classes.form}\n                    noValidate\n                    onSubmit={handleSignUp}\n                >\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete='name'\n                                name='userName'\n                                variant='outlined'\n                                required\n                                fullWidth\n                                id='userName'\n                                label='User Name'\n                                onChange={handleNameChange}\n                                autoFocus\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                id='email'\n                                label='Email Address'\n                                name='email'\n                                autoComplete='email'\n                                onChange={handleEmailChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                name='password'\n                                label='Password'\n                                type='password'\n                                id='password'\n                                autoComplete='current-password'\n                                onChange={handlePassChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                name='confirmPassword'\n                                label='Confirm Password'\n                                type='password'\n                                id='confirmPassword'\n                                autoComplete='confirm-password'\n                                onChange={handleConfirmPassChange}\n                            />\n                        </Grid>\n                        {signUpError &&\n                            <Grid item xs={12}>\n                                <div style={{ 'color': 'red' }}>\n                                    {errorMsg || 'There was an error signing up'}\n                                </div>\n                            </Grid>\n                        }\n                    </Grid>\n                    <Button\n                        type='submit'\n                        fullWidth\n                        variant='contained'\n                        color='primary'\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                        <span style={{ 'marginRight': '5px' }}>\n                            Or sign up with Google\n                        </span>\n                        <GoogleLogin\n                            clientId='279438615331-cvlr0tk0j35i4s9df4m51o9sb5uj8k3s.apps.googleusercontent.com'\n                            buttonText='Sign up'\n                            onSuccess={onSignUpSuccess}\n                            onFailure={onSignUpFailure}\n                            cookiePolicy={'single_host_origin'}\n                        />\n                    <br/>\n                    <br/>\n                    <Grid container justify='flex-end'>\n                        <Grid item>\n                            <Link href='/login' variant='body2'>\n                                Already have an account? Login\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../App.css';\nimport SignUp from '../../components/SignUp';\nimport Container from '../Container';\n\n\nconst SignUpForm: React.FC = () => {\n    return (\n        <Container maxWidth='md'>\n            <SignUp />\n        </Container>\n    );\n};\n\nexport default SignUpForm;\n"],"sourceRoot":""}