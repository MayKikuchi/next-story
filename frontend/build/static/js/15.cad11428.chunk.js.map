{"version":3,"sources":["constants/dataTypes.ts","containers/Container/index.tsx","actions/singleSearchPageFilterActions.ts","components/TagButton/index.tsx","components/TagsSection/index.tsx","actions/reviewRatingActions.ts","components/StarRater/index.tsx","components/AddToUserButton/index.tsx","components/Button/index.tsx","components/CommentEditor/index.tsx","components/CommentBlock/index.tsx","utils/styleHelpers.ts","components/ReviewList/index.tsx","components/FavoritesDropDown/index.tsx","containers/MediaPage/index.tsx"],"names":["MediaType","SingleQueryType","StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","changeSingleSearchPageFilter","filterName","type","CHANGE_SINGLE_SEARCH_PAGE_FILTER","StyledTagButton","button","theme","palette","primary","light","secondary","connect","label","tagId","singleQueryType","history","useHistory","encodedSubject","encodeURIComponent","onClick","queryType","bookPerson","BOOKS","moviePerson","MOVIES","tag","genre","searchBar","ALL","changeQueryFilter","push","StyledTagsSection","div","TagsSection","tags","tagObjects","map","index","key","tagObject","tagName","loadAllReviewsAction","reviewsArray","LOAD_REVIEWS_FROM_DB","addReviewAction","reviewObject","ADD_REVIEW","text","userId","userName","datePosted","deleteReviewAction","DELETE_REVIEW","editReviewAction","EDIT_REVIEW","changeRatingAction","CHANGE_RATING","rating","StyledIconButton","IconButton","VerticallyCenteredDiv","host","window","location","protocol","useState","ratedStar","setStar","readonly","readOnlyRating","hideReadOnlyLabel","userRating","twoDecimalRatingString","clickStar","starIndex","ratingToSet","userHasReviewText","axios","put","mediaId","mediaType","then","res","catch","err","delete","changeRating","toFixed","useEffect","display","Array","star","split","wholeNumberString","decimalString","wholeNumber","parseInt","decimalTimes100","style","fill","fontSize","closestFifty","Math","round","getIcon","size","ml","StyledButton","isAddedToUser","grey","AddToUserButton","addLabel","removeLabel","isAdded","toBackendOnClick","setIsAddedToUser","color","main","Button","CommentEditorAction","TextArea","textarea","editCommentProps","review","currentText","setCurrentText","value","onChange","event","target","textAlign","addCommentProps","now","Date","toString","actionType","Add","undefined","Edit","closeEdit","Review","isCurrentUserComment","TopBar","ExpandableDiv","expanded","ShowMoreButton","ShowLessButton","isEdit","setIsEdit","setExpanded","hasOverflow","setHasOverflow","expandableRef","useRef","currentUserId","date","toDateString","isAuthor","useMemo","isOverflowing","ref","element","current","scrollHeight","clientHeight","scrollWidth","clientWidth","hasDivOverflown","Typography","variant","reviewUserName","deleteReview","Box","mr","StarRater","source","state","ownProps","reviews","reviewRatings","filter","r","otherUserReviews","currentUserReview","forEach","addCommentEditorOpen","setAddCommentEditor","hasAddedReview","stateReviews","setStateReviews","stateOtherUserReviews","setStateOtherUserReviews","dateOrRatingSort","setDateOrRatingSort","sortDirection","setSortDirection","rerenderReviews","slice","sortedOtherReviews","sort","a","b","aDate","bDate","slicedSortedReviews","totalReviews","length","gutterBottom","Select","native","marginBottom","marginRight","dataLength","next","setTimeout","theFetchNum","fetchedReviews","hasMore","loader","scrollThreshold","endMessage","FavoritesDropDown","allOptions","favoriteOptions","favKey","favs","setFavs","React","anchorEl","setAnchorEl","currentTarget","endIcon","Menu","id","keepMounted","open","Boolean","onClose","o","isFav","includes","MenuItem","subject","filteredFavs","f","act","action","response","error","handleClose","whiteSpace","StyledImage","img","ImagePlaceholder","StyledGridItem","Grid","CenteredDiv","StyledFormControl","FormControl","pathname","isForLater","setForLater","isFavorite","setFavorite","watchedOrRead","setWatchedOrRead","title","start","image","people","genres","blurb","publishedDate","avgRating","mediaObject","setMediaObject","reviewsObject","setReviewsObject","booksRead","moviesWatched","watchLater","readLater","favoriteMovies","favoriteBooks","favoriteMoviesDetails","favoriteBooksDetails","booksReadDetails","moviesWatchedDetails","readLaterDetails","watchLaterDetails","favoriteAuthors","favoriteDirectors","favoriteGenres","userLists","setUserLists","storyTags","setStoryTags","unaddedStoryTags","setUnaddedStoryTags","addedStoryTags","setAddedStoryTags","sessionDataString","sessionStorage","getItem","sessionDataObj","JSON","parse","username","numberSubscriptions","isLoading","setIsLoading","mediaRouteType","book","get","mediaRes","mediaData","data","message","nextStoryTags","reviewRatingRes","reviewArray","userRatingReviewArr","average","movie","tagData","storyTagNames","t","unAdded","added","updateMediaInDB","tagsArray","addOrRemoveCall","container","direction","spacing","item","sm","src","addOrRemoveWatchOrRead","addOrRemoveWatchReadLater","addOrRemoveFavorites","fontStyle","join","content","InputLabel","labelId","newAddedTags","filteredDeleteTags","filteredStoryTags","newDeleteTags"],"mappings":"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","file":"static/js/15.cad11428.chunk.js","sourcesContent":["export enum MediaType {\r\n    movie = 'movie',\r\n    book = 'book',\r\n    start = ''\r\n}\r\n\r\nexport enum SingleQueryType {\r\n    bookPerson = 'bookPerson',\r\n    moviePerson = 'moviePerson',\r\n    genre = 'genre',\r\n    tag = 'tag',\r\n    searchBar = 'searchBar'\r\n}\r\n\r\nexport type CardData = {\r\n    title: string,\r\n    id: string,\r\n    mediaType: MediaType,\r\n    image: string, // the url, etc to the image\r\n    genres: string[],\r\n    nextStoryTags: string[],\r\n    people: string,\r\n    blurb: string,\r\n    avgRating: number\r\n}\r\n\r\nexport interface Tag{\r\n  tagId: string;\r\n  tagName: string;\r\n}\r\n","import React from 'react';\r\nimport Container, { ContainerProps } from '@material-ui/core/Container';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledContainer = styled(Container)`\r\n    margin-top: 85px;\r\n    margin-bottom: 85px;\r\n`;\r\n\r\ninterface MarginContainerProps extends ContainerProps {\r\n    maxWidth: 'lg'\r\n        | 'md'\r\n        | 'sm'\r\n        | 'xl'\r\n        | 'xs'\r\n        | false;\r\n}\r\n\r\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\r\n    return (\r\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\r\n    );\r\n};\r\n\r\nexport default MarginContainer;\r\n","import {\r\n    CHANGE_SINGLE_SEARCH_PAGE_FILTER\r\n} from '../constants/singleSearchPageFilterConstants';\r\n\r\nexport const changeSingleSearchPageFilter = (filterName: string) => {\r\n    return {\r\n        type: CHANGE_SINGLE_SEARCH_PAGE_FILTER,\r\n        filterName: filterName\r\n    };\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useHistory} from 'react-router';\r\nimport {SingleQueryType} from '../../constants/dataTypes';\r\nimport {ALL, BOOKS, MOVIES} from '../../constants/homePageFilterConstants';\r\nimport {connect} from 'react-redux';\r\nimport {changeSingleSearchPageFilter} from '../../actions/singleSearchPageFilterActions';\r\n\r\ninterface TagsButtonProps {\r\n    label: string;\r\n    singleQueryType: SingleQueryType;\r\n    tagId?: string; // needed for if the tag button is being used for nextStoryTags\r\n}\r\n\r\nconst StyledTagButton = styled.button`\r\n    border-radius: 7px;\r\n    color: white;\r\n    outline: none;\r\n    border: none;\r\n    margin: 5px;\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.palette.primary.light};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.palette.secondary.light};\r\n    }\r\n    font-size: 16px;\r\n    padding: 3px 5px 3px 5px;\r\n`;\r\n\r\nconst changeQueryFilter = (props: any, queryType: SingleQueryType) => {\r\n    switch (queryType) {\r\n        case SingleQueryType.bookPerson:\r\n            props.changeSingleSearchPageFilter(BOOKS);\r\n            break;\r\n        case SingleQueryType.moviePerson:\r\n            props.changeSingleSearchPageFilter(MOVIES);\r\n            break;\r\n        case SingleQueryType.tag:\r\n        case SingleQueryType.genre:\r\n        case SingleQueryType.searchBar:\r\n        default:\r\n            props.changeSingleSearchPageFilter(ALL);\r\n            break;\r\n    }\r\n};\r\n\r\nconst TagButton: React.FC<TagsButtonProps> = (props: TagsButtonProps) => {\r\n    const { label, tagId, singleQueryType } = props;\r\n    const history = useHistory();\r\n\r\n    const encodedSubject = encodeURIComponent(tagId || label);\r\n    const goToSingleQuery = () => {\r\n        changeQueryFilter(props, singleQueryType);\r\n        history.push(`/searchResult/param?singleQueryType=${singleQueryType}&query=${encodedSubject}`);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {label &&\r\n                <StyledTagButton\r\n                    onClick={goToSingleQuery}\r\n                >\r\n                    {label}\r\n                </StyledTagButton>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, {changeSingleSearchPageFilter})(TagButton);\r\n","import React from 'react';\r\nimport TagButton from '../TagButton';\r\nimport styled from 'styled-components';\r\nimport {SingleQueryType} from '../../constants/dataTypes';\r\n\r\ninterface TagsSectionProps {\r\n    singleQueryType: SingleQueryType;\r\n    tags?: string[],\r\n    tagObjects?: Array<{ tagId: string, tagName: string }>\r\n}\r\n\r\nconst StyledTagsSection = styled.div`\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst TagsSection: React.FC<TagsSectionProps> = (props: TagsSectionProps) => {\r\n    const { singleQueryType, tags, tagObjects } = props;\r\n    return (\r\n        <StyledTagsSection>\r\n            { tags && tags.map((tag, index) => {\r\n                return (\r\n                    <TagButton\r\n                        key={index}\r\n                        label={tag}\r\n                        singleQueryType={singleQueryType}\r\n                    />);\r\n            }) }\r\n            { !tags && tagObjects && tagObjects.map((tagObject, index) => {\r\n                return (\r\n                    <TagButton\r\n                        key={index}\r\n                        label={tagObject.tagName}\r\n                        singleQueryType={singleQueryType}\r\n                        tagId={tagObject.tagId}\r\n                    />);\r\n            }) }\r\n        </StyledTagsSection>\r\n    );\r\n};\r\n\r\nexport default TagsSection;\r\n","import {\r\n    ADD_REVIEW, CHANGE_RATING,\r\n    DELETE_REVIEW,\r\n    EDIT_REVIEW,\r\n    LOAD_REVIEWS_FROM_DB,\r\n} from '../constants/reviewRatingConstants';\r\n\r\nexport interface ReviewObjectType {\r\n    text: string,\r\n    userId: string,\r\n    userName: string,\r\n    datePosted: string,\r\n    rating?: number | undefined\r\n}\r\n\r\nexport const loadAllReviewsAction = (reviewsArray: any[]) => {\r\n    return {\r\n        type: LOAD_REVIEWS_FROM_DB,\r\n        reviewsArray: reviewsArray\r\n    };\r\n};\r\n\r\nexport const addReviewAction = (reviewObject: ReviewObjectType) => {\r\n    return {\r\n        type: ADD_REVIEW,\r\n        text: reviewObject.text,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        datePosted: reviewObject.datePosted\r\n    };\r\n};\r\n\r\nexport const deleteReviewAction = (userId: string) => {\r\n    return {\r\n        type: DELETE_REVIEW,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const editReviewAction = (reviewObject: ReviewObjectType) => {\r\n    return {\r\n        type: EDIT_REVIEW,\r\n        text: reviewObject.text,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        datePosted: reviewObject.datePosted\r\n    };\r\n};\r\n\r\n\r\nexport const changeRatingAction = (reviewObject: { userId: string, userName: string, rating: number | undefined }) => {\r\n    return {\r\n        type: CHANGE_RATING,\r\n        userId: reviewObject.userId,\r\n        userName: reviewObject.userName,\r\n        rating: reviewObject.rating\r\n    };\r\n};","import React, {useEffect, useState} from 'react';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {Box, IconButton} from '@material-ui/core';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\r\nimport styled from 'styled-components';\r\nimport {connect} from 'react-redux';\r\nimport {changeRatingAction} from '../../actions/reviewRatingActions';\r\nimport axios from 'axios';\r\nimport {MediaType} from '../../constants/dataTypes';\r\n\r\ninterface StarRaterProps {\r\n    readonly: boolean\r\n\r\n    // required if readonly === true\r\n    readOnlyRating?: number;\r\n    hideReadOnlyLabel?: boolean;\r\n\r\n    // required if readonly === false\r\n    userRating?: number;\r\n    userId?: string;\r\n    userName?: string;\r\n    userHasReviewText?: boolean;\r\n    mediaId?: string;\r\n    mediaType?: MediaType;\r\n}\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n    padding: 0px !important;\r\n`;\r\n\r\nconst VerticallyCenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst host = window.location.protocol + '//'+ window.location.host;\r\n\r\nconst getIcon = (index: number, rating: number | undefined) => {\r\n    const twoDecimalString = rating?.toFixed(2) || '0.00';\r\n    const [wholeNumberString, decimalString] = twoDecimalString.split('.');\r\n    const wholeNumber = parseInt(wholeNumberString);\r\n    const decimalTimes100 = parseInt(decimalString);\r\n    if ((index + 1) <= wholeNumber) {\r\n        return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n    } else if (index === wholeNumber) {\r\n        const closestFifty = Math.round(decimalTimes100 / 50)*50;\r\n        if (closestFifty === 0) {\r\n            return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        } else if (closestFifty === 50) {\r\n            return <StarHalfIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        } else if (closestFifty === 100) {\r\n            return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n        }\r\n    } else {\r\n        return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\r\n    }\r\n};\r\n\r\n// NOTE: console logs are commented out but kept in code to aid future development & debugging\r\nconst changeRating = (props: any, userId: string, userName: string, rating: number | undefined) => {\r\n    props.changeRatingAction({ userId, userName, rating });\r\n    if (!rating && !props.userHasReviewText) {\r\n        axios.delete(host + `/reviewRatings`\r\n            + `/${props.mediaType}/${props.mediaId}/${userId}`)\r\n            .then((res: any) => {\r\n                // console.log('Successfully deleted the reviewRating', res);\r\n            })\r\n            .catch((err: any) => {\r\n                // console.log(err);\r\n            });\r\n    } else {\r\n        axios.put(host + '/reviewRatings/rating',\r\n            {\r\n                mediaId: props.mediaId,\r\n                mediaType: props.mediaType,\r\n                userId: userId,\r\n                rating: rating\r\n            })\r\n            .then((res: any) => {\r\n                // console.log('Successfully put the rating: ', res);\r\n            })\r\n            .catch((err: any) => {\r\n                // console.log(err);\r\n            });\r\n    }\r\n};\r\n\r\nconst StarRater: React.FC<StarRaterProps> = (props: StarRaterProps) => {\r\n    const [ratedStar, setStar] = useState(0);\r\n    const { readonly, readOnlyRating, hideReadOnlyLabel, userRating, userId, userName } = props;\r\n    let twoDecimalRatingString = ''; // TODO set up tooltip functionality\r\n    if (readonly && readOnlyRating) {\r\n        twoDecimalRatingString = readOnlyRating.toFixed(2);\r\n    } else if (userRating) {\r\n        twoDecimalRatingString = userRating.toFixed(2);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!ratedStar) {\r\n            setStar(userRating || 0);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userRating]);\r\n\r\n    function clickStar(starIndex: number) {\r\n        const ratingToSet = ratedStar === starIndex ? starIndex - 1 : starIndex;\r\n        setStar(ratingToSet);\r\n        userId && userName && changeRating(props, userId, userName, ratingToSet);\r\n        // TODO use the api to set the rating (add the media type and media id as props)\r\n    }\r\n\r\n    return (\r\n        <Box display='flex'>\r\n            {[...Array(5)].map((star, index) => {\r\n                return (\r\n                    <VerticallyCenteredDiv key={index}>\r\n                        {readonly ?\r\n                            <>\r\n                                {\r\n                                    getIcon(index, readOnlyRating)\r\n                                }\r\n                            </>\r\n                            :\r\n                            <StyledIconButton size={'small'} onClick={() => clickStar(index + 1)}>\r\n                                {index < ratedStar ?\r\n                                    <StarIcon style={{fill: '#FFCC00'}} />\r\n                                    :\r\n                                    <StarBorderIcon style={{fill: '#FFCC00'}} />\r\n                                }\r\n                            </StyledIconButton>\r\n                        }\r\n                    </VerticallyCenteredDiv>\r\n                );\r\n            })}\r\n            <Box ml={1}>{readonly && !hideReadOnlyLabel && twoDecimalRatingString}</Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default connect(null, { changeRatingAction })(StarRater);\r\n","import styled from 'styled-components';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nconst StyledButton = styled.button<{ isAddedToUser: boolean }>`\r\n    background-color: ${({ theme, isAddedToUser }) => isAddedToUser ? theme.palette.grey[300] : theme.palette.primary.light};\r\n    border: none;\r\n    outline: none;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    margin: 5px;\r\n    color: ${({ isAddedToUser }) => isAddedToUser ? 'black' : 'white'};\r\n`;\r\n\r\ninterface AddToUserButtonProps {\r\n    addLabel: string;\r\n    removeLabel: string;\r\n    isAdded: boolean;\r\n    toBackendOnClick: any;\r\n}\r\n\r\nconst AddToUserButton: React.FC<AddToUserButtonProps> = (props: AddToUserButtonProps) => {\r\n    const { addLabel, removeLabel,isAdded, toBackendOnClick } = props;\r\n    const [isAddedToUser, setIsAddedToUser] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        setIsAddedToUser(isAdded);\r\n    }, [isAdded]);\r\n\r\n    const toggleAddedToUser = () => {\r\n        if (isAddedToUser) {\r\n            setIsAddedToUser(false);\r\n        } else {\r\n            setIsAddedToUser(true);\r\n        }\r\n        toBackendOnClick();\r\n    };\r\n\r\n    return (\r\n        <StyledButton\r\n            isAddedToUser={isAddedToUser}\r\n            onClick={() => toggleAddedToUser()}\r\n        >\r\n            {isAddedToUser ? removeLabel : addLabel}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nexport default AddToUserButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button<{fontSize?: string, color?: string}>`\r\n    margin-right: 10px;\r\n    background: none;\r\n    border: none;\r\n    color: ${(props) => props.color} || ${({ theme }) => theme.palette.grey[500]};\r\n    cursor: pointer;\r\n    font-size: ${(props) => props.fontSize || '16px'};\r\n\r\n    &:hover {\r\n        color: ${({ theme }) => theme.palette.primary.main};\r\n    }\r\n`;\r\n\r\ninterface ButtonProps {\r\n    onClick: () => void;\r\n    label?: string;\r\n    children?: string;\r\n    fontSize?: string;\r\n    color?: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\r\n    const {onClick, label, children, color} = props;\r\n    return (\r\n        <StyledButton onClick={onClick} color={color}>\r\n            {label || children}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button';\r\nimport {connect} from 'react-redux';\r\nimport {addReviewAction, editReviewAction, ReviewObjectType} from '../../actions/reviewRatingActions';\r\nimport axios from 'axios';\r\n\r\nconst TextArea = styled.textarea`\r\n    height: 100px;\r\n    width: 99%;\r\n    resize: vertical;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n`;\r\n\r\nexport enum CommentEditorAction {\r\n    Add,\r\n    Edit\r\n}\r\n\r\nconst host = window.location.protocol + '//'+ window.location.host;\r\n\r\n// NOTE: console logs are commented out but kept in code to aid future development & debugging\r\nconst CommentEditor: React.FC<any> = (props: any) => {\r\n    const [currentText, setCurrentText] = useState(props.editCommentProps?.review.text || '');\r\n\r\n    const submit = () => {\r\n        const { editCommentProps, addCommentProps } = props;\r\n        const now = new Date().toString();\r\n        switch(props.actionType) {\r\n            case CommentEditorAction.Add:\r\n                props.addReviewAction({\r\n                    text: currentText,\r\n                    userId: addCommentProps.userId,\r\n                    userName: addCommentProps.userName,\r\n                    datePosted: now,\r\n                    rating: undefined\r\n                } as ReviewObjectType);\r\n                axios.put(host + '/reviewRatings/review',\r\n                    {\r\n                        mediaId: addCommentProps.mediaId,\r\n                        mediaType: addCommentProps.mediaType,\r\n                        userName: addCommentProps.userName,\r\n                        userId: addCommentProps.userId,\r\n                        rating: addCommentProps.userRating,\r\n                        datePosted: now,\r\n                        text: currentText\r\n                    })\r\n                    .then((res: any) => {\r\n                        // console.log(res);\r\n                    })\r\n                    .catch((err: any) => {\r\n                        // console.log(err);\r\n                    });\r\n                break;\r\n            case CommentEditorAction.Edit:\r\n                const userId = editCommentProps.review.userId;\r\n                props.editReviewAction({\r\n                    text: currentText,\r\n                    userId: userId,\r\n                    userName: editCommentProps.review.userName,\r\n                    datePosted: now\r\n                } as ReviewObjectType);\r\n                axios.put(host + '/reviewRatings/review',\r\n                    {\r\n                        mediaId: editCommentProps.mediaId,\r\n                        mediaType: editCommentProps.mediaType,\r\n                        userName: editCommentProps.review.userName,\r\n                        userId: editCommentProps.review.userId,\r\n                        rating: editCommentProps.userRating,\r\n                        datePosted: now,\r\n                        text: currentText\r\n                    })\r\n                    .then((res: any) => {\r\n                        // console.log(res);\r\n                    })\r\n                    .catch((err: any) => {\r\n                        // console.log(err);\r\n                    });\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        props.closeEdit();\r\n    };\r\n\r\n    const changeMessageText = (event: any) => {\r\n        setCurrentText(event.target.value);\r\n    };\r\n\r\n    // TODO use a better editor - markdown text area? - for the text\r\n    return (\r\n        <>\r\n            <TextArea value={currentText} onChange={changeMessageText}/>\r\n            <div style={{textAlign: 'right'}}>\r\n                <Button onClick={submit}>Submit</Button>\r\n                <Button onClick={props.closeEdit}>Cancel</Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, { addReviewAction, editReviewAction })(CommentEditor);\r\n","import React, {useEffect, useMemo, useRef, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Box, Typography} from '@material-ui/core';\r\nimport Button from '../Button';\r\nimport {connect} from 'react-redux';\r\nimport {deleteReviewAction} from '../../actions/reviewRatingActions';\r\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport {hasDivOverflown} from '../../utils/styleHelpers';\r\nimport StarRater from '../StarRater';\r\nimport axios from 'axios';\r\n\r\ninterface CommentBlockProps {\r\n    review: any,\r\n    currentUserId: string,\r\n    isCurrentUserComment?: boolean,\r\n    mediaId?: string,\r\n    mediaType?: string,\r\n    userRating?: number | undefined;\r\n}\r\n\r\nconst Review = styled.div<{ isCurrentUserComment: boolean | undefined }>`\r\n    border-top: ${({ theme }) => `2px solid ${theme.palette.grey[400]}`};\r\n    border: ${({ theme, isCurrentUserComment }) => isCurrentUserComment && `2px solid ${theme.palette.grey[400]}`};\r\n    min-height: 50px;\r\n    padding: 5px;\r\n    padding-bottom: 0px;\r\n`;\r\n\r\nconst TopBar = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst ExpandableDiv = styled.div<{ expanded: boolean }>`\r\n    max-height: ${(props) => props.expanded ? '' : '200px'};\r\n    overflow: ${(props) => props.expanded ? 'visible' : 'hidden'};\r\n    position: relative;\r\n`;\r\n\r\nconst ShowMoreButton = styled.button`\r\n    border: none;\r\n    box-shadow: 0px 0 5px rgba(0, 0, 0, 0.3);\r\n    outline: none;\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    text-align: center;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    padding: 0px;\r\n    width: 100%;\r\n    backdrop-filter: blur(1.5px);\r\n`;\r\n\r\nconst ShowLessButton = styled.button`\r\n    border: none;\r\n    outline: none;\r\n    background-color: rgba(255, 255, 255, 0.90);\r\n    text-align: center;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    padding: 0px;\r\n    width: 100%;\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.palette.grey[200]};\r\n    }\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst VerticallyCenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\n// NOTE: console logs are commented out but kept in code to aid future development & debugging\r\nfunction deleteReview(props: any) {\r\n    const userId = props.review.userId;\r\n    const reviewUserName = props.review.userName;\r\n    props.deleteReviewAction(userId);\r\n    if (props.userRating) { // if a rating exists, don't delete from db\r\n        axios.put('/reviewRatings/review',\r\n            {\r\n                mediaId: props.mediaId,\r\n                mediaType: props.mediaType,\r\n                userName: reviewUserName,\r\n                userId: userId,\r\n                datePosted: '',\r\n                text: ''\r\n            })\r\n            .then((res: any) => {\r\n                // console.log(res);\r\n            })\r\n            .catch((err: any) => {\r\n                // console.log(err);\r\n            });\r\n    } else { // if no rating, then delete whole reviewRating document from db\r\n        axios.delete(`/reviewRatings`\r\n        + `/${props.mediaType}/${props.mediaId}/${props.review.userId}`)\r\n            .then((res: any) => {\r\n                // console.log('successfully deleted the reviewRating', res);\r\n            })\r\n            .catch((err: any) => {\r\n                // console.log(err);\r\n            });\r\n    }\r\n}\r\n\r\nconst CommentBlock: React.FC<CommentBlockProps> = (props: CommentBlockProps) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [hasOverflow, setHasOverflow] = useState(false);\r\n    const expandableRef = useRef(null);\r\n    const { review, currentUserId, isCurrentUserComment } = props;\r\n    const date = new Date(review.datePosted).toDateString();\r\n\r\n    const isAuthor = useMemo(() => {\r\n        return currentUserId === review.userId;\r\n    }, [review, currentUserId]);\r\n\r\n    useEffect(() => {\r\n        const isOverflowing = hasDivOverflown(expandableRef);\r\n        if (isOverflowing) {\r\n            setHasOverflow(true);\r\n        } else {\r\n            setHasOverflow(false);\r\n        }\r\n    }, [review]);\r\n\r\n    return (\r\n        <>\r\n            <Review isCurrentUserComment={isCurrentUserComment}>\r\n            {isEdit ?\r\n                <>\r\n                    <Typography variant={'h5'}><strong>{review.userName}</strong></Typography>\r\n                    <CommentEditor\r\n                        actionType={CommentEditorAction.Edit}\r\n                        closeEdit={() => setIsEdit(false)}\r\n                        editCommentProps={props}\r\n                    />\r\n                </>\r\n                :\r\n                <ExpandableDiv expanded={expanded} ref={expandableRef}>\r\n                    <TopBar>\r\n                        <Typography variant={'h5'}>\r\n                            <strong>\r\n                                {review.userName}\r\n                            </strong>\r\n                            {` on ${date}`}\r\n                        </Typography>\r\n                        {isAuthor &&\r\n                            <div>\r\n                                <Button onClick={() => setIsEdit(true)}>Edit</Button>\r\n                                <Button onClick={() => deleteReview(props)}>Delete</Button>\r\n                            </div>\r\n                        }\r\n                    </TopBar>\r\n                    <VerticallyCenteredDiv>\r\n                        <Box mr={1}>User rated: </Box>\r\n                        {review.rating ?\r\n                            <StarRater readonly readOnlyRating={review.rating} hideReadOnlyLabel />\r\n                            : 'no rating'\r\n                        }\r\n                    </VerticallyCenteredDiv>\r\n                    <ReactMarkdown source={review.text} />\r\n                    {!expanded && hasOverflow &&\r\n                        <ShowMoreButton onClick={() => setExpanded(true)}>\r\n                            <Typography variant={'body1'}>Show more...</Typography>\r\n                        </ShowMoreButton>\r\n                    }\r\n                    {expanded &&\r\n                        <ShowLessButton onClick={() => setExpanded(false)}>\r\n                            <Typography variant={'body1'}>Show less</Typography>\r\n                        </ShowLessButton>\r\n                    }\r\n                </ExpandableDiv>}\r\n            </Review>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, { deleteReviewAction })(CommentBlock);\r\n","export function hasDivOverflown(ref: { current: any; }): boolean {\r\n    const element = ref.current;\r\n    return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport CommentBlock from '../CommentBlock';\r\nimport {Typography} from '@material-ui/core';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\r\nimport Button from '../Button';\r\nimport { MediaType } from '../../constants/dataTypes';\r\nimport {connect} from 'react-redux';\r\nimport Select from '@material-ui/core/Select';\r\n\r\ninterface ReviewListProps {\r\n    mediaId: string,\r\n    mediaType: MediaType,\r\n    otherUserReviews: any[],\r\n    currentUserReview?: any,\r\n    userId: string,\r\n    userName: string,\r\n    userRating?: number | undefined\r\n}\r\n\r\nconst ReviewList: React.FC<ReviewListProps> = (props: ReviewListProps) => {\r\n    const [addCommentEditorOpen, setAddCommentEditor] = useState(false);\r\n    const { otherUserReviews, currentUserReview, mediaId, mediaType, userId, userName, userRating } = props;\r\n\r\n    let hasAddedReview = !!currentUserReview;\r\n\r\n    const [stateReviews, setStateReviews] = useState<Array<any>>([]);\r\n    const [stateOtherUserReviews, setStateOtherUserReviews] = useState<Array<any>>([]);\r\n\r\n    const [dateOrRatingSort, setDateOrRatingSort] = useState<'date' | 'rating'>('date');\r\n    const [sortDirection, setSortDirection] = useState<'lowest' | 'highest' | 'recent' | 'old'>('recent');\r\n\r\n    useEffect(() => {\r\n        setStateOtherUserReviews(otherUserReviews);\r\n        const rerenderReviews = otherUserReviews?.slice(0, 9);\r\n        setStateReviews(rerenderReviews);\r\n    }, [otherUserReviews]);\r\n\r\n    const fetchMoreData = () => {\r\n        setTimeout(() => {\r\n            const currentReviewLength = stateReviews.length;\r\n            const theFetchNum = currentReviewLength + 5;\r\n            const fetchedReviews = stateOtherUserReviews.slice(0, theFetchNum);\r\n            setStateReviews(fetchedReviews);\r\n        }, 1000);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let sortedOtherReviews = [];\r\n        switch (sortDirection) {\r\n            case 'lowest':\r\n            case 'highest':\r\n                sortedOtherReviews = stateOtherUserReviews.sort(function(a, b) {\r\n                    if(a.rating === b.rating) {\r\n                        const aDate = a.datePosted && new Date(a.datePosted);\r\n                        const bDate = b.datePosted && new Date(b.datePosted);\r\n                        if(aDate > bDate) {\r\n                            return -1;\r\n                        }\r\n                        if(aDate < bDate) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    }\r\n                    if(!a.rating) {\r\n                        return 1;\r\n                    }\r\n                    if(!b.rating) {\r\n                        return -1;\r\n                    }\r\n                    if (sortDirection === 'highest') {\r\n                        return a.rating < b.rating ? 1 : -1;\r\n                    }\r\n                    else {\r\n                        return a.rating < b.rating ? -1 : 1;\r\n                    }\r\n                });\r\n                break;\r\n            case 'recent':\r\n            case 'old':\r\n                sortedOtherReviews = stateOtherUserReviews.sort(function(a, b) {\r\n                    const aDate = a.datePosted && new Date(a.datePosted);\r\n                    const bDate = b.datePosted && new Date(b.datePosted);\r\n                    if(aDate > bDate) {\r\n                        return sortDirection === 'recent' ? -1 : 1;\r\n                    }\r\n                    if(aDate < bDate) {\r\n                        return sortDirection === 'recent' ? 1 : -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const slicedSortedReviews = sortedOtherReviews.slice(0, 9);\r\n        setStateReviews([...slicedSortedReviews]);\r\n    }, [stateOtherUserReviews, sortDirection, dateOrRatingSort]);\r\n\r\n    const onSortTypeChange = (event: any) => {\r\n        setDateOrRatingSort(event.target.value);\r\n        if (event.target.value === 'date') {\r\n            setSortDirection('recent');\r\n        }\r\n        if (event.target.value === 'rating') {\r\n            setSortDirection('highest');\r\n        }\r\n    };\r\n\r\n    const onSortDirectionChange = (event: any) => {\r\n        setSortDirection(event.target.value);\r\n    };\r\n\r\n    const totalReviews = hasAddedReview ? otherUserReviews.length + 1 : otherUserReviews.length;\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={'h3'} gutterBottom>\r\n                {totalReviews || 0} Total Reviews\r\n            </Typography>\r\n            {addCommentEditorOpen ?\r\n                <>\r\n                    <Typography variant={'h5'}><strong>{userName}</strong></Typography>\r\n                    <CommentEditor\r\n                        actionType={CommentEditorAction.Add}\r\n                        closeEdit={() => setAddCommentEditor(false)}\r\n                        addCommentProps={{\r\n                            mediaType: mediaType,\r\n                            mediaId: mediaId,\r\n                            userId: userId,\r\n                            userName: userName,\r\n                            userRating: userRating\r\n                        }}\r\n                    />\r\n                </> :\r\n                <div style={{textAlign: 'right'}}>\r\n                    {!hasAddedReview &&\r\n                        <Button onClick={() => setAddCommentEditor(true)}>\r\n                            Add Review\r\n                        </Button>\r\n                    }\r\n                </div>\r\n            }\r\n            {currentUserReview && currentUserReview.text &&\r\n                <>\r\n                    <CommentBlock\r\n                        review={currentUserReview}\r\n                        currentUserId={userId}\r\n                        isCurrentUserComment={true}\r\n                        mediaId={mediaId}\r\n                        mediaType={mediaType}\r\n                        userRating={userRating}\r\n                    />\r\n                </>\r\n            }\r\n            <br/>\r\n            {otherUserReviews && otherUserReviews.length > 0 &&\r\n                <>\r\n                    <div>\r\n                        <Select variant='outlined'\r\n                                native\r\n                                style={{ marginBottom: '5px', marginRight: '5px' }}\r\n                                onChange={onSortTypeChange}\r\n                        >\r\n                            <option value={'date'}>Date</option>\r\n                            <option value={'rating'}>Rating</option>\r\n                        </Select>\r\n                        <Select\r\n                            variant='outlined'\r\n                            native\r\n                            style={{ marginBottom: '5px' }}\r\n                            onChange={onSortDirectionChange}\r\n                            value={sortDirection}\r\n                        >\r\n                            <option\r\n                                value={dateOrRatingSort === 'date' ? 'recent' : 'highest'}\r\n                            >\r\n                                {dateOrRatingSort === 'date' ? 'Recent' : 'Highest'}\r\n                            </option>\r\n                            <option\r\n                                value={dateOrRatingSort === 'date' ? 'old' : 'lowest'}\r\n                            >\r\n                                {dateOrRatingSort === 'date' ? 'Old' : 'Lowest'}\r\n                            </option>\r\n                        </Select>\r\n                    </div>\r\n                    <InfiniteScroll\r\n                        dataLength={stateReviews.length}\r\n                        next={fetchMoreData}\r\n                        hasMore={stateReviews.length < otherUserReviews.length}\r\n                        loader={<h4 style={{textAlign: 'center'}}>Loading more reviews...</h4>}\r\n                        scrollThreshold={1}\r\n                        endMessage={\r\n                            <p style={{textAlign: 'center'}}>\r\n                                <b>No more reviews</b>\r\n                            </p>\r\n                        }>\r\n                        {stateReviews.map((r, index) =>\r\n                            <CommentBlock\r\n                                key={index}\r\n                                review={r}\r\n                                currentUserId={userId}\r\n                            />)\r\n                        }\r\n                    </InfiniteScroll>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n    const reviews = state.reviewRatings.filter((r: any) => r.text);\r\n    let otherUserReviews: any[] = [];\r\n    let currentUserReview: any = undefined;\r\n    reviews.forEach((r: any) => {\r\n        r.userId === ownProps.userId ? currentUserReview = r : otherUserReviews.push(r);\r\n    });\r\n    return {\r\n        otherUserReviews: otherUserReviews,\r\n        currentUserReview: currentUserReview\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ReviewList);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Menu, MenuItem} from '@material-ui/core';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport axios from 'axios';\r\n\r\ninterface FavoritesDropDownProps {\r\n    allOptions: Array<string>;\r\n    favoriteOptions: Array<string>;\r\n    favKey: string;\r\n    userId: string;\r\n}\r\n\r\n// NOTE: console logs are commented out but kept in code to aid future development & debugging\r\nconst FavoritesDropDown = (props: FavoritesDropDownProps) => {\r\n    const { allOptions, favoriteOptions, favKey, userId } = props;\r\n    const [favs, setFavs] = useState<Array<string>>([]);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    useEffect(() => {\r\n        setFavs(favoriteOptions);\r\n    }, [favoriteOptions]);\r\n\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (subject: string, isFav: boolean) => {\r\n        setAnchorEl(null);\r\n        if (isFav) {\r\n            const filteredFavs = favs.filter((f) => f !== subject);\r\n            setFavs(filteredFavs);\r\n        } else {\r\n            setFavs([...favs, subject]);\r\n        }\r\n        const act = isFav ? 'REMOVE' : 'ADD';\r\n        const encodedSubject = encodeURIComponent(subject);\r\n        axios.put(`/users/${favKey}/${encodedSubject}/${userId}`, {\r\n            action: act\r\n        }).then((response: any) => {\r\n            // console.log(response);\r\n        }).catch((error: any) => {\r\n            // console.log('Error adding or removing favorite from dropdown', error);\r\n        });\r\n    };\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                onClick={handleClick}\r\n                endIcon={<DetailsIcon/>}\r\n                style={{ fontSize: '12px' }}\r\n            >\r\n                Add to favorites\r\n            </Button>\r\n            <Menu\r\n                id='simple-menu'\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n            >\r\n                {allOptions.map((o, index) => {\r\n                    const isFav = favs.includes(o);\r\n                    return (\r\n                        <MenuItem key={index} onClick={() => handleClose(o, isFav)} style={{whiteSpace: 'normal'}}>\r\n                            {o}\r\n                            {isFav && <CheckIcon fontSize={'small'}/>}\r\n                        </MenuItem>);\r\n                })}\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FavoritesDropDown;\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport Container from '../Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReviewList from '../../components/ReviewList';\r\nimport {MediaType, SingleQueryType} from '../../constants/dataTypes';\r\nimport styled from 'styled-components';\r\nimport {Box, FormControl, Grid, InputLabel, MenuItem, Select} from '@material-ui/core';\r\nimport TagsSection from '../../components/TagsSection';\r\nimport StarRater from '../../components/StarRater';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {loadAllReviewsAction} from '../../actions/reviewRatingActions';\r\nimport AddToUserButton from '../../components/AddToUserButton';\r\nimport FavoritesDropDown from '../../components/FavoritesDropDown';\r\nimport Interweave from 'interweave';\r\nimport {useHistory} from 'react-router';\r\nimport LoadingSpinner from '../../components/LoadingSign';\r\n\r\nconst StyledImage = styled.img`\r\n    width: 100%;\r\n    max-width: 300px;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst ImagePlaceholder = styled.div`\r\n    width: 100%;\r\n    max-width: 300px;\r\n    min-height: 300px;\r\n    margin-bottom: 15px;\r\n    background-color: ${({ theme }) => theme.palette.grey[300]};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledGridItem = styled(Grid)`\r\n    text-align: center;\r\n`;\r\n\r\nconst VerticallyCenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CenteredDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst StyledFormControl = styled(FormControl)`\r\n    width: 100%;\r\n    margin: 5px !important;\r\n`;\r\n\r\n// NOTE: console logs are commented out but kept in code to aid future development & debugging\r\nconst MediaPage: React.FC<{}> = (props: any) => {\r\n    const [mediaType, id] = props.location.pathname.split('/').filter((o: string) => o);\r\n    const [isForLater, setForLater] = useState(false);\r\n    const [isFavorite, setFavorite] = useState(false);\r\n    const [watchedOrRead, setWatchedOrRead] = useState(false);\r\n    const [mediaObject, setMediaObject] = useState({\r\n        title: 'No title',\r\n        id: id,\r\n        mediaType: MediaType.start,\r\n        image: '',\r\n        people: [''],\r\n        genres: [''],\r\n        blurb: 'No description',\r\n        publishedDate: '2020-01-01',\r\n        avgRating: 0\r\n    });\r\n    const [reviewsObject, setReviewsObject] = useState({\r\n        avgRating: 0,\r\n        userRating: 0,\r\n        userHasReviewText: false\r\n    });\r\n    const [userLists, setUserLists] = useState({\r\n        booksRead: [],\r\n        moviesWatched: [],\r\n        watchLater: [],\r\n        readLater: [],\r\n        favoriteMovies: [],\r\n        favoriteBooks: [],\r\n        favoriteMoviesDetails: [],\r\n        favoriteBooksDetails: [],\r\n        booksReadDetails: [],\r\n        moviesWatchedDetails: [],\r\n        readLaterDetails: [],\r\n        watchLaterDetails: [],\r\n        favoriteAuthors: [],\r\n        favoriteDirectors: [],\r\n        favoriteGenres: []\r\n    });\r\n\r\n    const [storyTags, setStoryTags] = useState([]);\r\n    const [unaddedStoryTags, setUnaddedStoryTags] = useState<Array<{ tagId: string, tagName: string }>>([]);\r\n    const [addedStoryTags, setAddedStoryTags] = useState<Array<{ tagId: string, tagName: string }>>([]);\r\n\r\n    const sessionDataString = sessionStorage.getItem('NS-session-data');\r\n    const sessionDataObj = sessionDataString && JSON.parse(sessionDataString);\r\n    const userName = sessionDataObj.username;\r\n    const userId = sessionDataObj.userId;\r\n    const history = useHistory();\r\n    let ref = useRef({numberSubscriptions: 0});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const {\r\n        title,\r\n        image,\r\n        people,\r\n        blurb,\r\n        genres\r\n    } = mediaObject;\r\n\r\n    const {\r\n        avgRating,\r\n        userRating,\r\n        userHasReviewText\r\n    } = reviewsObject;\r\n\r\n    useEffect(() => {\r\n        ref.current.numberSubscriptions++;\r\n        setIsLoading(true);\r\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\r\n        axios.get(`/${mediaRouteType}/${id}`)\r\n            .then((mediaRes: any) => {\r\n                const mediaData = mediaRes.data;\r\n                if (!mediaData.title) {\r\n                    ref.current.numberSubscriptions = 0;\r\n                    history.push('/notFound');\r\n                }\r\n                if (ref.current.numberSubscriptions) {\r\n                    setMediaObject({\r\n                        title: mediaData.title || 'No title',\r\n                        id: id,\r\n                        mediaType: mediaType,\r\n                        image: mediaData.image,\r\n                        people: mediaData.people,\r\n                        genres: mediaData.genres,\r\n                        blurb:  mediaData.blurb || 'No description',\r\n                        publishedDate: mediaData.publishedDate,\r\n                        avgRating: mediaData.avgRating\r\n                    });\r\n                    ref.current.numberSubscriptions--;\r\n                    setIsLoading(false);\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                if (error.response.data.message === 'Could not fetch movie') {\r\n                    ref.current.numberSubscriptions = 0;\r\n                    history.push('/notFound');\r\n                }\r\n            });\r\n    }, [props, id, mediaType, userId]);\r\n\r\n    useEffect(() => {\r\n        ref.current.numberSubscriptions++;\r\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\r\n        axios.get(`/${mediaRouteType}/tags/${id}`)\r\n            .then((mediaRes: any) => {\r\n                const mediaData = mediaRes.data;\r\n                if (ref.current.numberSubscriptions) {\r\n                    setStoryTags(mediaData.nextStoryTags);\r\n                    ref.current.numberSubscriptions--;\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                // console.log('Error getting media', error);\r\n            });\r\n    }, [props, id, mediaType, userId]);\r\n\r\n    useEffect(() => {\r\n        ref.current.numberSubscriptions++;\r\n        axios.get(`/reviewRatings/${mediaType}/${id}`)\r\n            .then((reviewRatingRes: any) => {\r\n                const reviews = reviewRatingRes.data.reviewArray;\r\n                props.loadAllReviewsAction(reviews);\r\n                const userRatingReviewArr = reviews.filter((r: any) => r.userId === userId);\r\n                const userRating = userRatingReviewArr.length > 0 ? userRatingReviewArr[0].rating : undefined;\r\n                const userHasReviewText = userRatingReviewArr.length > 0 && !!userRatingReviewArr[0].text;\r\n                if (ref.current.numberSubscriptions) {\r\n                    setReviewsObject({\r\n                        avgRating: reviewRatingRes.data.average,\r\n                        userRating: userRating,\r\n                        userHasReviewText: userHasReviewText\r\n                    });\r\n                    ref.current.numberSubscriptions--;\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                // console.log('Error getting reviews', error);\r\n            });\r\n    }, [props, id, mediaType, userId]);\r\n\r\n    useEffect(() => {\r\n        ref.current.numberSubscriptions++;\r\n        axios.get(`/users/userLists/${userId}`)\r\n            .then((response: any) => {\r\n                const userLists = response.data;\r\n                if (ref.current.numberSubscriptions) {\r\n                    if (mediaType === MediaType.movie) {\r\n                        if (userLists.watchLater.includes(id)) {\r\n                            setForLater(true);\r\n                        }\r\n                        if (userLists.favoriteMovies.includes(id)) {\r\n                            setFavorite(true);\r\n                        }\r\n                        if (userLists.moviesWatched.includes(id)) {\r\n                            setWatchedOrRead(true);\r\n                        }\r\n                    } else {\r\n                        if (userLists.readLater.includes(id)) {\r\n                            setForLater(true);\r\n                        }\r\n                        if (userLists.favoriteBooks.includes(id)) {\r\n                            setFavorite(true);\r\n                        }\r\n                        if (userLists.booksRead.includes(id)) {\r\n                            setWatchedOrRead(true);\r\n                        }\r\n                    }\r\n                    setUserLists({\r\n                        booksRead: userLists.booksRead,\r\n                        moviesWatched: userLists.moviesWatched,\r\n                        watchLater: userLists.watchLater,\r\n                        readLater: userLists.readLater,\r\n                        favoriteMovies: userLists.favoriteMovies,\r\n                        favoriteBooks: userLists.favoriteBooks,\r\n                        favoriteMoviesDetails: userLists.favoriteMoviesDetails,\r\n                        favoriteBooksDetails: userLists.favoriteBooksDetails,\r\n                        booksReadDetails: userLists.booksReadDetails,\r\n                        moviesWatchedDetails: userLists.moviesWatchedDetails,\r\n                        readLaterDetails: userLists.readLaterDetails,\r\n                        watchLaterDetails: userLists.watchLaterDetails,\r\n                        favoriteAuthors: userLists.favoriteAuthors,\r\n                        favoriteDirectors: userLists.favoriteDirectors,\r\n                        favoriteGenres: userLists.favoriteGenres\r\n                    });\r\n                    ref.current.numberSubscriptions--;\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                // console.log('Error getting media', error);\r\n            });\r\n    }, [userId, mediaType, id]);\r\n\r\n    useEffect(() => {\r\n        ref.current.numberSubscriptions++;\r\n        axios.get('/nextStoryTags')\r\n            .then((res: any) => {\r\n                const tagData = res.data;\r\n                const storyTagNames = storyTags.map((t: any) => t.tagName);\r\n                const unAdded: Array<{ tagId: string, tagName: string }> = [];\r\n                const added: Array<{ tagId: string, tagName: string }> = [];\r\n                tagData.forEach((t: any) => {\r\n                    if (storyTagNames.includes(t.tagName)) {\r\n                        added.push(t);\r\n                    } else unAdded.push(t);\r\n                });\r\n                if (ref.current.numberSubscriptions) {\r\n                    setUnaddedStoryTags(unAdded);\r\n                    setAddedStoryTags(added);\r\n                    ref.current.numberSubscriptions--;\r\n                }\r\n            })\r\n            .catch((error: any) => {\r\n                // console.log('Error getting all story tags', error);\r\n            });\r\n    }, [storyTags]);\r\n\r\n    const updateMediaInDB = (tagsArray: any[]) => {\r\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\r\n        axios.put(`/${mediaRouteType}/updateNextStoryTags/${id}`,\r\n            { tagsArray: tagsArray })\r\n            .then((res: any) => {\r\n                // console.log('updated tags for media', res.data);\r\n            }).catch((err: any) => {\r\n                // console.log('error setting tags for media', err);\r\n            });\r\n    };\r\n\r\n    const addOrRemoveCall = (key: string, mediaId: string, action:string) => {\r\n        const data = {action:action, mediaObject};\r\n        axios.put(`/users/${key}/${mediaId}/${userId}`, data).then((response: any) => {\r\n            // console.log(response);\r\n        }).catch((error: any) => {\r\n            // console.log('Error getting reviews', error);\r\n        });\r\n    };\r\n\r\n    const addOrRemoveWatchOrRead = (mediaId: string) => {\r\n        const key = mediaType === MediaType.movie ? 'moviesWatched' : 'booksRead';\r\n        if (watchedOrRead) {\r\n            setWatchedOrRead(false);\r\n            addOrRemoveCall(key, mediaId, 'REMOVE');\r\n        } else {\r\n            setWatchedOrRead(true);\r\n            addOrRemoveCall(key, mediaId, 'ADD');\r\n        }\r\n    };\r\n\r\n    const addOrRemoveWatchReadLater = (mediaId: string) => {\r\n        const key = mediaType === MediaType.movie ? 'watchLater' : 'readLater';\r\n        if (isForLater) {\r\n            setForLater(false);\r\n            addOrRemoveCall(key, mediaId, 'REMOVE');\r\n        } else {\r\n            setForLater(true);\r\n            addOrRemoveCall(key, mediaId, 'ADD');\r\n        }\r\n    };\r\n\r\n    const addOrRemoveFavorites = (mediaId: string) => {\r\n        const key = mediaType === MediaType.movie ? 'favoriteMovies' : 'favoriteBooks';\r\n        if (isFavorite) {\r\n            setFavorite(false);\r\n            addOrRemoveCall(key, mediaId, 'REMOVE');\r\n        } else {\r\n            setFavorite(true);\r\n            addOrRemoveCall(key, mediaId, 'ADD');\r\n        }\r\n    };\r\n\r\n    const handleAddTag = (event: any) => {\r\n        const newAddedTags = [...addedStoryTags, event.target.value];\r\n        const filteredDeleteTags = unaddedStoryTags.filter((t: any) => t.tagId !== event.target.value.tagId);\r\n        setAddedStoryTags(newAddedTags);\r\n        setUnaddedStoryTags(filteredDeleteTags);\r\n        updateMediaInDB(newAddedTags);\r\n    };\r\n\r\n    const handleDeleteTag = (event: any) => {\r\n        const filteredStoryTags = addedStoryTags.filter((t: any) => t.tagId !== event.target.value.tagId);\r\n        const newDeleteTags = [...unaddedStoryTags, event.target.value];\r\n        setAddedStoryTags(filteredStoryTags);\r\n        setUnaddedStoryTags(newDeleteTags);\r\n        updateMediaInDB(filteredStoryTags);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <LoadingSpinner/>}\r\n            <Container maxWidth='lg'>\r\n                <Grid container direction={'row'}  spacing={5}>\r\n                    <StyledGridItem item sm={3}>\r\n                        {image ? <StyledImage src={image}/> : <ImagePlaceholder>No Image</ImagePlaceholder>}\r\n                        <div>\r\n                            Your rating:\r\n                            <CenteredDiv>\r\n                                <StarRater\r\n                                    userRating={userRating}\r\n                                    readonly={false}\r\n                                    userId={userId}\r\n                                    userName={userName}\r\n                                    userHasReviewText={userHasReviewText}\r\n                                    mediaId={id}\r\n                                    mediaType={mediaType}\r\n                                />\r\n                            </CenteredDiv>\r\n                            <div>\r\n                                <AddToUserButton\r\n                                    toBackendOnClick={() => addOrRemoveWatchOrRead(id)}\r\n                                    isAdded={watchedOrRead}\r\n                                    addLabel={`Add to ${mediaType === MediaType.movie ? 'watched' : 'read'}`}\r\n                                    removeLabel={`Remove from ${mediaType === MediaType.movie ? 'watched' : 'read'}`}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <AddToUserButton\r\n                                    toBackendOnClick={() => addOrRemoveWatchReadLater(id)}\r\n                                    isAdded={isForLater}\r\n                                    addLabel={`Add to ${mediaType === MediaType.movie ? 'watch' : 'read'} later`}\r\n                                    removeLabel={`Remove from ${mediaType === MediaType.movie ? 'watch' : 'read'} later`}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <AddToUserButton\r\n                                    toBackendOnClick={() => addOrRemoveFavorites(id)}\r\n                                    isAdded={isFavorite}\r\n                                    addLabel={'Add favorite'}\r\n                                    removeLabel={'Remove favorite'}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </StyledGridItem>\r\n                    <Grid item sm={6}>\r\n                        <Typography variant='h1'>{title} {mediaType === MediaType.movie ? '(Movie)' : '(Book)'}</Typography>\r\n                        <Box fontStyle='italic'>\r\n                            <Typography variant='subtitle1' gutterBottom>\r\n                                {people?.join(', ')}\r\n                                {people && people[0] !== '' && <FavoritesDropDown\r\n                                    allOptions={people}\r\n                                    favoriteOptions={mediaType === MediaType.movie ? userLists.favoriteDirectors : userLists.favoriteAuthors}\r\n                                    userId={userId}\r\n                                    favKey={mediaType === MediaType.movie ? 'favoriteDirectors' : 'favoriteAuthors'}\r\n                                />}\r\n                            </Typography>\r\n                        </Box>\r\n                        <VerticallyCenteredDiv>\r\n                            <Typography variant='subtitle2' >Avg members rating: </Typography>\r\n                            <StarRater readOnlyRating={avgRating} readonly />\r\n                        </VerticallyCenteredDiv>\r\n                        <Interweave content={blurb} />\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        Genres:\r\n                        <TagsSection tags={genres} singleQueryType={SingleQueryType.genre}/>\r\n                        <div>\r\n                            {genres.length > 0 && <FavoritesDropDown\r\n                                allOptions={genres}\r\n                                favoriteOptions={userLists.favoriteGenres}\r\n                                userId={userId}\r\n                                favKey={'favoriteGenres'}\r\n                            />}\r\n                        </div>\r\n                        Tags:\r\n                        <TagsSection tagObjects={addedStoryTags} singleQueryType={SingleQueryType.tag}/>\r\n                        {unaddedStoryTags.length > 0 && <StyledFormControl variant='outlined'>\r\n                            <InputLabel id='demo-simple-select-outlined-label'>Add a tag</InputLabel>\r\n                            <Select\r\n                                labelId='add-tag-label'\r\n                                id='add-tag'\r\n                                value={''}\r\n                                onChange={handleAddTag}\r\n                                label='Add a tag'\r\n                            >\r\n                                {unaddedStoryTags.map((t: any, index) => {\r\n                                    return <MenuItem key={`${index}_add`} value={t}>{t.tagName}</MenuItem>;\r\n                                })}\r\n                            </Select>\r\n                        </StyledFormControl>}\r\n                        {addedStoryTags.length > 0 && <StyledFormControl variant='outlined'>\r\n                            <InputLabel id='demo-simple-select-outlined-label'>Delete a tag</InputLabel>\r\n                            <Select\r\n                                labelId='delete-tag-label'\r\n                                id='delete-tag'\r\n                                value={''}\r\n                                onChange={handleDeleteTag}\r\n                                label='Delete a tag'\r\n                            >\r\n                                {addedStoryTags.map((t: any, index) => {\r\n                                    return <MenuItem key={`${index}_delete`} value={t}>{t.tagName}</MenuItem>;\r\n                                })}\r\n                            </Select>\r\n                        </StyledFormControl>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <Container maxWidth='md'>\r\n                <ReviewList\r\n                    mediaId={id}\r\n                    mediaType={mediaType}\r\n                    userName={userName}\r\n                    userId={userId}\r\n                    userRating={userRating}\r\n                />\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, { loadAllReviewsAction })(MediaPage);\r\n"],"sourceRoot":""}