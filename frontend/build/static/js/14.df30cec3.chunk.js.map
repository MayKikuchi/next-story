{"version":3,"sources":["constants/dataTypes.ts","containers/Container/index.tsx","actions/singleSearchPageFilterActions.ts","components/TagButton/index.tsx","components/TagsSection/index.tsx","actions/reviewRatingActions.ts","components/StarRater/index.tsx","components/AddToUserButton/index.tsx","components/Button/index.tsx","components/CommentEditor/index.tsx","components/CommentBlock/index.tsx","utils/styleHelpers.ts","components/ReviewList/index.tsx","components/FavoritesDropDown/index.tsx","containers/MediaPage/index.tsx"],"names":["MediaType","SingleQueryType","StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","changeSingleSearchPageFilter","filterName","type","CHANGE_SINGLE_SEARCH_PAGE_FILTER","StyledTagButton","button","theme","palette","primary","light","secondary","connect","label","tagId","singleQueryType","history","useHistory","encodedSubject","encodeURIComponent","onClick","queryType","bookPerson","BOOKS","moviePerson","MOVIES","tag","genre","searchBar","ALL","changeQueryFilter","push","StyledTagsSection","div","TagsSection","tags","tagObjects","map","index","key","tagObject","tagName","loadAllReviewsAction","reviewsArray","LOAD_REVIEWS_FROM_DB","addReviewAction","reviewObject","ADD_REVIEW","text","userId","userName","datePosted","deleteReviewAction","DELETE_REVIEW","editReviewAction","EDIT_REVIEW","changeRatingAction","CHANGE_RATING","rating","StyledIconButton","IconButton","VerticallyCenteredDiv","host","window","location","protocol","useState","ratedStar","setStar","readonly","readOnlyRating","hideReadOnlyLabel","userRating","twoDecimalRatingString","clickStar","starIndex","ratingToSet","userHasReviewText","axios","put","mediaId","mediaType","then","res","console","log","catch","err","delete","changeRating","toFixed","useEffect","display","Array","star","split","wholeNumberString","decimalString","wholeNumber","parseInt","decimalTimes100","style","fill","fontSize","closestFifty","Math","round","getIcon","size","ml","StyledButton","isAddedToUser","grey","AddToUserButton","addLabel","removeLabel","isAdded","toBackendOnClick","setIsAddedToUser","color","main","Button","CommentEditorAction","TextArea","textarea","editCommentProps","review","currentText","setCurrentText","value","onChange","event","target","textAlign","addCommentProps","now","Date","toString","actionType","Add","undefined","Edit","closeEdit","Review","isCurrentUserComment","TopBar","ExpandableDiv","expanded","ShowMoreButton","ShowLessButton","isEdit","setIsEdit","setExpanded","hasOverflow","setHasOverflow","expandableRef","useRef","currentUserId","date","toDateString","isAuthor","useMemo","isOverflowing","ref","element","current","scrollHeight","clientHeight","scrollWidth","clientWidth","hasDivOverflown","Typography","variant","reviewUserName","deleteReview","Box","mr","StarRater","source","state","ownProps","reviews","reviewRatings","filter","r","otherUserReviews","currentUserReview","forEach","addCommentEditorOpen","setAddCommentEditor","hasAddedReview","stateReviews","setStateReviews","stateOtherUserReviews","setStateOtherUserReviews","dateOrRatingSort","setDateOrRatingSort","sortDirection","setSortDirection","rerenderReviews","slice","sortedOtherReviews","sort","a","b","aDate","bDate","slicedSortedReviews","totalReviews","length","gutterBottom","Select","native","marginBottom","marginRight","dataLength","next","setTimeout","theFetchNum","fetchedReviews","hasMore","loader","scrollThreshold","endMessage","FavoritesDropDown","allOptions","favoriteOptions","favKey","favs","setFavs","React","anchorEl","setAnchorEl","currentTarget","endIcon","Menu","id","keepMounted","open","Boolean","onClose","o","isFav","includes","MenuItem","subject","filteredFavs","f","act","action","response","error","handleClose","whiteSpace","StyledImage","img","ImagePlaceholder","StyledGridItem","Grid","CenteredDiv","StyledFormControl","FormControl","pathname","isForLater","setForLater","isFavorite","setFavorite","watchedOrRead","setWatchedOrRead","title","start","image","people","genres","blurb","mediaObject","setMediaObject","avgRating","reviewsObject","setReviewsObject","booksRead","moviesWatched","watchLater","readLater","favoriteMovies","favoriteBooks","favoriteAuthors","favoriteDirectors","favoriteGenres","userLists","setUserLists","storyTags","setStoryTags","unaddedStoryTags","setUnaddedStoryTags","addedStoryTags","setAddedStoryTags","sessionDataString","sessionStorage","getItem","sessionDataObj","JSON","parse","username","numberSubscriptions","isLoading","setIsLoading","mediaRouteType","book","get","mediaRes","mediaData","data","message","nextStoryTags","reviewRatingRes","reviewArray","userRatingReviewArr","average","movie","tagData","storyTagNames","t","unAdded","added","updateMediaInDB","tagsArray","addOrRemoveCall","container","direction","spacing","item","sm","src","addOrRemoveWatchOrRead","addOrRemoveWatchReadLater","addOrRemoveFavorites","fontStyle","join","content","InputLabel","labelId","newAddedTags","filteredDeleteTags","filteredStoryTags","newDeleteTags"],"mappings":"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","file":"static/js/14.df30cec3.chunk.js","sourcesContent":["export enum MediaType {\n    movie = 'movie',\n    book = 'book',\n    start = ''\n}\n\nexport enum SingleQueryType {\n    bookPerson = 'bookPerson',\n    moviePerson = 'moviePerson',\n    genre = 'genre',\n    tag = 'tag',\n    searchBar = 'searchBar'\n}\n\nexport type CardData = {\n    title: string,\n    id: string,\n    mediaType: MediaType,\n    image: string, // the url, etc to the image\n    genres: string[],\n    nextStoryTags: string[],\n    people: string,\n    blurb: string,\n    avgRating: number\n}\n\nexport interface Tag{\n  tagId: string;\n  tagName: string;\n}\n","import React, {ReactNode} from 'react';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled(Container)`\n    margin-top: 85px;\n    margin-bottom: 85px;\n`;\n\ninterface MarginContainerProps {\n    maxWidth: 'lg'\n        | 'md'\n        | 'sm'\n        | 'xl'\n        | 'xs'\n        | false;\n    children: ReactNode;\n}\n\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\n    return (\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\n    );\n};\n\nexport default MarginContainer;\n","import {\n    CHANGE_SINGLE_SEARCH_PAGE_FILTER\n} from '../constants/singleSearchPageFilterConstants';\n\nexport const changeSingleSearchPageFilter = (filterName: string) => {\n    return {\n        type: CHANGE_SINGLE_SEARCH_PAGE_FILTER,\n        filterName: filterName\n    };\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport {useHistory} from 'react-router';\nimport {SingleQueryType} from '../../constants/dataTypes';\nimport {ALL, BOOKS, MOVIES} from '../../constants/homePageFilterConstants';\nimport {connect} from 'react-redux';\nimport {changeSingleSearchPageFilter} from '../../actions/singleSearchPageFilterActions';\n\ninterface TagsButtonProps {\n    label: string;\n    singleQueryType: SingleQueryType;\n    tagId?: string; // needed for if the tag button is being used for nextStoryTags\n}\n\nconst StyledTagButton = styled.button`\n    border-radius: 7px;\n    color: white;\n    outline: none;\n    border: none;\n    margin: 5px;\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.palette.primary.light};\n    &:hover {\n        background-color: ${({ theme }) => theme.palette.secondary.light};\n    }\n    font-size: 16px;\n    padding: 3px 5px 3px 5px;\n`;\n\nconst changeQueryFilter = (props: any, queryType: SingleQueryType) => {\n    switch (queryType) {\n        case SingleQueryType.bookPerson:\n            props.changeSingleSearchPageFilter(BOOKS);\n            break;\n        case SingleQueryType.moviePerson:\n            props.changeSingleSearchPageFilter(MOVIES);\n            break;\n        case SingleQueryType.tag:\n        case SingleQueryType.genre:\n        case SingleQueryType.searchBar:\n        default:\n            props.changeSingleSearchPageFilter(ALL);\n            break;\n    }\n};\n\nconst TagButton: React.FC<TagsButtonProps> = (props: TagsButtonProps) => {\n    const { label, tagId, singleQueryType } = props;\n    const history = useHistory();\n\n    const encodedSubject = encodeURIComponent(tagId || label);\n    const goToSingleQuery = () => {\n        changeQueryFilter(props, singleQueryType);\n        history.push(`/searchResult/param?singleQueryType=${singleQueryType}&query=${encodedSubject}`);\n    };\n\n    return (\n        <>\n            {label &&\n                <StyledTagButton\n                    onClick={goToSingleQuery}\n                >\n                    {label}\n                </StyledTagButton>\n            }\n        </>\n    );\n};\n\nexport default connect(null, {changeSingleSearchPageFilter})(TagButton);\n","import React from 'react';\nimport TagButton from '../TagButton';\nimport styled from 'styled-components';\nimport {SingleQueryType} from '../../constants/dataTypes';\n\ninterface TagsSectionProps {\n    singleQueryType: SingleQueryType;\n    tags?: string[],\n    tagObjects?: Array<{ tagId: string, tagName: string }>\n}\n\nconst StyledTagsSection = styled.div`\n    margin-bottom: 15px;\n`;\n\nconst TagsSection: React.FC<TagsSectionProps> = (props: TagsSectionProps) => {\n    const { singleQueryType, tags, tagObjects } = props;\n    return (\n        <StyledTagsSection>\n            { tags && tags.map((tag, index) => {\n                return (\n                    <TagButton\n                        key={index}\n                        label={tag}\n                        singleQueryType={singleQueryType}\n                    />);\n            }) }\n            { !tags && tagObjects && tagObjects.map((tagObject, index) => {\n                return (\n                    <TagButton\n                        key={index}\n                        label={tagObject.tagName}\n                        singleQueryType={singleQueryType}\n                        tagId={tagObject.tagId}\n                    />);\n            }) }\n        </StyledTagsSection>\n    );\n};\n\nexport default TagsSection;\n","import {\n    ADD_REVIEW, CHANGE_RATING,\n    DELETE_REVIEW,\n    EDIT_REVIEW,\n    LOAD_REVIEWS_FROM_DB,\n} from '../constants/reviewRatingConstants';\n\nexport interface ReviewObjectType {\n    text: string,\n    userId: string,\n    userName: string,\n    datePosted: string,\n    rating?: number | undefined\n}\n\nexport const loadAllReviewsAction = (reviewsArray: any[]) => {\n    return {\n        type: LOAD_REVIEWS_FROM_DB,\n        reviewsArray: reviewsArray\n    };\n};\n\nexport const addReviewAction = (reviewObject: ReviewObjectType) => {\n    return {\n        type: ADD_REVIEW,\n        text: reviewObject.text,\n        userId: reviewObject.userId,\n        userName: reviewObject.userName,\n        datePosted: reviewObject.datePosted\n    };\n};\n\nexport const deleteReviewAction = (userId: string) => {\n    return {\n        type: DELETE_REVIEW,\n        userId: userId\n    };\n};\n\nexport const editReviewAction = (reviewObject: ReviewObjectType) => {\n    return {\n        type: EDIT_REVIEW,\n        text: reviewObject.text,\n        userId: reviewObject.userId,\n        userName: reviewObject.userName,\n        datePosted: reviewObject.datePosted\n    };\n};\n\n\nexport const changeRatingAction = (reviewObject: { userId: string, userName: string, rating: number | undefined }) => {\n    return {\n        type: CHANGE_RATING,\n        userId: reviewObject.userId,\n        userName: reviewObject.userName,\n        rating: reviewObject.rating\n    };\n};","import React, {useEffect, useState} from 'react';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport {Box, IconButton} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport styled from 'styled-components';\nimport {connect} from 'react-redux';\nimport {changeRatingAction} from '../../actions/reviewRatingActions';\nimport axios from 'axios';\nimport {MediaType} from '../../constants/dataTypes';\n\ninterface StarRaterProps {\n    readonly: boolean\n\n    // required if readonly === true\n    readOnlyRating?: number;\n    hideReadOnlyLabel?: boolean;\n\n    // required if readonly === false\n    userRating?: number;\n    userId?: string;\n    userName?: string;\n    userHasReviewText?: boolean;\n    mediaId?: string;\n    mediaType?: MediaType;\n}\n\nconst StyledIconButton = styled(IconButton)`\n    padding: 0px !important;\n`;\n\nconst VerticallyCenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst host = window.location.protocol + '//'+ window.location.host;\n\nconst getIcon = (index: number, rating: number | undefined) => {\n    const twoDecimalString = rating?.toFixed(2) || '0.00';\n    const [wholeNumberString, decimalString] = twoDecimalString.split('.');\n    const wholeNumber = parseInt(wholeNumberString);\n    const decimalTimes100 = parseInt(decimalString);\n    if ((index + 1) <= wholeNumber) {\n        return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n    } else if (index === wholeNumber) {\n        const closestFifty = Math.round(decimalTimes100 / 50)*50;\n        if (closestFifty === 0) {\n            return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n        } else if (closestFifty === 50) {\n            return <StarHalfIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n        } else if (closestFifty === 100) {\n            return <StarIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n        }\n    } else {\n        return <StarBorderIcon style={{fill: '#FFCC00'}} fontSize={'small'}/>;\n    }\n};\n\nconst changeRating = (props: any, userId: string, userName: string, rating: number | undefined) => {\n    props.changeRatingAction({ userId, userName, rating });\n    if (!rating && !props.userHasReviewText) {\n        axios.delete(host + `/reviewRatings`\n            + `/${props.mediaType}/${props.mediaId}/${userId}`)\n            .then((res: any) => {\n                console.log('Successfully deleted the reviewRating', res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    } else {\n        axios.put(host + '/reviewRatings/rating',\n            {\n                mediaId: props.mediaId,\n                mediaType: props.mediaType,\n                userId: userId,\n                rating: rating\n            })\n            .then((res: any) => {\n                console.log('Successfully put the rating: ', res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    }\n};\n\nconst StarRater: React.FC<StarRaterProps> = (props: StarRaterProps) => {\n    const [ratedStar, setStar] = useState(0);\n    const { readonly, readOnlyRating, hideReadOnlyLabel, userRating, userId, userName } = props;\n    let twoDecimalRatingString = ''; // TODO set up tooltip functionality\n    if (readonly && readOnlyRating) {\n        twoDecimalRatingString = readOnlyRating.toFixed(2);\n    } else if (userRating) {\n        twoDecimalRatingString = userRating.toFixed(2);\n    }\n\n    useEffect(() => {\n        if (!ratedStar) {\n            setStar(userRating || 0);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [userRating]);\n\n    function clickStar(starIndex: number) {\n        const ratingToSet = ratedStar === starIndex ? starIndex - 1 : starIndex;\n        setStar(ratingToSet);\n        userId && userName && changeRating(props, userId, userName, ratingToSet);\n        // TODO use the api to set the rating (add the media type and media id as props)\n    }\n\n    return (\n        <Box display='flex'>\n            {[...Array(5)].map((star, index) => {\n                return (\n                    <VerticallyCenteredDiv key={index}>\n                        {readonly ?\n                            <>\n                                {\n                                    getIcon(index, readOnlyRating)\n                                }\n                            </>\n                            :\n                            <StyledIconButton size={'small'} onClick={() => clickStar(index + 1)}>\n                                {index < ratedStar ?\n                                    <StarIcon style={{fill: '#FFCC00'}} />\n                                    :\n                                    <StarBorderIcon style={{fill: '#FFCC00'}} />\n                                }\n                            </StyledIconButton>\n                        }\n                    </VerticallyCenteredDiv>\n                );\n            })}\n            <Box ml={1}>{readonly && !hideReadOnlyLabel && twoDecimalRatingString}</Box>\n        </Box>\n    );\n};\n\nexport default connect(null, { changeRatingAction })(StarRater);\n","import styled from 'styled-components';\nimport React, {useEffect, useState} from 'react';\n\nconst StyledButton = styled.button<{ isAddedToUser: boolean }>`\n    background-color: ${({ theme, isAddedToUser }) => isAddedToUser ? theme.palette.grey[300] : theme.palette.primary.light};\n    border: none;\n    outline: none;\n    font-size: 16px;\n    border-radius: 5px;\n    padding: 5px;\n    cursor: pointer;\n    margin: 5px;\n    color: ${({ isAddedToUser }) => isAddedToUser ? 'black' : 'white'};\n`;\n\ninterface AddToUserButtonProps {\n    addLabel: string;\n    removeLabel: string;\n    isAdded: boolean;\n    toBackendOnClick: any;\n}\n\nconst AddToUserButton: React.FC<AddToUserButtonProps> = (props: AddToUserButtonProps) => {\n    const { addLabel, removeLabel,isAdded, toBackendOnClick } = props;\n    const [isAddedToUser, setIsAddedToUser] = useState<boolean>(false);\n\n    useEffect(() => {\n        setIsAddedToUser(isAdded);\n    }, [isAdded]);\n\n    const toggleAddedToUser = () => {\n        if (isAddedToUser) {\n            setIsAddedToUser(false);\n        } else {\n            setIsAddedToUser(true);\n        }\n        toBackendOnClick();\n    };\n\n    return (\n        <StyledButton\n            isAddedToUser={isAddedToUser}\n            onClick={() => toggleAddedToUser()}\n        >\n            {isAddedToUser ? removeLabel : addLabel}\n        </StyledButton>\n    );\n};\n\nexport default AddToUserButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button<{fontSize?: string, color?: string}>`\n    margin-right: 10px;\n    background: none;\n    border: none;\n    color: ${(props) => props.color} || ${({ theme }) => theme.palette.grey[500]};\n    cursor: pointer;\n    font-size: ${(props) => props.fontSize || '16px'};\n\n    &:hover {\n        color: ${({ theme }) => theme.palette.primary.main};\n    }\n`;\n\ninterface ButtonProps {\n    onClick: () => void;\n    label?: string;\n    children?: string;\n    fontSize?: string;\n    color?: string;\n}\n\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n    const {onClick, label, children, color} = props;\n    return (\n        <StyledButton onClick={onClick} color={color}>\n            {label || children}\n        </StyledButton>\n    );\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\nimport {connect} from 'react-redux';\nimport {addReviewAction, editReviewAction, ReviewObjectType} from '../../actions/reviewRatingActions';\nimport axios from 'axios';\n\nconst TextArea = styled.textarea`\n    height: 100px;\n    width: 99%;\n    resize: vertical;\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif\n`;\n\nexport enum CommentEditorAction {\n    Add,\n    Edit\n}\n\nconst host = window.location.protocol + '//'+ window.location.host;\n\nconst CommentEditor: React.FC<any> = (props: any) => {\n    const [currentText, setCurrentText] = useState(props.editCommentProps?.review.text || '');\n\n    const submit = () => {\n        const { editCommentProps, addCommentProps } = props;\n        const now = new Date().toString();\n        switch(props.actionType) {\n            case CommentEditorAction.Add:\n                props.addReviewAction({\n                    text: currentText,\n                    userId: addCommentProps.userId,\n                    userName: addCommentProps.userName,\n                    datePosted: now,\n                    rating: undefined\n                } as ReviewObjectType);\n                axios.put(host + '/reviewRatings/review',\n                    {\n                        mediaId: addCommentProps.mediaId,\n                        mediaType: addCommentProps.mediaType,\n                        userName: addCommentProps.userName,\n                        userId: addCommentProps.userId,\n                        rating: addCommentProps.userRating,\n                        datePosted: now,\n                        text: currentText\n                    })\n                    .then((res: any) => {\n                        console.log(res);\n                    })\n                    .catch((err: any) => {\n                        console.log(err);\n                    });\n                break;\n            case CommentEditorAction.Edit:\n                const userId = editCommentProps.review.userId;\n                props.editReviewAction({\n                    text: currentText,\n                    userId: userId,\n                    userName: editCommentProps.review.userName,\n                    datePosted: now\n                } as ReviewObjectType);\n                axios.put(host + '/reviewRatings/review',\n                    {\n                        mediaId: editCommentProps.mediaId,\n                        mediaType: editCommentProps.mediaType,\n                        userName: editCommentProps.review.userName,\n                        userId: editCommentProps.review.userId,\n                        rating: editCommentProps.userRating,\n                        datePosted: now,\n                        text: currentText\n                    })\n                    .then((res: any) => {\n                        console.log(res);\n                    })\n                    .catch((err: any) => {\n                        console.log(err);\n                    });\n                break;\n            default:\n                return;\n        }\n        props.closeEdit();\n    };\n\n    const changeMessageText = (event: any) => {\n        setCurrentText(event.target.value);\n    };\n\n    // TODO use a better editor - markdown text area? - for the text\n    return (\n        <>\n            <TextArea value={currentText} onChange={changeMessageText}/>\n            <div style={{textAlign: 'right'}}>\n                <Button onClick={submit}>Submit</Button>\n                <Button onClick={props.closeEdit}>Cancel</Button>\n            </div>\n        </>\n    );\n};\n\nexport default connect(null, { addReviewAction, editReviewAction })(CommentEditor);\n","import React, {useEffect, useMemo, useRef, useState} from 'react';\nimport styled from 'styled-components';\nimport {Box, Typography} from '@material-ui/core';\nimport Button from '../Button';\nimport {connect} from 'react-redux';\nimport {deleteReviewAction} from '../../actions/reviewRatingActions';\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\nimport ReactMarkdown from 'react-markdown';\nimport {hasDivOverflown} from '../../utils/styleHelpers';\nimport StarRater from '../StarRater';\nimport axios from 'axios';\n\ninterface CommentBlockProps {\n    review: any,\n    currentUserId: string,\n    isCurrentUserComment?: boolean,\n    mediaId?: string,\n    mediaType?: string,\n    userRating?: number | undefined;\n}\n\nconst Review = styled.div<{ isCurrentUserComment: boolean | undefined }>`\n    border-top: ${({ theme }) => `2px solid ${theme.palette.grey[400]}`};\n    border: ${({ theme, isCurrentUserComment }) => isCurrentUserComment && `2px solid ${theme.palette.grey[400]}`};\n    min-height: 50px;\n    padding: 5px;\n    padding-bottom: 0px;\n`;\n\nconst TopBar = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst ExpandableDiv = styled.div<{ expanded: boolean }>`\n    max-height: ${(props) => props.expanded ? '' : '200px'};\n    overflow: ${(props) => props.expanded ? 'visible' : 'hidden'};\n    position: relative;\n`;\n\nconst ShowMoreButton = styled.button`\n    border: none;\n    box-shadow: 0px 0 5px rgba(0, 0, 0, 0.3);\n    outline: none;\n    background-color: rgba(255, 255, 255, 0.75);\n    text-align: center;\n    height: 30px;\n    cursor: pointer;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    padding: 0px;\n    width: 100%;\n    backdrop-filter: blur(1.5px);\n`;\n\nconst ShowLessButton = styled.button`\n    border: none;\n    outline: none;\n    background-color: rgba(255, 255, 255, 0.90);\n    text-align: center;\n    height: 30px;\n    cursor: pointer;\n    padding: 0px;\n    width: 100%;\n    &:hover {\n        background-color: ${({ theme }) => theme.palette.grey[200]};\n    }\n    margin-bottom: 5px;\n`;\n\nconst VerticallyCenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nfunction deleteReview(props: any) {\n    const userId = props.review.userId;\n    const reviewUserName = props.review.userName;\n    props.deleteReviewAction(userId);\n    if (props.userRating) { // if a rating exists, don't delete from db\n        axios.put('/reviewRatings/review',\n            {\n                mediaId: props.mediaId,\n                mediaType: props.mediaType,\n                userName: reviewUserName,\n                userId: userId,\n                datePosted: '',\n                text: ''\n            })\n            .then((res: any) => {\n                console.log(res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    } else { // if no rating, then delete whole reviewRating document from db\n        axios.delete(`/reviewRatings`\n        + `/${props.mediaType}/${props.mediaId}/${props.review.userId}`)\n            .then((res: any) => {\n                console.log('successfully deleted the reviewRating', res);\n            })\n            .catch((err: any) => {\n                console.log(err);\n            });\n    }\n}\n\nconst CommentBlock: React.FC<CommentBlockProps> = (props: CommentBlockProps) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const [hasOverflow, setHasOverflow] = useState(false);\n    const expandableRef = useRef(null);\n    const { review, currentUserId, isCurrentUserComment } = props;\n    const date = new Date(review.datePosted).toDateString();\n\n    const isAuthor = useMemo(() => {\n        return currentUserId === review.userId;\n    }, [review, currentUserId]);\n\n    useEffect(() => {\n        const isOverflowing = hasDivOverflown(expandableRef);\n        if (isOverflowing) {\n            setHasOverflow(true);\n        } else {\n            setHasOverflow(false);\n        }\n    }, [review]);\n\n    return (\n        <>\n            <Review isCurrentUserComment={isCurrentUserComment}>\n            {isEdit ?\n                <>\n                    <Typography variant={'h5'}><strong>{review.userName}</strong></Typography>\n                    <CommentEditor\n                        actionType={CommentEditorAction.Edit}\n                        closeEdit={() => setIsEdit(false)}\n                        editCommentProps={props}\n                    />\n                </>\n                :\n                <ExpandableDiv expanded={expanded} ref={expandableRef}>\n                    <TopBar>\n                        <Typography variant={'h5'}>\n                            <strong>\n                                {review.userName}\n                            </strong>\n                            {` on ${date}`}\n                        </Typography>\n                        {isAuthor &&\n                            <div>\n                                <Button onClick={() => setIsEdit(true)}>Edit</Button>\n                                <Button onClick={() => deleteReview(props)}>Delete</Button>\n                            </div>\n                        }\n                    </TopBar>\n                    <VerticallyCenteredDiv>\n                        <Box mr={1}>User rated: </Box>\n                        {review.rating ?\n                            <StarRater readonly readOnlyRating={review.rating} hideReadOnlyLabel />\n                            : 'no rating'\n                        }\n                    </VerticallyCenteredDiv>\n                    <ReactMarkdown source={review.text} />\n                    {!expanded && hasOverflow &&\n                        <ShowMoreButton onClick={() => setExpanded(true)}>\n                            <Typography variant={'body1'}>Show more...</Typography>\n                        </ShowMoreButton>\n                    }\n                    {expanded &&\n                        <ShowLessButton onClick={() => setExpanded(false)}>\n                            <Typography variant={'body1'}>Show less</Typography>\n                        </ShowLessButton>\n                    }\n                </ExpandableDiv>}\n            </Review>\n        </>\n    );\n};\n\nexport default connect(null, { deleteReviewAction })(CommentBlock);\n","export function hasDivOverflown(ref: { current: any; }): boolean {\n    const element = ref.current;\n    return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\n","import React, {useEffect, useState} from 'react';\nimport CommentBlock from '../CommentBlock';\nimport {Typography} from '@material-ui/core';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport CommentEditor, {CommentEditorAction} from '../CommentEditor';\nimport Button from '../Button';\nimport { MediaType } from '../../constants/dataTypes';\nimport {connect} from 'react-redux';\nimport Select from '@material-ui/core/Select';\n\ninterface ReviewListProps {\n    mediaId: string,\n    mediaType: MediaType,\n    otherUserReviews: any[],\n    currentUserReview?: any,\n    userId: string,\n    userName: string,\n    userRating?: number | undefined\n}\n\nconst ReviewList: React.FC<ReviewListProps> = (props: ReviewListProps) => {\n    const [addCommentEditorOpen, setAddCommentEditor] = useState(false);\n    const { otherUserReviews, currentUserReview, mediaId, mediaType, userId, userName, userRating } = props;\n\n    let hasAddedReview = !!currentUserReview;\n\n    const [stateReviews, setStateReviews] = useState<Array<any>>([]);\n    const [stateOtherUserReviews, setStateOtherUserReviews] = useState<Array<any>>([]);\n\n    const [dateOrRatingSort, setDateOrRatingSort] = useState<'date' | 'rating'>('date');\n    const [sortDirection, setSortDirection] = useState<'lowest' | 'highest' | 'recent' | 'old'>('recent');\n\n    useEffect(() => {\n        setStateOtherUserReviews(otherUserReviews);\n        const rerenderReviews = otherUserReviews?.slice(0, 9);\n        setStateReviews(rerenderReviews);\n    }, [otherUserReviews]);\n\n    const fetchMoreData = () => {\n        setTimeout(() => {\n            const currentReviewLength = stateReviews.length;\n            const theFetchNum = currentReviewLength + 5;\n            const fetchedReviews = stateOtherUserReviews.slice(0, theFetchNum);\n            setStateReviews(fetchedReviews);\n        }, 1000);\n    };\n\n    useEffect(() => {\n        let sortedOtherReviews = [];\n        switch (sortDirection) {\n            case 'lowest':\n            case 'highest':\n                sortedOtherReviews = stateOtherUserReviews.sort(function(a, b) {\n                    if(a.rating === b.rating) {\n                        const aDate = a.datePosted && new Date(a.datePosted);\n                        const bDate = b.datePosted && new Date(b.datePosted);\n                        if(aDate > bDate) {\n                            return -1;\n                        }\n                        if(aDate < bDate) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                    if(!a.rating) {\n                        return 1;\n                    }\n                    if(!b.rating) {\n                        return -1;\n                    }\n                    if (sortDirection === 'highest') {\n                        return a.rating < b.rating ? 1 : -1;\n                    }\n                    else {\n                        return a.rating < b.rating ? -1 : 1;\n                    }\n                });\n                break;\n            case 'recent':\n            case 'old':\n                sortedOtherReviews = stateOtherUserReviews.sort(function(a, b) {\n                    const aDate = a.datePosted && new Date(a.datePosted);\n                    const bDate = b.datePosted && new Date(b.datePosted);\n                    if(aDate > bDate) {\n                        return sortDirection === 'recent' ? -1 : 1;\n                    }\n                    if(aDate < bDate) {\n                        return sortDirection === 'recent' ? 1 : -1;\n                    }\n                    return 0;\n                });\n                break;\n            default:\n                break;\n        }\n        const slicedSortedReviews = sortedOtherReviews.slice(0, 9);\n        setStateReviews([...slicedSortedReviews]);\n    }, [stateOtherUserReviews, sortDirection, dateOrRatingSort]);\n\n    const onSortTypeChange = (event: any) => {\n        setDateOrRatingSort(event.target.value);\n        if (event.target.value === 'date') {\n            setSortDirection('recent');\n        }\n        if (event.target.value === 'rating') {\n            setSortDirection('highest');\n        }\n    };\n\n    const onSortDirectionChange = (event: any) => {\n        setSortDirection(event.target.value);\n    };\n\n    const totalReviews = hasAddedReview ? otherUserReviews.length + 1 : otherUserReviews.length;\n\n    return (\n        <>\n            <Typography variant={'h3'} gutterBottom>\n                {totalReviews || 0} Total Reviews\n            </Typography>\n            {addCommentEditorOpen ?\n                <>\n                    <Typography variant={'h5'}><strong>{userName}</strong></Typography>\n                    <CommentEditor\n                        actionType={CommentEditorAction.Add}\n                        closeEdit={() => setAddCommentEditor(false)}\n                        addCommentProps={{\n                            mediaType: mediaType,\n                            mediaId: mediaId,\n                            userId: userId,\n                            userName: userName,\n                            userRating: userRating\n                        }}\n                    />\n                </> :\n                <div style={{textAlign: 'right'}}>\n                    {!hasAddedReview &&\n                        <Button onClick={() => setAddCommentEditor(true)}>\n                            Add Review\n                        </Button>\n                    }\n                </div>\n            }\n            {currentUserReview && currentUserReview.text &&\n                <>\n                    <CommentBlock\n                        review={currentUserReview}\n                        currentUserId={userId}\n                        isCurrentUserComment={true}\n                        mediaId={mediaId}\n                        mediaType={mediaType}\n                        userRating={userRating}\n                    />\n                </>\n            }\n            <br/>\n            {otherUserReviews && otherUserReviews.length > 0 &&\n                <>\n                    <div>\n                        <Select variant='outlined'\n                                native\n                                style={{ marginBottom: '5px', marginRight: '5px' }}\n                                onChange={onSortTypeChange}\n                        >\n                            <option value={'date'}>Date</option>\n                            <option value={'rating'}>Rating</option>\n                        </Select>\n                        <Select\n                            variant='outlined'\n                            native\n                            style={{ marginBottom: '5px' }}\n                            onChange={onSortDirectionChange}\n                            value={sortDirection}\n                        >\n                            <option\n                                value={dateOrRatingSort === 'date' ? 'recent' : 'highest'}\n                            >\n                                {dateOrRatingSort === 'date' ? 'Recent' : 'Highest'}\n                            </option>\n                            <option\n                                value={dateOrRatingSort === 'date' ? 'old' : 'lowest'}\n                            >\n                                {dateOrRatingSort === 'date' ? 'Old' : 'Lowest'}\n                            </option>\n                        </Select>\n                    </div>\n                    <InfiniteScroll\n                        dataLength={stateReviews.length}\n                        next={fetchMoreData}\n                        hasMore={stateReviews.length < otherUserReviews.length}\n                        loader={<h4 style={{textAlign: 'center'}}>Loading more reviews...</h4>}\n                        scrollThreshold={1}\n                        endMessage={\n                            <p style={{textAlign: 'center'}}>\n                                <b>No more reviews</b>\n                            </p>\n                        }>\n                        {stateReviews.map((r, index) =>\n                            <CommentBlock\n                                key={index}\n                                review={r}\n                                currentUserId={userId}\n                            />)\n                        }\n                    </InfiniteScroll>\n                </>\n            }\n        </>\n    );\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n    const reviews = state.reviewRatings.filter((r: any) => r.text);\n    let otherUserReviews: any[] = [];\n    let currentUserReview: any = undefined;\n    reviews.forEach((r: any) => {\n        r.userId === ownProps.userId ? currentUserReview = r : otherUserReviews.push(r);\n    });\n    return {\n        otherUserReviews: otherUserReviews,\n        currentUserReview: currentUserReview\n    };\n};\n\nexport default connect(mapStateToProps)(ReviewList);\n","import React, {useEffect, useState} from 'react';\nimport {Button, Menu, MenuItem} from '@material-ui/core';\nimport DetailsIcon from '@material-ui/icons/Details';\nimport CheckIcon from '@material-ui/icons/Check';\nimport axios from 'axios';\n\ninterface FavoritesDropDownProps {\n    allOptions: Array<string>;\n    favoriteOptions: Array<string>;\n    favKey: string;\n    userId: string;\n}\n\nconst FavoritesDropDown = (props: FavoritesDropDownProps) => {\n    const { allOptions, favoriteOptions, favKey, userId } = props;\n    const [favs, setFavs] = useState<Array<string>>([]);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    useEffect(() => {\n        setFavs(favoriteOptions);\n    }, [favoriteOptions]);\n\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (subject: string, isFav: boolean) => {\n        setAnchorEl(null);\n        if (isFav) {\n            const filteredFavs = favs.filter((f) => f !== subject);\n            setFavs(filteredFavs);\n        } else {\n            setFavs([...favs, subject]);\n        }\n        const act = isFav ? 'REMOVE' : 'ADD';\n        const encodedSubject = encodeURIComponent(subject);\n        axios.put(`/users/${favKey}/${encodedSubject}/${userId}`, {\n            action: act\n        }).then((response: any) => {\n            console.log(response);\n        }).catch((error: any) => {\n            console.log('Error adding or removing favorite from dropdown', error);\n        });\n    };\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            <Button\n                onClick={handleClick}\n                endIcon={<DetailsIcon/>}\n                style={{ fontSize: '12px' }}\n            >\n                Add to favorites\n            </Button>\n            <Menu\n                id='simple-menu'\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleMenuClose}\n            >\n                {allOptions.map((o, index) => {\n                    const isFav = favs.includes(o);\n                    return (\n                        <MenuItem key={index} onClick={() => handleClose(o, isFav)} style={{whiteSpace: 'normal'}}>\n                            {o}\n                            {isFav && <CheckIcon fontSize={'small'}/>}\n                        </MenuItem>);\n                })}\n            </Menu>\n        </>\n    );\n};\n\nexport default FavoritesDropDown;\n","import React, {useEffect, useState, useRef} from 'react';\nimport Container from '../Container';\nimport Typography from '@material-ui/core/Typography';\nimport ReviewList from '../../components/ReviewList';\nimport {MediaType, SingleQueryType} from '../../constants/dataTypes';\nimport styled from 'styled-components';\nimport {Box, FormControl, Grid, InputLabel, MenuItem, Select} from '@material-ui/core';\nimport TagsSection from '../../components/TagsSection';\nimport StarRater from '../../components/StarRater';\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport {loadAllReviewsAction} from '../../actions/reviewRatingActions';\nimport AddToUserButton from '../../components/AddToUserButton';\nimport FavoritesDropDown from '../../components/FavoritesDropDown';\nimport Interweave from 'interweave';\nimport {useHistory} from 'react-router';\nimport LoadingSpinner from '../../components/LoadingSign';\n\nconst StyledImage = styled.img`\n    width: 100%;\n    max-width: 300px;\n    margin-bottom: 15px;\n`;\n\nconst ImagePlaceholder = styled.div`\n    width: 100%;\n    max-width: 300px;\n    min-height: 300px;\n    margin-bottom: 15px;\n    background-color: ${({ theme }) => theme.palette.grey[300]};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst StyledGridItem = styled(Grid)`\n    text-align: center;\n`;\n\nconst VerticallyCenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nconst CenteredDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 10px;\n`;\n\nconst StyledFormControl = styled(FormControl)`\n    width: 100%;\n    margin: 5px !important;\n`;\n\nconst MediaPage: React.FC<{}> = (props: any) => {\n    const [mediaType, id] = props.location.pathname.split('/').filter((o: string) => o);\n    const [isForLater, setForLater] = useState(false);\n    const [isFavorite, setFavorite] = useState(false);\n    const [watchedOrRead, setWatchedOrRead] = useState(false);\n    const [mediaObject, setMediaObject] = useState({\n        title: 'No title',\n        id: id,\n        mediaType: MediaType.start,\n        image: '',\n        people: [''],\n        genres: [''],\n        blurb: 'No description'\n    });\n    const [reviewsObject, setReviewsObject] = useState({\n        avgRating: 0,\n        userRating: 0,\n        userHasReviewText: false\n    });\n    const [userLists, setUserLists] = useState({\n        booksRead: [],\n        moviesWatched: [],\n        watchLater: [],\n        readLater: [],\n        favoriteMovies: [],\n        favoriteBooks: [],\n        favoriteAuthors: [],\n        favoriteDirectors: [],\n        favoriteGenres: []\n    });\n\n    const [storyTags, setStoryTags] = useState([]);\n    const [unaddedStoryTags, setUnaddedStoryTags] = useState<Array<{ tagId: string, tagName: string }>>([]);\n    const [addedStoryTags, setAddedStoryTags] = useState<Array<{ tagId: string, tagName: string }>>([]);\n\n    const sessionDataString = sessionStorage.getItem('NS-session-data');\n    const sessionDataObj = sessionDataString && JSON.parse(sessionDataString);\n    const userName = sessionDataObj.username;\n    const userId = sessionDataObj.userId;\n    const history = useHistory();\n    let ref = useRef({numberSubscriptions: 0});\n    const [isLoading, setIsLoading] = useState(false);\n\n    const {\n        title,\n        image,\n        people,\n        blurb,\n        genres\n    } = mediaObject;\n\n    const {\n        avgRating,\n        userRating,\n        userHasReviewText\n    } = reviewsObject;\n\n    useEffect(() => {\n        ref.current.numberSubscriptions++;\n        setIsLoading(true);\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\n        axios.get(`/${mediaRouteType}/${id}`)\n            .then((mediaRes: any) => {\n                const mediaData = mediaRes.data;\n                if (!mediaData.title) {\n                    ref.current.numberSubscriptions = 0;\n                    history.push('/notFound');\n                }\n                if (ref.current.numberSubscriptions) {\n                    setMediaObject({\n                        title: mediaData.title || 'No title',\n                        id: id,\n                        mediaType: mediaType,\n                        image: mediaData.image,\n                        people: mediaData.people,\n                        genres: mediaData.genres,\n                        blurb:  mediaData.blurb || 'No description'\n                    });\n                    ref.current.numberSubscriptions--;\n                    setIsLoading(false);\n                }\n            })\n            .catch((error: any) => {\n                if (error.response.data.message === 'Could not fetch movie') {\n                    ref.current.numberSubscriptions = 0;\n                    history.push('/notFound');\n                }\n            });\n    }, [props, id, mediaType, userId]);\n\n    useEffect(() => {\n        ref.current.numberSubscriptions++;\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\n        axios.get(`/${mediaRouteType}/tags/${id}`)\n            .then((mediaRes: any) => {\n                const mediaData = mediaRes.data;\n                if (ref.current.numberSubscriptions) {\n                    setStoryTags(mediaData.nextStoryTags);\n                    ref.current.numberSubscriptions--;\n                }\n            })\n            .catch((error: any) => {\n                console.log('Error getting media', error);\n            });\n    }, [props, id, mediaType, userId]);\n\n    useEffect(() => {\n        ref.current.numberSubscriptions++;\n        axios.get(`/reviewRatings/${mediaType}/${id}`)\n            .then((reviewRatingRes: any) => {\n                const reviews = reviewRatingRes.data.reviewArray;\n                props.loadAllReviewsAction(reviews);\n                const userRatingReviewArr = reviews.filter((r: any) => r.userId === userId);\n                const userRating = userRatingReviewArr.length > 0 ? userRatingReviewArr[0].rating : undefined;\n                const userHasReviewText = userRatingReviewArr.length > 0 && !!userRatingReviewArr[0].text;\n                if (ref.current.numberSubscriptions) {\n                    setReviewsObject({\n                        avgRating: reviewRatingRes.data.average,\n                        userRating: userRating,\n                        userHasReviewText: userHasReviewText\n                    });\n                    ref.current.numberSubscriptions--;\n                }\n            })\n            .catch((error: any) => {\n                console.log('Error getting reviews', error);\n            });\n    }, [props, id, mediaType, userId]);\n\n    useEffect(() => {\n        ref.current.numberSubscriptions++;\n        axios.get(`/users/userLists/${userId}`)\n            .then((response: any) => {\n                const userLists = response.data;\n                if (ref.current.numberSubscriptions) {\n                    if (mediaType === MediaType.movie) {\n                        if (userLists.watchLater.includes(id)) {\n                            setForLater(true);\n                        }\n                        if (userLists.favoriteMovies.includes(id)) {\n                            setFavorite(true);\n                        }\n                        if (userLists.moviesWatched.includes(id)) {\n                            setWatchedOrRead(true);\n                        }\n                    } else {\n                        if (userLists.readLater.includes(id)) {\n                            setForLater(true);\n                        }\n                        if (userLists.favoriteBooks.includes(id)) {\n                            setFavorite(true);\n                        }\n                        if (userLists.booksRead.includes(id)) {\n                            setWatchedOrRead(true);\n                        }\n                    }\n                    setUserLists({\n                        booksRead: userLists.booksRead,\n                        moviesWatched: userLists.moviesWatched,\n                        watchLater: userLists.watchLater,\n                        readLater: userLists.readLater,\n                        favoriteMovies: userLists.favoriteMovies,\n                        favoriteBooks: userLists.favoriteBooks,\n                        favoriteAuthors: userLists.favoriteAuthors,\n                        favoriteDirectors: userLists.favoriteDirectors,\n                        favoriteGenres: userLists.favoriteGenres\n                    });\n                    ref.current.numberSubscriptions--;\n                }\n            })\n            .catch((error: any) => {\n                console.log('Error getting media', error);\n            });\n    }, [userId, mediaType, id]);\n\n    useEffect(() => {\n        ref.current.numberSubscriptions++;\n        axios.get('/nextStoryTags')\n            .then((res: any) => {\n                const tagData = res.data;\n                const storyTagNames = storyTags.map((t: any) => t.tagName);\n                const unAdded: Array<{ tagId: string, tagName: string }> = [];\n                const added: Array<{ tagId: string, tagName: string }> = [];\n                tagData.forEach((t: any) => {\n                    if (storyTagNames.includes(t.tagName)) {\n                        added.push(t);\n                    } else unAdded.push(t);\n                });\n                if (ref.current.numberSubscriptions) {\n                    setUnaddedStoryTags(unAdded);\n                    setAddedStoryTags(added);\n                    ref.current.numberSubscriptions--;\n                }\n            })\n            .catch((error: any) => {\n                console.log('Error getting all story tags', error);\n            });\n    }, [storyTags]);\n\n    const updateMediaInDB = (tagsArray: any[]) => {\n        const mediaRouteType = mediaType === MediaType.book ? 'books' : 'movies';\n        axios.put(`/${mediaRouteType}/updateNextStoryTags/${id}`,\n            { tagsArray: tagsArray })\n            .then((res: any) => {\n                console.log('updated tags for media', res.data);\n            }).catch((err: any) => {\n                console.log('error setting tags for media', err);\n            });\n    };\n\n    const addOrRemoveCall = (key: string, mediaId: string, action:string) => {\n        axios.put(`/users/${key}/${mediaId}/${userId}`, {\n            action:action\n        }).then((response: any) => {\n            console.log(response);\n        }).catch((error: any) => {\n                console.log('Error getting reviews', error);\n        });\n    };\n\n    const addOrRemoveWatchOrRead = (mediaId: string) => {\n        const key = mediaType === MediaType.movie ? 'moviesWatched' : 'booksRead';\n        if (watchedOrRead) {\n            setWatchedOrRead(false);\n            addOrRemoveCall(key, mediaId, 'REMOVE');\n        } else {\n            setWatchedOrRead(true);\n            addOrRemoveCall(key, mediaId, 'ADD');\n        }\n    };\n\n    const addOrRemoveWatchReadLater = (mediaId: string) => {\n        const key = mediaType === MediaType.movie ? 'watchLater' : 'readLater';\n        if (isForLater) {\n            setForLater(false);\n            addOrRemoveCall(key, mediaId, 'REMOVE');\n        } else {\n            setForLater(true);\n            addOrRemoveCall(key, mediaId, 'ADD');\n        }\n    };\n\n    const addOrRemoveFavorites = (mediaId: string) => {\n        const key = mediaType === MediaType.movie ? 'favoriteMovies' : 'favoriteBooks';\n        if (isFavorite) {\n            setFavorite(false);\n            addOrRemoveCall(key, mediaId, 'REMOVE');\n        } else {\n            setFavorite(true);\n            addOrRemoveCall(key, mediaId, 'ADD');\n        }\n    };\n\n    const handleAddTag = (event: any) => {\n        const newAddedTags = [...addedStoryTags, event.target.value];\n        const filteredDeleteTags = unaddedStoryTags.filter((t: any) => t.tagId !== event.target.value.tagId);\n        setAddedStoryTags(newAddedTags);\n        setUnaddedStoryTags(filteredDeleteTags);\n        updateMediaInDB(newAddedTags);\n    };\n\n    const handleDeleteTag = (event: any) => {\n        const filteredStoryTags = addedStoryTags.filter((t: any) => t.tagId !== event.target.value.tagId);\n        const newDeleteTags = [...unaddedStoryTags, event.target.value];\n        setAddedStoryTags(filteredStoryTags);\n        setUnaddedStoryTags(newDeleteTags);\n        updateMediaInDB(filteredStoryTags);\n    };\n\n    return (\n        <>\n            {isLoading && <LoadingSpinner/>}\n            <Container maxWidth='lg'>\n                <Grid container direction={'row'}  spacing={5}>\n                    <StyledGridItem item sm={3}>\n                        {image ? <StyledImage src={image}/> : <ImagePlaceholder>No Image</ImagePlaceholder>}\n                        <div>\n                            Your rating:\n                            <CenteredDiv>\n                                <StarRater\n                                    userRating={userRating}\n                                    readonly={false}\n                                    userId={userId}\n                                    userName={userName}\n                                    userHasReviewText={userHasReviewText}\n                                    mediaId={id}\n                                    mediaType={mediaType}\n                                />\n                            </CenteredDiv>\n                            <div>\n                                <AddToUserButton\n                                    toBackendOnClick={() => addOrRemoveWatchOrRead(id)}\n                                    isAdded={watchedOrRead}\n                                    addLabel={`Add to ${mediaType === MediaType.movie ? 'watched' : 'read'}`}\n                                    removeLabel={`Remove from ${mediaType === MediaType.movie ? 'watched' : 'read'}`}\n                                />\n                            </div>\n                            <div>\n                                <AddToUserButton\n                                    toBackendOnClick={() => addOrRemoveWatchReadLater(id)}\n                                    isAdded={isForLater}\n                                    addLabel={`Add to ${mediaType === MediaType.movie ? 'watch' : 'read'} later`}\n                                    removeLabel={`Remove from ${mediaType === MediaType.movie ? 'watch' : 'read'} later`}\n                                />\n                            </div>\n                            <div>\n                                <AddToUserButton\n                                    toBackendOnClick={() => addOrRemoveFavorites(id)}\n                                    isAdded={isFavorite}\n                                    addLabel={'Add favorite'}\n                                    removeLabel={'Remove favorite'}\n                                />\n                            </div>\n                        </div>\n                    </StyledGridItem>\n                    <Grid item sm={6}>\n                        <Typography variant='h1'>{title} {mediaType === MediaType.movie ? '(Movie)' : '(Book)'}</Typography>\n                        <Box fontStyle='italic'>\n                            <Typography variant='subtitle1' gutterBottom>\n                                {people?.join(', ')}\n                                {people && people[0] !== '' && <FavoritesDropDown\n                                    allOptions={people}\n                                    favoriteOptions={mediaType === MediaType.movie ? userLists.favoriteDirectors : userLists.favoriteAuthors}\n                                    userId={userId}\n                                    favKey={mediaType === MediaType.movie ? 'favoriteDirectors' : 'favoriteAuthors'}\n                                />}\n                            </Typography>\n                        </Box>\n                        <VerticallyCenteredDiv>\n                            <Typography variant='subtitle2' >Avg members rating: </Typography>\n                            <StarRater readOnlyRating={avgRating} readonly />\n                        </VerticallyCenteredDiv>\n                        <Interweave content={blurb} />\n                    </Grid>\n                    <Grid item sm={3}>\n                        Genres:\n                        <TagsSection tags={genres} singleQueryType={SingleQueryType.genre}/>\n                        <div>\n                            {genres.length > 0 && <FavoritesDropDown\n                                allOptions={genres}\n                                favoriteOptions={userLists.favoriteGenres}\n                                userId={userId}\n                                favKey={'favoriteGenres'}\n                            />}\n                        </div>\n                        Tags:\n                        <TagsSection tagObjects={addedStoryTags} singleQueryType={SingleQueryType.tag}/>\n                        {unaddedStoryTags.length > 0 && <StyledFormControl variant='outlined'>\n                            <InputLabel id='demo-simple-select-outlined-label'>Add a tag</InputLabel>\n                            <Select\n                                labelId='add-tag-label'\n                                id='add-tag'\n                                value={''}\n                                onChange={handleAddTag}\n                                label='Add a tag'\n                            >\n                                {unaddedStoryTags.map((t: any, index) => {\n                                    return <MenuItem key={`${index}_add`} value={t}>{t.tagName}</MenuItem>;\n                                })}\n                            </Select>\n                        </StyledFormControl>}\n                        {addedStoryTags.length > 0 && <StyledFormControl variant='outlined'>\n                            <InputLabel id='demo-simple-select-outlined-label'>Delete a tag</InputLabel>\n                            <Select\n                                labelId='delete-tag-label'\n                                id='delete-tag'\n                                value={''}\n                                onChange={handleDeleteTag}\n                                label='Delete a tag'\n                            >\n                                {addedStoryTags.map((t: any, index) => {\n                                    return <MenuItem key={`${index}_delete`} value={t}>{t.tagName}</MenuItem>;\n                                })}\n                            </Select>\n                        </StyledFormControl>}\n                    </Grid>\n                </Grid>\n            </Container>\n            <Container maxWidth='md'>\n                <ReviewList\n                    mediaId={id}\n                    mediaType={mediaType}\n                    userName={userName}\n                    userId={userId}\n                    userRating={userRating}\n                />\n            </Container>\n        </>\n    );\n};\n\nexport default connect(null, { loadAllReviewsAction })(MediaPage);\n"],"sourceRoot":""}