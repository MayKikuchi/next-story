{"version":3,"sources":["containers/Container/index.tsx","constants/dataTypes.ts","components/TagButton/index.tsx","components/TagsSection/index.tsx","actions/singleSearchPageFilterActions.ts","actions/homePageFilterActions.ts","components/DesktopFilter/index.tsx","components/MobileFilter/index.tsx","components/SearchResultBlock/index.tsx","components/SearchResultsInfiniteScroll/index.tsx","containers/SingleSearchResultPage/index.tsx"],"names":["StyledContainer","styled","Container","MarginContainer","props","maxWidth","children","MediaType","SingleQueryType","StyledTagButton","button","theme","palette","primary","light","secondary","TagButton","label","tagId","singleQueryType","history","useHistory","encodedSubject","encodeURIComponent","onClick","push","StyledTagsSection","div","TagsSection","tags","tagObjects","map","tag","index","key","tagObject","tagName","changeSingleSearchPageFilter","filterName","type","CHANGE_SINGLE_SEARCH_PAGE_FILTER","changeHomePageFilter","CHANGE_HOME_PAGE_FILTER","DeskTopFilters","Tabs","connect","state","singleSearchPageFilter","singleSearchPageFilterReducer","isSearchPage","React","useState","storyType","setStoryType","useEffect","ALL","MOVIES","BOOKS","smDown","value","onChange","event","newType","aria-label","centered","component","MobileFilters","BottomNavigation","mdUp","showLabels","icon","Block","grey","TopBar","StyledImage","img","isSmall","StyledTitle","StyledLink","Link","SearchResultBlock","image","title","blurb","genres","mediaType","mediaId","nextStoryTags","useMediaQuery","goToPage","Grid","container","direction","spacing","item","sm","src","variant","color","gutterBottom","content","genre","SearchResultsInfiniteScroll","resultsToDisplay","hasMore","doNext","style","overflow","dataLength","length","scrollThreshold","next","loader","textAlign","endMessage","result","id","searchUri","decodeURI","location","search","locationSearch","substr","split","singleQueryTypeUri","queryUri","getQueryTypeAndQuery","queryType","query","queryStartIndex","setQueryStartIndex","movieResults","setMovieResults","bookResults","setBookResults","allResults","setAllResults","filterState","setFilterState","hasMoreMovieResults","setHasMoreMovieResults","hasMoreBookResults","setHasMoreBookResults","a","mongoMovies","mongoBooks","axios","get","mongoMovieRes","data","console","log","mongoBookRes","bookData","movieData","maxEndIndex","movieEndIndex","bookEndIndex","i","movieId","movieRes","movieWithNextStoryTags","thisMongoMovieMaybe","filter","m","thisMongoMovie","bookId","bookRes","bookWithNextStoryTags","thisMongoBookMaybe","b","thisMongoBook","movies","books","moviePerson","bookPerson","searchBar","getMediaForTag","then","res","getFromThirdParty","catch","e","getFromThirdPartyForTagsAndPeople","useMemo","Typography"],"mappings":"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","file":"static/js/14.166bd7ac.chunk.js","sourcesContent":["import React, {ReactNode} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledContainer = styled(Container)`\r\n    margin-top: 85px;\r\n    margin-bottom: 85px;\r\n`;\r\n\r\ninterface MarginContainerProps {\r\n    maxWidth: 'lg'\r\n        | 'md'\r\n        | 'sm'\r\n        | 'xl'\r\n        | 'xs'\r\n        | false;\r\n    children: ReactNode;\r\n}\r\n\r\nconst MarginContainer: React.FC<MarginContainerProps> = (props: MarginContainerProps) => {\r\n    return (\r\n        <StyledContainer maxWidth={props.maxWidth}>{props.children}</StyledContainer>\r\n    );\r\n};\r\n\r\nexport default MarginContainer;\r\n","export enum MediaType {\r\n    movie = 'movie',\r\n    book = 'book',\r\n    start = ''\r\n}\r\n\r\nexport enum SingleQueryType {\r\n    bookPerson = 'bookPerson',\r\n    moviePerson = 'moviePerson',\r\n    genre = 'genre',\r\n    tag = 'tag',\r\n    searchBar = 'searchBar'\r\n}\r\n\r\nexport type CardData = {\r\n    title: string,\r\n    id: string,\r\n    mediaType: MediaType,\r\n    image: string, // the url, etc to the image\r\n    genres: string[],\r\n    nextStoryTags: string[],\r\n    people: string,\r\n    blurb: string,\r\n    avgRating: number\r\n}\r\n\r\nexport interface Tag{\r\n  tagId: string;\r\n  tagName: string;\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useHistory} from 'react-router';\r\nimport {SingleQueryType} from '../../constants/dataTypes';\r\n\r\ninterface TagsButtonProps {\r\n    label: string;\r\n    singleQueryType: SingleQueryType;\r\n    tagId?: string; // needed for if the tag button is being used for nextStoryTags\r\n}\r\n\r\nconst StyledTagButton = styled.button`\r\n    border-radius: 7px;\r\n    color: white;\r\n    outline: none;\r\n    border: none;\r\n    margin: 5px;\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.palette.primary.light};\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.palette.secondary.light};\r\n    }\r\n    font-size: 16px;\r\n    padding: 3px 5px 3px 5px;\r\n`;\r\n\r\nconst TagButton: React.FC<TagsButtonProps> = (props: TagsButtonProps) => {\r\n    const { label, tagId, singleQueryType } = props;\r\n    const history = useHistory();\r\n\r\n    const encodedSubject = encodeURIComponent(tagId || label);\r\n    const goToSingleQuery = () => {\r\n        history.push(`/searchResult/param?singleQueryType=${singleQueryType}&query=${encodedSubject}`);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {label &&\r\n                <StyledTagButton\r\n                    onClick={goToSingleQuery}\r\n                >\r\n                    {label}\r\n                </StyledTagButton>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagButton;\r\n","import React from 'react';\r\nimport TagButton from '../TagButton';\r\nimport styled from 'styled-components';\r\nimport {SingleQueryType} from '../../constants/dataTypes';\r\n\r\ninterface TagsSectionProps {\r\n    singleQueryType: SingleQueryType;\r\n    tags?: string[],\r\n    tagObjects?: Array<{ tagId: string, tagName: string }>\r\n}\r\n\r\nconst StyledTagsSection = styled.div`\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst TagsSection: React.FC<TagsSectionProps> = (props: TagsSectionProps) => {\r\n    const { singleQueryType, tags, tagObjects } = props;\r\n    return (\r\n        <StyledTagsSection>\r\n            { tags && tags.map((tag, index) => {\r\n                return (\r\n                    <TagButton\r\n                        key={index}\r\n                        label={tag}\r\n                        singleQueryType={singleQueryType}\r\n                    />);\r\n            }) }\r\n            { !tags && tagObjects && tagObjects.map((tagObject, index) => {\r\n                return (\r\n                    <TagButton\r\n                        key={index}\r\n                        label={tagObject.tagName}\r\n                        singleQueryType={singleQueryType}\r\n                        tagId={tagObject.tagId}\r\n                    />);\r\n            }) }\r\n        </StyledTagsSection>\r\n    );\r\n};\r\n\r\nexport default TagsSection;\r\n","import {\r\n    CHANGE_SINGLE_SEARCH_PAGE_FILTER\r\n} from '../constants/singleSearchPageFilterConstants';\r\n\r\nexport const changeSingleSearchPageFilter = (filterName: string) => {\r\n    return {\r\n        type: CHANGE_SINGLE_SEARCH_PAGE_FILTER,\r\n        filterName: filterName\r\n    };\r\n};\r\n","import {\r\n    CHANGE_HOME_PAGE_FILTER\r\n} from '../constants/homePageFilterConstants';\r\n\r\nexport const changeHomePageFilter = (filterName: string) => {\r\n    return {\r\n        type: CHANGE_HOME_PAGE_FILTER,\r\n        filterName: filterName\r\n    };\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    Tab,\r\n    Tabs,\r\n    Hidden\r\n} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport { changeHomePageFilter } from '../../actions/homePageFilterActions';\r\nimport {\r\n    ALL,\r\n    MOVIES,\r\n    BOOKS\r\n} from '../../constants/homePageFilterConstants';\r\nimport {changeSingleSearchPageFilter} from '../../actions/singleSearchPageFilterActions';\r\n\r\nconst DeskTopFilters = styled(Tabs)`\r\n`;\r\n\r\nconst DesktopFilter = (props: any) => {\r\n    const { singleSearchPageFilter, isSearchPage } = props;\r\n    const [storyType, setStoryType] = React.useState<string>('all');\r\n    const handleChange = (event: React.ChangeEvent<{}>, newType: string) => {\r\n        setStoryType(newType);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isSearchPage && singleSearchPageFilter) {\r\n            setStoryType(singleSearchPageFilter);\r\n        }\r\n    }, [singleSearchPageFilter]);\r\n\r\n    useEffect(() => {\r\n        switch (storyType) {\r\n            case 'all':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(ALL) : props.changeHomePageFilter(ALL);\r\n                break;\r\n            case 'movies':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(MOVIES) : props.changeHomePageFilter(MOVIES);\r\n                break;\r\n            case 'books':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(BOOKS) : props.changeHomePageFilter(BOOKS);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [storyType]);\r\n\r\n    return (\r\n        <Hidden smDown>\r\n            <DeskTopFilters\r\n                value={storyType}\r\n                onChange={handleChange}\r\n                aria-label='home-page-filter'\r\n                centered\r\n            >\r\n                <Tab\r\n                    component='a'\r\n                    label='All'\r\n                    value={'all'}\r\n                />\r\n                <Tab\r\n                    component='a'\r\n                    label='Movies'\r\n                    value={'movies'}\r\n                />\r\n                <Tab\r\n                    component='a'\r\n                    label='Books'\r\n                    value={'books'}\r\n                />\r\n            </DeskTopFilters>\r\n        </Hidden>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        singleSearchPageFilter: state.singleSearchPageFilterReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { changeHomePageFilter, changeSingleSearchPageFilter })(DesktopFilter);\r\n","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    Hidden,\r\n    BottomNavigation,\r\n    BottomNavigationAction\r\n} from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport {connect} from 'react-redux';\r\nimport { changeHomePageFilter } from '../../actions/homePageFilterActions';\r\nimport { changeSingleSearchPageFilter } from '../../actions/singleSearchPageFilterActions';\r\nimport {\r\n    ALL,\r\n    MOVIES,\r\n    BOOKS\r\n} from '../../constants/homePageFilterConstants';\r\n\r\nconst MobileFilters = styled(BottomNavigation)`\r\n    width: 100%;\r\n    position: fixed;\r\n    bottom: 0;\r\n`;\r\n\r\nconst MobileFilter = (props: any) => {\r\n    const { singleSearchPageFilter, isSearchPage } = props;\r\n    const [storyType, setStoryType] = useState<string>(ALL);\r\n    const handleChange = (event: React.ChangeEvent<{}>, newType: string) => {\r\n        setStoryType(newType);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isSearchPage && singleSearchPageFilter) {\r\n            setStoryType(singleSearchPageFilter);\r\n        }\r\n    }, [singleSearchPageFilter]);\r\n\r\n    useEffect(() => {\r\n        switch (storyType) {\r\n            case 'all':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(ALL) : props.changeHomePageFilter(ALL);\r\n                break;\r\n            case 'movies':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(MOVIES) : props.changeHomePageFilter(MOVIES);\r\n                break;\r\n            case 'books':\r\n                isSearchPage ? props.changeSingleSearchPageFilter(BOOKS) : props.changeHomePageFilter(BOOKS);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [storyType]);\r\n\r\n    return (\r\n        <Hidden mdUp>\r\n            <MobileFilters\r\n                value={storyType}\r\n                onChange={handleChange}\r\n                showLabels\r\n                aria-label='home-page-filter'\r\n            >\r\n                <BottomNavigationAction\r\n                    label='All'\r\n                    icon={<HomeIcon />}\r\n                    value={'all'}\r\n                />\r\n                <BottomNavigationAction\r\n                    label='Movies'\r\n                    icon={<MovieIcon />}\r\n                    value={'movies'}\r\n                />\r\n                <BottomNavigationAction\r\n                    label='Books'\r\n                    icon={<BookIcon />}\r\n                    value={'books'}\r\n                />\r\n            </MobileFilters>\r\n        </Hidden>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        singleSearchPageFilter: state.singleSearchPageFilterReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { changeHomePageFilter, changeSingleSearchPageFilter })(MobileFilter);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Grid, Link, useMediaQuery} from '@material-ui/core';\r\nimport {MediaType, SingleQueryType} from '../../constants/dataTypes';\r\nimport TagsSection from '../TagsSection';\r\nimport {useHistory} from 'react-router';\r\nimport Interweave from 'interweave';\r\n\r\ninterface SearchResultBlockProps {\r\n    image: string;\r\n    title: string;\r\n    blurb: string;\r\n    genres: Array<string>;\r\n    mediaType: MediaType;\r\n    mediaId: string;\r\n    nextStoryTags?: Array<any>; // optional\r\n}\r\n\r\nconst Block = styled.div`\r\n    border-top: ${({ theme }) => `2px solid ${theme.palette.grey[400]}`};\r\n    border-bottom: ${({ theme }) => `2px solid ${theme.palette.grey[400]}`};\r\n    min-height: 50px;\r\n    padding: 5px;\r\n    margin-bottom: 2px;\r\n`;\r\n\r\nconst TopBar = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst StyledImage = styled.img<{isSmall: boolean}>`\r\n    max-width: ${(props) => props.isSmall ? '150px' : '100%'};\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst StyledTitle = styled.div`\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst SearchResultBlock: React.FC<SearchResultBlockProps> = (props: SearchResultBlockProps) => {\r\n    const { image, title, blurb, genres, mediaType, mediaId, nextStoryTags } = props;\r\n    const history = useHistory();\r\n    const isSmall = useMediaQuery('(max-width:450px)');\r\n\r\n    const goToPage = () => {\r\n        history.push(`/${mediaType}/${mediaId}`);\r\n    };\r\n\r\n    return (\r\n        <Block>\r\n            <TopBar>\r\n                <Grid container direction={'row'}  spacing={5}>\r\n                    <Grid item sm={3}>\r\n                        <StyledImage src={image} onClick={goToPage} isSmall={isSmall}/>\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <StyledTitle>\r\n                            <StyledLink variant={'h5'} onClick={goToPage} color={'textPrimary'} gutterBottom>\r\n                                <strong>\r\n                                    {title}\r\n                                </strong>\r\n                            </StyledLink>\r\n                        </StyledTitle>\r\n                        <Interweave content={blurb} />\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        Genres:\r\n                        <TagsSection tags={genres} singleQueryType={SingleQueryType.genre}/>\r\n                        {nextStoryTags &&\r\n                            <>\r\n                                Tags:\r\n                                <TagsSection tagObjects={nextStoryTags} singleQueryType={SingleQueryType.tag}/>\r\n                            </>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </TopBar>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default SearchResultBlock;\r\n","import React from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport SearchResultBlock from '../SearchResultBlock';\r\n\r\n\r\ninterface SearchResultsInfiniteScrollProps {\r\n    resultsToDisplay: Array<any>;\r\n    hasMore: boolean;\r\n    doNext: any;\r\n}\r\n\r\nconst SearchResultsInfiniteScroll = (props: SearchResultsInfiniteScrollProps) => {\r\n    const { resultsToDisplay, hasMore, doNext } = props;\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            style={{overflow: 'hidden'}}\r\n            dataLength={resultsToDisplay.length}\r\n            scrollThreshold={1}\r\n            next={doNext}\r\n            hasMore={hasMore}\r\n            loader={<h4 style={{textAlign: 'center'}}>Loading more results...</h4>}\r\n            endMessage={\r\n                <p style={{textAlign: 'center'}}>\r\n                    <b>No more results</b>\r\n                </p>\r\n            }>\r\n            {resultsToDisplay.map((result, index) =>\r\n                <SearchResultBlock\r\n                    key={index}\r\n                    image={result.image}\r\n                    title={result.title}\r\n                    blurb={result.blurb}\r\n                    genres={result.genres}\r\n                    nextStoryTags={result.nextStoryTags}\r\n                    mediaType={result.mediaType}\r\n                    mediaId={result.id}\r\n                />)\r\n            }\r\n        </InfiniteScroll>\r\n    );\r\n};\r\n\r\nexport default SearchResultsInfiniteScroll;\r\n","import React, {useEffect, useMemo, useState} from 'react';\r\nimport Container from '../Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport {SingleQueryType} from '../../constants/dataTypes';\r\nimport SearchResultsInfiniteScroll from '../../components/SearchResultsInfiniteScroll';\r\nimport HomePageDesktopFilter from '../../components/DesktopFilter';\r\nimport HomePageMobileFilter from '../../components/MobileFilter';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    ALL,\r\n    MOVIES,\r\n    BOOKS\r\n} from '../../constants/homePageFilterConstants';\r\nimport {changeSingleSearchPageFilter} from '../../actions/singleSearchPageFilterActions';\r\n\r\nconst getQueryTypeAndQuery = (locationSearch: string) => {\r\n    const trimmedUri = locationSearch.substr(1);\r\n    const [singleQueryTypeUri, queryUri] = trimmedUri.split('&');\r\n    const queryType = singleQueryTypeUri.split('=')[1];\r\n    const query = queryUri.split('=')[1];\r\n    return [queryType, query];\r\n};\r\n\r\nconst SingleSearchResultPage: React.FC = (props: any) => {\r\n    const searchUri = decodeURI(props.location.search);\r\n    const {singleSearchPageFilter} = props;\r\n    const [queryType, query] = getQueryTypeAndQuery(searchUri);\r\n    const increaseIndexBy = 5;\r\n\r\n    const [queryStartIndex, setQueryStartIndex] = useState(0);\r\n\r\n    const [movieResults, setMovieResults] = useState<Array<any>>([]);\r\n    const [bookResults, setBookResults] = useState<Array<any>>([]);\r\n\r\n    const [allResults, setAllResults] = useState<Array<any>>([]);\r\n    const [filterState, setFilterState] = useState<'all' | 'books' | 'movies'>(singleSearchPageFilter);\r\n\r\n    const [hasMoreMovieResults, setHasMoreMovieResults] = useState<boolean>(true);\r\n    const [hasMoreBookResults, setHasMoreBookResults] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n        setFilterState(singleSearchPageFilter);\r\n    }, [singleSearchPageFilter]);\r\n\r\n    useEffect(() => {\r\n        switch (queryType) {\r\n            case SingleQueryType.moviePerson:\r\n                props.changeSingleSearchPageFilter(MOVIES);\r\n                break;\r\n            case SingleQueryType.bookPerson:\r\n                props.changeSingleSearchPageFilter(BOOKS);\r\n                break;\r\n            case SingleQueryType.tag:\r\n            case SingleQueryType.searchBar:\r\n            case SingleQueryType.genre:\r\n            default:\r\n                props.changeSingleSearchPageFilter(ALL);\r\n                break;\r\n        }\r\n    }, [queryType]);\r\n\r\n    async function getMediaForTag() {\r\n        let mongoMovies = [];\r\n        let mongoBooks = [];\r\n        try {\r\n            const mongoMovieRes = await axios.get(`/movies/withTag/${query}`);\r\n            mongoMovies = mongoMovieRes.data;\r\n        } catch (e) {\r\n            console.log('error fetching movies from mongo for tag', e);\r\n        }\r\n        try {\r\n            const mongoBookRes = await axios.get(`/books/withTag/${query}`);\r\n            mongoBooks = mongoBookRes.data;\r\n        } catch (e) {\r\n            console.log('error fetching movies from mongo for tag', e);\r\n        }\r\n        return [mongoMovies, mongoBooks];\r\n    }\r\n\r\n    async function getFromThirdParty(mongoMovies: any[], mongoBooks: any[]) {\r\n        const bookData: any[] = [];\r\n        const movieData: any[] = [];\r\n        const maxEndIndex = queryStartIndex + increaseIndexBy;\r\n        const movieEndIndex = mongoMovies.length >= maxEndIndex ? maxEndIndex : mongoMovies.length;\r\n        const bookEndIndex = mongoBooks.length >= maxEndIndex ? maxEndIndex : mongoBooks.length;\r\n        for(let i = queryStartIndex; i < movieEndIndex; i++){\r\n            const movieId = mongoMovies[i].movieId;\r\n            try {\r\n                const movieRes = await axios.get(`/thirdPartyMovieApi/tmdbMovies/searchOneById/${movieId}`);\r\n                let movieWithNextStoryTags = movieRes.data;\r\n                const thisMongoMovieMaybe = mongoMovies.filter((m) => m.movieId === movieId);\r\n                const thisMongoMovie = thisMongoMovieMaybe.length > 0 && thisMongoMovieMaybe[0];\r\n                if (thisMongoMovie) {\r\n                    movieWithNextStoryTags.nextStoryTags = thisMongoMovie.nextStoryTags;\r\n                } else {\r\n                    movieWithNextStoryTags.nextStoryTags = [];\r\n                }\r\n                movieData.push(movieWithNextStoryTags);\r\n                setAllResults((allResults) => [...allResults, movieWithNextStoryTags]);\r\n                setMovieResults((movieResults) => [...movieResults, movieWithNextStoryTags]);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        for(let i = queryStartIndex; i < bookEndIndex; i++){\r\n            const bookId = mongoBooks[i].bookId;\r\n            try {\r\n                const bookRes = await axios.get(`/thirdPartyBookApi/googleBooks/searchOneById/${bookId}`);\r\n                let bookWithNextStoryTags = bookRes.data;\r\n                const thisMongoBookMaybe = mongoBooks.filter((b) => b.bookId === bookId);\r\n                const thisMongoBook = thisMongoBookMaybe.length > 0 && thisMongoBookMaybe[0];\r\n                if (thisMongoBook) {\r\n                    bookWithNextStoryTags.nextStoryTags = thisMongoBook.nextStoryTags;\r\n                } else {\r\n                    bookWithNextStoryTags.nextStoryTags = [];\r\n                }\r\n                bookData.push(bookWithNextStoryTags);\r\n                setAllResults((allResults) => [...allResults, bookWithNextStoryTags]);\r\n                setBookResults((bookResults) => [...bookResults, bookWithNextStoryTags]);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        if (movieData.length === 0) {\r\n            setHasMoreMovieResults(false);\r\n        }\r\n        if (bookData.length === 0) {\r\n            setHasMoreBookResults(false);\r\n        }\r\n        return [movieData, bookData];\r\n    }\r\n\r\n    async function getFromThirdPartyForTagsAndPeople() {\r\n        let movies: any[] = [];\r\n        let books: any[] = [];\r\n        try {\r\n            const movieRes = await axios.get(`/thirdPartyMovieApi/tmdbMovies/singleQuery/${queryType}/${query}/${queryStartIndex}/${increaseIndexBy}`);\r\n            movies = movieRes.data;\r\n            if (movies.length === 0) {\r\n                setHasMoreMovieResults(false);\r\n            } else {\r\n                setMovieResults((movieResults) => [...movieResults, ...movies]);\r\n                setAllResults((allResults) => [...allResults, ...movies]);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        try {\r\n            const bookRes = await axios.get(`/thirdPartyBookApi/googleBooks/singleQuery/${queryType}/${query}/${queryStartIndex}/${increaseIndexBy}`);\r\n            books = bookRes.data;\r\n            if (books.length === 0) {\r\n                setHasMoreBookResults(false);\r\n            } else {\r\n                setBookResults((bookResults) => [...bookResults, ...books]);\r\n                setAllResults((allResults) => [...allResults, ...books]);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        return [movies, books];\r\n    }\r\n\r\n    useEffect(() => {\r\n        switch (queryType) {\r\n            case SingleQueryType.tag:\r\n                getMediaForTag().then((res) => {\r\n                    const [mongoMovies, mongoBooks] = res;\r\n                    console.log('mongo movies and books:', res);\r\n                    getFromThirdParty(mongoMovies, mongoBooks).then((res) => {\r\n                        const [movieData, bookData] = res;\r\n                        console.log([movieData, bookData]);\r\n                    }).catch((e) => console.log(e));\r\n                }).catch((e) => console.log(e));\r\n                break;\r\n            case SingleQueryType.searchBar:\r\n            case SingleQueryType.genre:\r\n            case SingleQueryType.moviePerson:\r\n            case SingleQueryType.bookPerson:\r\n                getFromThirdPartyForTagsAndPeople().then((res) => {\r\n                    const [movies, books] = res;\r\n                    console.log([movies, books]);\r\n                }).catch((e) => console.log(e));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [queryType, query, queryStartIndex]);\r\n\r\n    const resultsToDisplay = useMemo(() => {\r\n        switch(filterState) {\r\n            case MOVIES:\r\n                return movieResults;\r\n            case BOOKS:\r\n                return bookResults;\r\n            case ALL:\r\n            default:\r\n                return allResults;\r\n        }\r\n    }, [filterState, movieResults, bookResults, allResults]);\r\n\r\n    const doNext = () => {\r\n        setQueryStartIndex(queryStartIndex + increaseIndexBy);\r\n    };\r\n\r\n    const hasMore = useMemo(() => {\r\n        switch(filterState) {\r\n            case MOVIES:\r\n                return hasMoreMovieResults;\r\n            case BOOKS:\r\n                return hasMoreBookResults;\r\n            case ALL:\r\n            default:\r\n                return hasMoreMovieResults || hasMoreBookResults;\r\n        }\r\n    }, [filterState, hasMoreBookResults, hasMoreMovieResults]);\r\n\r\n    return (\r\n        <Container maxWidth='md'>\r\n            <Typography variant='h1'>Search Results</Typography>\r\n            <br/>\r\n            <HomePageDesktopFilter isSearchPage={true} />\r\n            <br/>\r\n            <SearchResultsInfiniteScroll\r\n                resultsToDisplay={resultsToDisplay}\r\n                hasMore={hasMore}\r\n                doNext={doNext}\r\n            />\r\n            <br/>\r\n            <HomePageMobileFilter isSearchPage={true} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        singleSearchPageFilter: state.singleSearchPageFilterReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { changeSingleSearchPageFilter })(SingleSearchResultPage);\r\n"],"sourceRoot":""}