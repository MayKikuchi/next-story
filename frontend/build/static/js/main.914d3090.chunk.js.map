{"version":3,"sources":["serviceWorker.ts","styles/theme.ts","components/LoadingSign/index.tsx","components/LazyLoader/index.tsx","components/ProtectedRoutes/index.tsx","routes.tsx","components/NavigationBar/index.tsx","App.tsx","reducers/reviewRatingReducers.ts","reducers/combinedReducers.ts","index.tsx","constants/reviewRatingConstants.ts"],"names":["Boolean","window","location","hostname","match","theme","createMuiTheme","typography","h1","fontSize","fontFamily","h2","h3","h4","h5","h6","LoadingSign","Container","Typography","variant","LazyLoader","this","props","load","childProps","Comp","lazy","fallback","React","Component","ProtectedRoute","component","sessionDataString","sessionStorage","getItem","sessionDataObj","JSON","parse","loginExpiry","expiry","isLoggedInAndUnexpired","Date","removeItem","rest","render","to","pathname","state","from","Routes","exact","key","path","NavContainer","styled","AppBar","Logo","a","Spacer","div","DesktopNavigationItems","Hidden","SearchArea","DesktopMenu","MobileMenu","DesktopNavigationTabs","Tabs","SearchInputArea","InputBase","SearchButton","Button","NavigationBar","useState","page","setPage","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","history","useHistory","useEffect","push","isMenuOpen","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","event","value","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","ev","renderMobileMenu","Toolbar","href","smDown","aria-label","onChange","newValue","Tab","label","placeholder","inputProps","IconButton","edge","aria-haspopup","color","aria-controls","currentTarget","mdUp","App","reviewRatingReducer","action","type","EDIT_REVIEW","reviewNoEdit","reviewToEdit","forEach","r","userId","editedReview","userName","text","datePosted","editedReviewList","ADD_REVIEW","reviewRatingObject","filter","length","reviewToAdd","newReviewArray","map","DELETE_REVIEW","filteredReviews","undefined","rating","LOAD_REVIEWS_FROM_DB","reviewsArray","CHANGE_RATING","objectExists","changedRatingReviews","newReviewRating","allReducers","combineReducers","reviewRatings","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.914d3090.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n    typography: {\r\n        h1: {\r\n            fontSize: 32,\r\n            fontFamily: '\"Cambria Math\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\r\n        },\r\n        h2: {\r\n            fontSize: 28\r\n        },\r\n        h3: {\r\n            fontSize: 24\r\n        },\r\n        h4: {\r\n            fontSize: 20\r\n        },\r\n        h5: {\r\n            fontSize: 16\r\n        },\r\n        h6: {\r\n            fontSize: 12\r\n        }\r\n    }\r\n});\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst LoadingSign: React.FC<{}> = () => {\r\n  return (\r\n    <Container>\r\n      <Typography variant='h3'>Loading...</Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoadingSign;\r\n","import React, { Suspense, lazy } from 'react';\r\nimport LoadingSign from '../LoadingSign';\r\n\r\nclass LazyLoader extends React.Component<LazyLoaderProps> {\r\n  render() {\r\n    const { load, ...childProps } = this.props;\r\n    const Comp = lazy(() => load());\r\n    return (\r\n      <Suspense fallback={<LoadingSign />}>\r\n        <Comp {...childProps}/>\r\n      </Suspense>\r\n    );\r\n  }\r\n}\r\n\r\ninterface LazyLoaderProps {\r\n  load: () => Promise<{ default: React.ComponentType }>;\r\n}\r\n\r\nexport default LazyLoader;\r\n","import React from 'react';\r\nimport { RouteProps} from 'react-router';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute: React.FC<RouteProps> = (props: any, ...rest) => {\r\n    const Component = props.component;\r\n    const sessionDataString = sessionStorage.getItem('NS-session-data');\r\n    const sessionDataObj = sessionDataString && JSON.parse(sessionDataString);\r\n    const loginExpiry = sessionDataObj?.expiry;\r\n    const isLoggedInAndUnexpired = loginExpiry && new Date(loginExpiry) > new Date();\r\n    if (!isLoggedInAndUnexpired) {\r\n        sessionStorage.removeItem('NS-session-data');\r\n    }\r\n\r\n    return (\r\n      <Route\r\n          {...rest}\r\n          render={(props) => {\r\n              if (isLoggedInAndUnexpired) {\r\n                  return <Component {...props} />;\r\n              } else {\r\n                  return <Redirect to={\r\n                      {\r\n                          pathname: '/login',\r\n                          state: {\r\n                              from: props.location\r\n                          }\r\n                      }\r\n                  } />;\r\n              }\r\n          }}\r\n      />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { Route, Switch } from 'react-router';\r\nimport React from 'react';\r\nimport LazyLoader from './components/LazyLoader';\r\nimport ProtectedRoute from './components/ProtectedRoutes';\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return <>\r\n      <Switch>\r\n        <ProtectedRoute exact key='home' path={'/'}\r\n               component={(props: any) => <LazyLoader load={() => import('./containers/Home')} {...props} />}\r\n        />\r\n        <ProtectedRoute exact key='profile' path='/profile'\r\n               component={(props: any) => <LazyLoader load={() => import('./containers/Profile')} {...props} />}\r\n        />\r\n        <Route exact key='login' path='/login'\r\n               render={(props) => <LazyLoader load={() => import('./containers/Login')} {...props} />}\r\n        />\r\n        <Route exact key='signup' path='/signup'\r\n               render={(props) => <LazyLoader load={() => import('./containers/SignUp')} {...props} />}\r\n        />\r\n        <ProtectedRoute exact key='mediaPage' path='/:mediaType/:id'\r\n               component={(props: any) => <LazyLoader load={() => import('./containers/MediaPage')} {...props} />}\r\n        />\r\n        <ProtectedRoute exact key='nextStoryTagPage' path='/allStoryTags'\r\n               component={(props: any) => <LazyLoader load={() => import('./containers/NextStoryTagsPage')} {...props} />}\r\n        />\r\n        <ProtectedRoute exact key='notFound' path='*'\r\n               component={(props: any) => <LazyLoader load={() => import('./containers/Notfound')} {...props} />}\r\n        />\r\n      </Switch>\r\n    </>;\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    AppBar,\r\n    Menu,\r\n    MenuItem,\r\n    Tab,\r\n    Tabs,\r\n    Toolbar,\r\n    InputBase,\r\n    Button,\r\n    IconButton,\r\n    Hidden\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst NavContainer = styled(AppBar)`\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n`;\r\n\r\nconst Logo = styled.a`\r\n    color: white;\r\n    text-decoration: none;\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n    flex: 1;\r\n`;\r\n\r\nconst DesktopNavigationItems = styled(Hidden)`\r\n`;\r\n\r\nconst SearchArea = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst DesktopMenu = styled(Hidden)`\r\n`;\r\n\r\nconst MobileMenu = styled(Hidden)`\r\n`;\r\n\r\nconst DesktopNavigationTabs = styled(Tabs)`\r\n`;\r\n\r\nconst SearchInputArea = styled(InputBase)`\r\n    background-color: white;\r\n`;\r\n\r\nconst SearchButton = styled(Button)`\r\n`;\r\n\r\nconst NavigationBar = () => {\r\n    const [page, setPage] = React.useState<boolean | string>(false);\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const history = useHistory();\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n        setPage(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        switch (page) {\r\n            case 'explore':\r\n                // do something when the explore tab is clicked\r\n                break;\r\n            case 'tags':\r\n                history.push('/allStoryTags');\r\n                break;\r\n            case 'login':\r\n                history.push('/login');\r\n                break;\r\n            case 'signup':\r\n                // do something when the signup tab is clicked\r\n                history.push('/signup');\r\n                break;\r\n            case 'profile':\r\n                // do something when the profile tab is clicked\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [history, page]);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleDesktopMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const closeMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMenuClose = (event: React.MouseEvent<HTMLElement>, value: string) => {\r\n        setAnchorEl(null);\r\n        setPage(value);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'desktop-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        id={menuId}\r\n        keepMounted\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={isMenuOpen}\r\n        onClose={closeMenu}\r\n        >\r\n            <MenuItem onClick={(ev) => handleMenuClose(ev, 'login')}>Login</MenuItem>\r\n            <MenuItem onClick={(ev) => handleMenuClose(ev, 'signup')}>Signup</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'mobile-menu';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem onClick={(ev) => handleMenuClose(ev, 'tags')}>Tags</MenuItem>\r\n            <MenuItem onClick={(ev) => handleMenuClose(ev, 'explore')}>Explore</MenuItem>\r\n            <MenuItem onClick={(ev) => handleMenuClose(ev, 'login')}>Login</MenuItem>\r\n            <MenuItem onClick={(ev) => handleMenuClose(ev, 'signup')}>Signup</MenuItem>\r\n            <MenuItem onClick={(ev) => handleMenuClose(ev, 'profile')}>Profile</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <NavContainer>\r\n            <Toolbar>\r\n                <Logo href='/'>\r\n                    Next Story\r\n                </Logo>\r\n                <DesktopNavigationItems\r\n                    smDown\r\n                >\r\n                    <DesktopNavigationTabs\r\n                        variant='fullWidth'\r\n                        value={ (page === 'tags' || page === 'explore') ? page : false }\r\n                        aria-label='nav items tabs'\r\n                        onChange={handleChange}\r\n                    >\r\n                        <Tab\r\n                            component='a'\r\n                            label='Tags'\r\n                            value={'tags'}\r\n                        />\r\n                        <Tab\r\n                            component='a'\r\n                            label='Explore'\r\n                            value={'explore'}\r\n                        />\r\n                    </DesktopNavigationTabs>\r\n                </DesktopNavigationItems>\r\n                <Spacer/>\r\n                <SearchArea>\r\n                    <SearchInputArea\r\n                        placeholder='Search…'\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                    />\r\n                    <SearchButton>\r\n                        <SearchIcon/>\r\n                    </SearchButton>\r\n                </SearchArea>\r\n                <Spacer/>\r\n                <DesktopMenu\r\n                    smDown\r\n                >\r\n                    <IconButton\r\n                        edge='end'\r\n                        aria-label='profile'\r\n                        aria-haspopup='true'\r\n                        color='inherit'\r\n                    >\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        edge='end'\r\n                        aria-label='login signup'\r\n                        aria-controls={menuId}\r\n                        aria-haspopup='true'\r\n                        onClick={handleDesktopMenuOpen}\r\n                        color='inherit'\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                </DesktopMenu>\r\n                <MobileMenu\r\n                    mdUp\r\n                >\r\n                    <IconButton\r\n                        aria-label='show more'\r\n                        aria-controls={mobileMenuId}\r\n                        aria-haspopup='true'\r\n                        onClick={handleMobileMenuOpen}\r\n                        color='inherit'\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                </MobileMenu>\r\n            </Toolbar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </NavContainer>\r\n    );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React from 'react';\r\nimport Routes from './routes';\r\nimport NavigationBar from './components/NavigationBar';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n          <NavigationBar/>\r\n          <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","import {\r\n    ADD_REVIEW,\r\n    CHANGE_RATING,\r\n    DELETE_REVIEW,\r\n    EDIT_REVIEW,\r\n    LOAD_REVIEWS_FROM_DB\r\n} from '../constants/reviewRatingConstants';\r\n\r\nconst reviewRatingReducer = (state = [], action: any) => {\r\n    switch (action.type) {\r\n        case EDIT_REVIEW:\r\n            let reviewNoEdit: any[] = [];\r\n            let reviewToEdit = {};\r\n            state.forEach((r: any) => {\r\n                if (r.userId !== action.userId) {\r\n                    reviewNoEdit.push(r);\r\n                } else {\r\n                    const editedReview = {\r\n                        ...r,\r\n                        userName: r.userName,\r\n                        userId: r.userId,\r\n                        text: action.text,\r\n                        datePosted: action.datePosted\r\n                    };\r\n                    reviewToEdit = editedReview;\r\n                }\r\n            });\r\n            const editedReviewList = [reviewToEdit, ...reviewNoEdit];\r\n            return editedReviewList;\r\n        case ADD_REVIEW:\r\n            const reviewRatingObject = state.filter((r: any) => action.userId === r.userId);\r\n            if (reviewRatingObject.length === 0) { // if no object exists\r\n                const reviewToAdd = {\r\n                    userName: action.userName,\r\n                    userId: action.userId,\r\n                    text: action.text,\r\n                    datePosted: action.datePosted\r\n                };\r\n                const newReviewArray = [reviewToAdd, ...state];\r\n                return newReviewArray;\r\n            } else { // if object exists (as a rating)\r\n                return state.map((r: any) => {\r\n                    if (r.userId === action.userId) {\r\n                        return {\r\n                            ...r,\r\n                            text: action.text,\r\n                            datePosted: action.datePosted\r\n                        };\r\n                    } else {\r\n                        return r;\r\n                    }\r\n                });\r\n            }\r\n        case DELETE_REVIEW:\r\n            let filteredReviews: any[] = [];\r\n            state.forEach((r: any) => {\r\n                if (r.userId === action.userId) {\r\n                    if (r.rating !== undefined && r.rating !== 0) {\r\n                        filteredReviews.push({\r\n                            ...r,\r\n                            text: ''\r\n                        });\r\n                    }\r\n                } else {\r\n                    filteredReviews.push(r);\r\n                }\r\n            });\r\n            return [...filteredReviews];\r\n        case LOAD_REVIEWS_FROM_DB:\r\n            return action.reviewsArray;\r\n        case CHANGE_RATING:\r\n            let objectExists = false;\r\n            let changedRatingReviews: any[] = [];\r\n            state.forEach((r: any) => {\r\n                if (r.userId === action.userId) {\r\n                    objectExists = true;\r\n                    if (!(r.text === '' && (action.rating === 0 || action.rating === undefined))) {\r\n                        changedRatingReviews.push({\r\n                            ...r,\r\n                            rating: action.rating\r\n                        });\r\n                    }\r\n                } else { changedRatingReviews.push(r); }\r\n            });\r\n            if (!objectExists) {\r\n                const newReviewRating = {\r\n                    userId: action.userId,\r\n                    userName: action.userName,\r\n                    text: '',\r\n                    datePosted: '',\r\n                    rating: action.rating\r\n                };\r\n                changedRatingReviews = [newReviewRating, ...state];\r\n            }\r\n            return changedRatingReviews;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reviewRatingReducer;\r\n","import { combineReducers } from 'redux';\r\nimport reviewRatings from './reviewRatingReducers';\r\n\r\nconst allReducers = combineReducers({\r\n    reviewRatings\r\n});\r\n\r\nexport default allReducers;\r\n","/* eslint-disable import/first */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { theme } from './styles/theme';\r\nimport { createStore } from 'redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport allReducers from './reducers/combinedReducers';\r\n\r\nconst store = createStore(\r\n    allReducers\r\n    // (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n      <Provider store={store}>\r\n        <MuiThemeProvider theme={theme}>\r\n          <ThemeProvider theme={theme}>\r\n            <BrowserRouter>\r\n              <App />\r\n            </BrowserRouter>\r\n          </ThemeProvider>\r\n        </MuiThemeProvider>\r\n      </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const ADD_REVIEW = 'add_review';\r\nexport const DELETE_REVIEW = 'delete_review';\r\nexport const EDIT_REVIEW = 'edit_review';\r\nexport const LOAD_REVIEWS_FROM_DB = 'load_reviews_from_db';\r\n\r\nexport const CHANGE_RATING = 'change_rating'; // includes add, edit, delete\r\n"],"sourceRoot":""}