// NOTE!!: see the nextStoryInitialData.js file and Mongoose models under /backend/models
{
    "profiles": [{ // use mongoDB's native ObjectId's
        "name": "",
        "type": "general vs admin",
        "avatar": "",
        "message": "",
        "booksRead": [], // for all the lists below just use ids and query for the info
        "moviesWatched": [],
        "favoriteGenres":[],
        "favoriteMovies": [],
        "favoriteBooks": [],
        "favoriteAuthors": [],
        "favoriteDirectors": []
    }],
    "movies": [{
        "movieId":"",
        "nextStoryTags": [], // use mongoDB's native ObjectId's so that we can use mongoose functions like 'populate'
        "ratingReviews": {
            "average": 0,
            "ratingsAndReviews": [
                {
                    "text": "",
                    "userId": "", // use profile._id from mongoDB's native ObjectId's
                    "userName": "",
                    "datePosted": "",
                    "rating": 0
                }]
        }
    }],
    "nextStoryTags" : [{ // use mongoDB's native ObjectId's
        "tagName": "",
        "tagDescription": ""
    }],
    "books": [{
        "id": "",
        "nextStoryTags": [], // use mongoDB's native ObjectId's so that we can use mongoose functions like 'populate'
        "ratingReviews": {
            "average": 0,
            "ratingsAndReviews": [
                {
                    "text": "",
                    "userId": "", // use profile._id from mongoDB's native ObjectId's
                    "userName": "",
                    "datePosted": "",
                    "rating": 0
                }]
        }
    }],
    "popular": [
        {
            "type": "movies vs books",
            "idArray": [] // just use ids and query for the info
        }
    ]
}

